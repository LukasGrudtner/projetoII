administer
configuration
relay
router
communication
command
is
used
to
configure
relay
router
Relay
router
communication
support
is
enabled
by
setting
value
variable
that
stores
address
within
tun
This
variable
is
al
to
all
tunnels
defines
policy
communication
with
relay
By
address
is
set
to
kernel
interprets
value
to
indicate
that
support
relay
router
communication
is
support
is
specified
address
is
used
as
destination
address
when
packets
destined
native
hosts
are
sent
through
tunnel
command
uses
project
private
ioctl
to
set
used
without
any
options
outputs
configuration
Use
option
to
send
packets
to
specific
relay
unicast
address
instead
default
anycast
address
specified
with
option
does
not
specify
policy
receiving
traffic
from
relay
source
relay
router
ceived
packet
is
different
relay
router
may
be
chosen
each
sending
native
Configuration
changes
made
by
using
are
not
persistent
across
changes
will
persist
kernel
only
until
take
tunnel
down
command
supports
following
addr
Use
specified
Enable
support
relay
Use
addr
is
use
default
anycast
Disable
support
relay
Help
following
operands
are
addr
A
specific
relay
unicast
addr
must
be
specified
as
dotted
decimal
representation
error
will
command
will
Example
Printing
Configuration
Status
Use
without
any
options
to
print
configuration
If
relay
router
communication
is
administrator
will
see
following
Relay
Router
communication
support
is
If
router
communication
is
user
will
see
this
Relay
Router
communication
support
is
destination
address
Relay
Router
following
exit
values
are
Successful
An
error
default
installation
root
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Interface
StabilityEvolving
RFC
An
Anycast
Prefix
Relay
Network
Working
RFC
Connection
Domains
via
Network
Working
reports
following
input
is
not
valid
unicast
address
following
example
provides
incorrect
unicast
address
specified
with
option
must
be
valid
unicast
option
requires
argument
following
example
does
not
include
argument
option
requires
following
example
specifies
options
that
are
not
options
specified
are
not
A
usage
message
is
output
to
following
example
specifies
option
without
specifying
option
is
required
conjunction
with
A
usage
message
is
output
to
ioctl
Invalid
argument
following
example
specifies
invalid
address
specified
with
option
must
not
be
class
d
process
accounting
acctprc
reads
standard
input
converts
to
total
accounting
records
tacct
record
acctprc
divides
CPU
time
into
prime
time
time
determines
mean
memory
size
memory
ment
acctprc
then
summarizes
tacct
according
to
user
adds
login
names
corresponding
to
user
summarized
records
are
then
written
to
standard
reads
input
form
scribed
by
adds
login
names
corresponding
to
user
then
writes
each
process
ASCII
line
giving
user
login
prime
CPU
time
CPU
time
mean
memory
size
memory
segment
If
ctmp
is
should
contain
list
login
sessions
sorted
by
user
ID
login
If
this
file
is
not
obtains
login
names
from
password
just
as
acctprc
information
ctmp
helps
distinguish
between
different
login
names
that
share
same
user
From
standard
reads
records
form
written
by
summarizes
according
to
er
ID
then
writes
sorted
summaries
to
standard
output
as
total
accounting
Example
amples
acctprc
command
is
typically
used
as
shown
acctprc
ptacct
commands
are
typically
used
as
shown
ctmp
ptacct
system
password
file
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
SUNWaccu
Although
is
possible
to
distinguish
among
login
names
that
share
user
IDs
commands
run
from
command
is
difficult
to
make
this
distinction
commands
invoked
other
A
command
run
from
is
example
where
might
have
A
more
precise
conversion
can
be
done
using
acctwtmp
program
acctprc
does
not
distinguish
between
users
with
identical
user
A
memory
segment
mean
memory
size
is
unit
measure
number
bytes
logical
memory
ment
particular
During
single
invocation
any
given
commands
can
process
maximum
distinct
sessions
distinct
terminal
lines
distinct
login
names
If
some
point
actual
number
any
one
these
items
exceeds
command
will
not
turnacct
shell
procedures
accounting
number
number
filename
filename
heading
reason
|
off
|
switch
chargefee
can
be
invoked
to
charge
number
units
to
A
record
is
written
to
to
be
merged
with
other
accounting
records
by
ckpacct
should
be
initiated
using
to
periodically
check
size
If
size
exceeds
by
turnacct
will
be
invoked
with
argument
To
avoid
conflict
with
turnacct
switch
ecution
do
not
run
ckpacct
runacct
If
number
free
disk
blocks
file
system
falls
below
ckpacct
will
automatically
turn
off
collection
process
accounting
records
via
off
argument
to
When
least
blocks
are
accounting
will
be
activated
again
next
vocation
This
feature
is
sensitive
to
frequency
which
ckpacct
is
usually
by
dodisk
should
be
invoked
by
to
perform
disk
accounting
lastlogin
is
invoked
by
to
update
which
shows
last
date
which
each
person
logged
monacct
should
be
invoked
once
each
month
each
accounting
number
indicates
which
month
period
If
number
is
not
defaults
to
current
month
This
default
is
useful
monacct
is
to
executed
using
first
day
each
monacct
creates
summary
files
restarts
summary
files
nulladm
creates
filename
with
mode
ensures
that
owner
group
are
It
is
called
by
various
ing
shell
prctmp
can
be
used
to
print
session
record
file
created
by
prdaily
is
invoked
by
to
format
report
previous
accounting
report
resides
where
mmdd
is
month
day
current
daily
accounting
ports
may
be
printed
by
typing
Previous
accounting
reports
can
be
printed
by
using
mmdd
option
specifying
exact
report
date
prtacct
can
be
used
to
format
print
any
total
accounting
shutacct
is
invoked
during
system
shutdown
to
turn
process
accounting
off
append
reason
record
to
startup
can
be
invoked
when
system
is
brought
to
state
to
turn
process
accounting
turnacct
is
interface
to
accton
to
turn
process
accounting
switch
argument
moves
current
to
next
free
name
incr
is
number
starting
with
incrementing
by
one
each
additional
pacct
then
turns
accounting
back
This
procedure
is
called
by
ckpacct
thus
can
be
taken
care
by
command
used
to
keep
pacct
to
reasonable
shutacct
uses
turnacct
to
stop
process
startup
uses
turnacct
to
start
process
following
options
are
This
option
prints
report
exceptional
resource
usage
by
may
be
used
current
ing
data
This
option
prints
report
exceptional
usage
by
login
id
specified
Previous
daily
reports
are
cleaned
up
therefore
inaccessible
after
each
invocation
This
option
uses
acctdusg
to
do
slower
version
disk
accounting
by
login
filenames
specifies
one
more
filesystem
names
where
disk
accounting
will
be
If
filenames
are
disk
ing
will
be
done
these
filesystems
If
option
is
filenames
should
be
mount
points
mounted
If
option
is
filenames
should
be
special
file
names
mountable
Configuration
file
command
Holds
all
accounting
commands
listed
section
this
manual
Contains
limits
exceptional
usage
by
command
name
Contains
limits
exceptional
usage
by
login
ID
Fiscal
reports
directory
Working
directory
Summary
directory
that
contains
information
monacct
File
updated
by
last
login
Accumulator
fees
Current
file
accounting
Used
pacct
gets
large
during
execution
daily
accounting
procedure
History
user
access
administration
information
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
SUNWaccu
See
main
daily
accounting
shell
which
performs
accumulation
disk
accounting
daily
It
also
creates
summaries
command
facl
get
set
Access
Control
List
int
int
int
void
int
int
int
void
functions
get
set
ACL
file
whose
name
is
given
by
pathp
referenced
by
open
file
descriptor
nentries
argument
specifies
how
many
ACL
entries
fit
into
buffer
tion
is
used
to
manipulate
ACL
file
system
following
types
are
supported
Used
by
UFS
file
Used
by
ZFS
file
following
values
cmd
are
SETACL
nentries
ACL
specified
buffer
are
stored
All
directories
path
name
must
be
GETACL
Buffer
aclbufp
is
filled
with
ACL
Read
access
to
file
is
not
all
directories
path
name
must
be
GETACLCNT
number
entries
ACL
is
Read
access
to
file
is
not
all
directories
path
name
must
be
nentries
ACL
specified
buffer
are
stored
All
directories
path
name
must
be
Write
ACL
access
is
required
to
change
Buffer
aclbufp
is
filled
with
ACL
Read
access
to
file
is
required
all
directories
path
name
must
be
number
entries
ACL
is
Read
access
to
file
is
required
all
directories
path
name
must
be
Upon
successful
return
cmd
is
SETACL
If
cmd
is
number
ACL
entries
is
is
returned
errno
is
set
to
indicate
function
will
fail
EACCES
caller
does
not
have
access
to
component
EFAULT
pathp
aclbufp
argument
points
to
illegal
EINVAL
cmd
argument
is
not
cmd
argument
is
SETACL
nentries
is
less
than
cmd
argument
is
SETACL
CL
ACL
specified
aclbufp
is
not
EIO
A
disk
error
has
occurred
while
storing
retrieving
ENOENT
A
component
path
does
not
ENOSPC
cmd
argument
is
GETACL
nentries
is
less
than
number
entries
cmd
argument
is
SETACL
there
is
insufficient
space
file
system
to
store
ENOSYS
cmd
argument
is
SETACL
file
specified
by
pathp
resides
file
system
that
does
not
support
function
is
not
supported
by
this
ENOTDIR
A
component
path
specified
by
pathp
is
not
cmd
argument
is
SETACL
attempt
is
made
to
set
default
ACL
file
type
other
than
ENOTSUP
cmd
argument
is
ACL
is
composed
ACL
cannot
be
translated
into
cmd
argument
is
underlying
filesystem
only
supports
ACLs
composed
tries
ACL
could
not
be
translated
into
EPERM
effective
user
ID
does
not
match
owner
file
process
does
not
have
appropriate
EROFS
cmd
argument
is
SETACL
file
specified
by
pathp
resides
file
system
that
is
mounted
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
tyEvolving
acl
Access
Control
Lists
Access
control
lists
are
discretionary
access
control
mechanisms
that
grant
deny
access
to
files
Two
different
ACL
models
are
supported
Solaris
ACLs
model
is
supported
by
UFS
file
This
model
is
based
withdrawn
ACL
POSIX
specification
that
was
never
It
was
subsequently
withdrawn
by
POSIX
other
model
is
based
standards
working
group
is
approved
standard
from
net
Engineering
Task
Force
ZFS
file
system
uses
provides
richer
semantics
finer
grained
permission
capabilities
than
ACLs
provide
alternative
security
mechanism
to
basic
UNIX
file
permissions
Solaris
Their
purpose
is
to
further
restrict
access
to
files
directories
to
extend
permissions
to
particular
ACLs
can
be
used
to
change
permissions
standard
group
other
class
bits
ACLs
can
give
additional
users
groups
access
to
A
directory
can
also
have
special
kind
ACL
called
default
which
defines
ACL
entries
to
be
inherited
by
descendents
ACLs
have
ACL
entry
called
mask
defines
maximum
permissions
that
can
be
granted
to
additional
user
group
Whenever
file
is
created
mode
is
changed
by
mask
is
It
is
computed
to
be
group
permission
defined
mode
passed
to
ACL
model
uses
standard
rwx
model
traditional
UNIX
An
ACL
is
represented
as
Each
contains
one
ACL
An
ACL
entry
is
represented
by
two
three
If
uid
represents
file
If
gid
is
represents
owning
Represents
file
other
Defines
MAX
permission
to
hand
For
example
to
give
user
joe
read
write
ACL
entry
is
specified
ACL
model
is
based
loosely
Windows
NT
ACL
ACLs
provide
much
richer
ACL
model
than
major
differences
between
ACLs
are
as
ACLs
provide
finer
grained
permissions
than
rwx
ACLs
allow
both
ALLOW
DENY
ACLs
vide
rich
set
inheritance
POSIX
ACLs
also
have
with
model
can
trol
following
inheritance
Whether
inheritance
cascades
to
both
files
directories
only
to
files
In
case
can
indicate
whether
inheritance
is
applied
to
directory
to
just
one
level
cascades
to
all
subdirectories
ACLs
provide
mechanism
hooking
into
audit
Solaris
does
not
support
this
ACLs
enable
adminstrators
to
specify
order
which
ACL
entries
are
With
ACLs
file
system
orders
ACL
entries
into
well
strict
checking
ACL
semantics
can
be
achieved
with
only
some
ACLs
can
be
ed
to
equivalent
Permissions
can
be
specified
three
different
chmod
ACL
verbose
format
uses
words
to
indicate
that
permissions
are
separated
with
forward
slash
Compact
format
uses
permission
letters
positional
format
uses
permission
letters
hypen
to
identify
no
permissions
verbose
mode
abbreviated
form
parentheses
compact
positional
mode
are
described
as
Permission
to
read
data
file
Permission
to
list
contents
Permission
to
modify
data
anywhere
offset
This
includes
ability
to
grow
file
write
to
any
arbitrary
Permission
to
add
new
file
to
ability
to
modify
only
starting
this
permission
is
not
Permission
to
create
subdirectory
to
ability
to
read
extended
attributes
file
do
lookup
extended
attributes
ability
to
create
extended
attributes
write
to
extended
attributes
execute
Permission
to
execute
ability
to
read
basic
attributes
Basic
attributes
are
considered
to
be
stat
level
Allowing
this
access
mask
bit
means
that
entity
can
execute
Permission
to
change
times
associated
with
file
directory
to
arbitrary
delete
Permission
to
delete
Permission
to
delete
file
within
Permission
to
read
Permission
to
write
ACL
ability
to
execute
Permission
to
change
owner
ability
to
execute
synchronize
Permission
to
access
file
locally
server
with
synchronous
reads
this
permission
is
not
following
inheritance
flags
are
supported
by
Inherit
to
all
newly
created
files
Inherit
to
all
newly
created
directories
Placed
does
not
apply
to
directory
only
to
newly
created
created
files
This
flag
requires
to
indicate
what
to
Placed
directories
indicates
that
ACL
entries
should
only
be
inherited
one
level
This
flag
requires
to
indicate
what
to
Indicates
alarm
audit
record
should
be
initiated
upon
successful
Used
with
ACE
Indicates
alarm
audit
record
should
be
initiated
when
access
Used
with
ACE
inherited
ACE
was
No
permission
An
ACL
is
expressed
using
following
File
owner
Group
owner
user
Permissions
specific
user
group
Permissions
specific
group
Permission
inheritance
flags
are
separated
by
ACL
specification
Using
compact
ACL
permissions
are
specified
by
using
unique
letters
to
indicate
Using
positional
ACL
permissions
are
specified
as
positional
arguments
similar
to
ls
hyphen
which
indicates
that
no
permission
is
granted
that
can
be
omitted
only
required
letters
have
to
be
letters
above
are
listed
order
would
be
specified
positional
With
these
letters
can
specify
permissions
following
equivalent
Or
can
remove
scrunch
inheritance
flags
can
also
be
specified
more
compact
as
Solaris
command
interface
supports
manipulation
following
Solaris
utilities
accommodate
both
ACL
chmod
chmod
utility
has
been
enhanced
to
allow
setting
deleting
This
is
achieved
by
tending
argument
to
support
ACL
See
compress
When
file
is
compressed
any
ACL
associated
with
original
file
is
preserved
with
compressed
cp
By
cp
ignores
unless
option
is
When
is
specified
owner
group
mission
modification
access
extended
attributes
applicable
are
cpio
ACLs
are
preserved
when
option
is
find
Find
locates
files
with
ACLs
when
flag
is
ls
By
default
ls
does
not
display
ACL
When
option
is
ACL
is
mv
When
file
is
all
attributes
are
carried
along
with
renamed
When
file
is
moved
across
file
system
ACLs
are
If
ACL
information
cannot
be
move
fails
source
file
is
not
pack
When
file
is
any
ACL
associated
with
original
file
is
preserved
with
packed
rcp
rcp
has
been
enhanced
to
support
A
ACL
is
only
preserved
when
remote
host
supports
tar
ACLs
are
preserved
when
option
is
unpack
When
file
with
ACL
is
unpacked
file
retains
ACL
primary
interfaces
required
to
access
file
system
ACLs
programmatic
level
are
These
functions
support
both
POSIX
draft
ACLs
int
char
int
int
int
functions
retrieves
ACL
file
whose
name
is
given
by
path
enced
by
open
file
descriptor
flag
argument
specifies
whether
trivial
ACL
should
be
When
flag
argument
equals
then
only
ACLs
that
are
not
trivial
are
ACL
is
turned
aclp
void
function
frees
up
memory
allocated
argument
int
char
int
functions
are
used
setting
ACL
file
whose
name
is
given
by
path
referenced
by
open
file
descriptor
aclp
argument
specifies
ACL
to
lates
ACL
into
ACL
when
target
file
systems
supports
No
translation
is
performed
when
trying
to
set
ACL
ACL
supported
file
int
char
function
is
used
to
determine
whether
file
has
trivial
trivialness
ACL
pends
type
ACL
For
implies
ACL
has
greater
than
For
style
implies
that
ACL
has
entries
other
than
heritance
flags
are
ACL
is
not
ordered
manner
that
meets
POSIX
access
control
int
char
function
removes
all
ACLs
from
file
replaces
with
trivial
ACL
based
off
passed
argument
After
replacing
ACL
owner
group
file
are
set
to
values
specified
uid
gid
int
char
char
int
function
converts
internal
ACL
representation
pointed
to
by
aclp
into
external
See
DESCRIPTION
details
about
external
functions
converts
external
representation
into
internal
See
TION
details
about
external
following
examples
demonstrate
how
API
can
be
used
to
perform
basic
operations
Example
Retrieving
Setting
ACL
Use
following
to
retrieve
ACL
set
another
error
aclp
{
error
}
Example
Retrieving
Setting
Any
ACLs
Use
following
to
retrieve
any
including
trivial
set
another
error
{
error
}
Example
Determining
File
has
Trivial
ACL
Use
following
to
determine
file
has
trivial
istrivial
has
trivial
else
has
Example
Removing
all
ACLs
from
File
Use
following
to
remove
all
ACLs
from
set
new
error
adbgen
generate
adb
script
adbgen
makes
possible
to
write
scripts
that
do
not
contain
dependencies
structure
member
input
to
adbgen
is
file
named
that
contains
header
then
null
then
name
finally
adb
adbgen
only
deals
with
one
structure
per
all
member
names
are
assumed
to
be
this
output
adbgen
is
adb
script
adbgen
operates
by
generating
C
program
which
determines
structure
member
offsets
which
turn
generate
adb
header
up
to
null
are
copied
verbatim
into
generated
C
these
are
which
include
headers
containing
relevant
structure
adb
script
part
may
contain
any
valid
adb
commands
may
also
contain
adbgen
each
enclosed
braces
Request
types
Print
structure
request
form
is
ber
is
member
name
structure
given
format
is
any
valid
adb
format
request
any
gen
format
specifiers
as
listed
For
to
print
field
proc
structure
as
decimal
would
write
Print
appropriate
adb
format
character
given
adbgen
format
This
action
takes
data
model
into
request
form
is
{format
valid
adbgen
format
specifiers
{POINTER}
pointer
value
hexadecimal
{LONGDEC}
long
value
decimal
{ULONGDEC}
unsigned
long
value
decimal
{ULONGHEX}
unsigned
long
value
hexadecimal
{LONGOCT}
long
value
octal
{ULONGOCT}
unsigned
long
value
octal
Reference
structure
request
form
is
member
is
member
name
whose
value
is
base
is
adb
register
name
which
contains
base
address
For
to
get
field
proc
would
get
proc
structure
address
adb
example
write
Tell
adbgen
that
offset
is
request
form
is
This
is
useful
after
voking
another
adb
script
which
moves
adb
Get
size
request
form
is
adbgen
replaces
this
request
with
size
This
is
useful
incrementing
pointer
to
step
through
array
Calculate
arbitrary
C
request
form
is
adbgen
replaces
this
request
with
value
This
is
useful
when
more
than
one
structure
is
involved
Get
offset
to
end
request
form
is
This
is
useful
end
structure
to
get
adb
to
align
dot
printing
next
structure
adbgen
keeps
track
movement
adb
dot
generates
adb
code
to
move
forward
backward
as
sary
before
printing
any
structure
member
model
behavior
dot
is
is
sumed
that
first
line
script
is
form
text
that
subsequent
lines
are
form
adb
dot
then
moves
sane
adbgen
does
not
check
script
to
ensure
that
these
tions
are
adbgen
also
checks
size
structure
member
against
size
adb
format
code
warns
are
not
following
option
is
model
Specifies
data
type
model
to
be
used
by
adbgen
This
affects
outcome
{format
specifier}
requests
described
under
DESCRIPTION
offsets
sizes
data
model
can
be
If
option
is
not
data
type
model
defaults
to
following
operand
is
Input
file
that
contains
header
followed
by
null
name
ly
adb
Example
A
sample
adbgen
For
include
file
which
contained
struct
x
{
char
char
int
then
adbgen
file
to
print
file
would
x
After
running
adbgen
as
output
file
script
For
macro
generated
program
using
data
model
as
output
file
script
would
To
invoke
adb
program
adb
scripts
debugging
kernel
adb
scripts
debugging
SPARC
kernel
adb
scripts
debugging
kernel
adb
scripts
debugging
SPARC
kernel
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wesu
Warnings
are
given
about
structure
member
sizes
not
equal
to
adb
format
items
about
badly
formatted
C
compiler
complains
structure
member
that
does
not
exist
is
It
also
complains
about
sand
before
array
these
complaints
may
be
can
be
found
using
option
adb
syntax
is
there
should
be
higher
level
interface
generating
Structure
members
which
are
bit
fields
cannot
be
handled
C
will
not
give
address
bit
dress
is
needed
to
determine
Executable
Linking
Format
files
file
name
is
default
output
file
name
from
link
link
editor
will
make
ecutable
there
were
no
errors
output
file
also
follows
format
file
although
default
file
name
is
Programs
that
manipulate
ELF
files
may
use
library
that
An
overview
file
format
For
more
complete
see
references
given
Linking
ViewExecution
View
ELF
headerELF
header
gram
header
tableProgram
header
table
optional
Section
Section
nSegment
Section
header
tableSection
header
table
optional
An
ELF
header
resides
beginning
holds
describing
Sections
hold
bulk
object
file
information
linking
symbol
relocation
Segments
hold
object
file
information
program
execution
As
segment
may
contain
one
more
A
program
header
tells
system
how
to
create
process
Files
used
to
build
process
age
must
have
program
header
relocatable
files
do
not
need
A
section
header
table
contains
information
describing
Every
section
has
entry
each
entry
gives
tion
such
as
section
section
Files
used
during
linking
must
have
section
header
other
object
files
may
may
not
have
Although
figure
shows
program
header
table
immediately
after
ELF
section
header
table
following
actual
files
may
sections
segments
have
no
specified
Only
ELF
header
has
fixed
position
When
file
is
loaded
into
memory
three
logical
segments
are
set
text
data
segment
data
followed
by
latter
actually
being
initialized
to
all
text
segment
is
not
writable
by
other
processes
are
executing
same
processes
will
share
single
text
data
segment
starts
next
maximal
page
boundary
past
last
text
If
system
supports
more
than
one
page
is
largest
supported
When
process
image
is
part
file
holding
end
text
beginning
data
may
appear
duplicated
chunk
text
that
appears
beginning
data
is
never
is
duplicated
that
operating
system
may
bring
pieces
file
multiples
actual
page
size
without
having
to
realign
beginning
data
section
to
page
first
data
address
is
sum
next
maximal
page
boundary
past
end
text
plus
der
last
text
address
divided
by
maximal
page
If
last
text
address
is
multiple
maximal
page
no
duplication
is
stack
is
automatically
extended
as
data
segment
is
extended
as
requested
by
system
ANSI
C
Guide
Guide
ic
AND
operations
void
void
void
void
void
void
void
void
These
functions
enable
bitwise
AND
bits
to
value
stored
target
to
occur
atomic
variants
these
functions
return
new
value
No
errors
are
These
functions
can
be
called
from
kernel
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Committed
variants
are
substantially
more
expensive
some
platforms
than
versions
that
do
not
return
Do
not
use
unless
need
to
know
new
value
atomic
decrement
operations
void
void
void
void
void
void
void
void
void
void
void
void
These
functions
enable
decrementing
value
stored
target
to
occur
atomic
variants
these
functions
return
new
value
No
errors
are
These
functions
can
be
called
from
kernel
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Committed
variants
are
substantially
more
expensive
some
platforms
than
versions
that
do
not
return
Do
not
use
unless
need
to
know
new
value
atomically
when
decrementing
reference
count
checking
whether
went
to
Creative
Sound
Blaster
OEM
support
driver
provides
support
Creative
Sound
Blaster
products
based
These
chips
are
also
known
as
not
to
be
confused
with
boards
known
to
work
with
this
driver
are
Sound
Blaster
cards
with
model
numbers
This
device
is
capable
surround
kernel
driver
module
kernel
driver
module
SPARC
kernel
driver
module
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
SPARC
audit
subsystem
initialization
script
script
is
used
to
initialize
audit
subsystem
before
audit
deamon
is
This
script
is
configurable
by
system
currently
consists
series
commands
to
set
system
default
download
initial
event
to
class
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Obsolete
Committed
See
section
Solaris
Auditing
System
Administration
Security
functionality
described
this
man
page
is
available
only
Basic
Security
Module
has
been
See
more
This
command
is
Obsolete
may
be
removed
replaced
with
equivalent
functionality
future
release
automount
install
automatic
mount
points
automount
utility
installs
autofs
mount
points
associates
automount
map
with
each
mount
It
starts
daemon
finds
any
entries
local
distributed
automount
maps
daemon
is
not
already
autofs
file
system
monitors
attempts
to
access
directories
within
notifies
daemon
uses
map
to
locate
file
which
then
mounts
point
reference
within
autofs
file
A
map
can
be
assigned
to
autofs
mount
using
entry
map
direct
If
file
system
is
not
accessed
within
appropriate
interval
minutes
by
automountd
daemon
mounts
file
file
determines
locations
all
autofs
mount
By
this
file
contains
three
Master
map
automounter
entry
is
reference
to
external
NIS
master
If
one
then
entries
are
read
as
occurred
place
remaining
entries
master
file
specify
directory
which
autofs
mount
will
be
made
followed
by
automounter
map
to
be
associated
with
Optional
mount
options
may
be
supplied
as
optional
third
field
each
These
options
are
used
any
entries
map
that
do
not
specify
mount
options
automount
command
is
usually
run
without
It
pares
entries
with
current
list
autofs
mounts
removes
dates
autofs
mounts
to
bring
up
to
date
with
At
boot
time
installs
all
autofs
mounts
from
master
may
be
run
to
install
autofs
mounts
new
entries
master
map
direct
to
perform
unmounts
entries
that
have
been
removed
from
these
If
system
is
configured
with
Solaris
Trusted
additional
processing
is
performed
to
facilitate
multilevel
home
directory
A
list
zones
whose
labels
are
dominated
by
current
zone
is
generated
default
automount
maps
are
generated
do
not
currently
These
automount
maps
are
named
where
is
name
each
An
autofs
mount
each
such
map
is
then
regardless
whether
is
explicitly
implicitly
listed
master
Instead
autofs
mounting
standard
zone
uses
file
appended
with
own
zone
Each
map
is
uniquely
named
that
can
be
maintained
shared
by
all
zones
ing
common
name
By
home
directories
zones
are
mounted
under
when
each
zone
is
default
automount
map
specifies
that
path
as
source
directory
lofs
remount
onto
For
file
as
generated
from
higher
level
zone
would
When
home
directory
is
referenced
name
does
not
match
any
other
keys
will
match
this
loopback
mount
If
this
loopback
match
occurs
name
corresponds
to
valid
er
whose
home
directory
does
not
exist
public
directory
is
automatically
created
behalf
following
options
are
duration
Specifies
that
file
system
is
to
remain
mounted
when
not
default
is
Verbose
Notifies
autofs
other
A
simple
map
entry
takes
key
location
where
key
is
full
pathname
directory
to
mount
when
used
direct
simple
name
rectory
indirect
is
list
mount
location
specifies
file
system
from
which
directory
may
be
In
case
simple
NFS
options
that
can
be
used
are
as
specified
location
takes
host
is
name
host
from
which
to
mount
file
pathname
is
absolute
pathname
rectory
to
Options
to
other
file
systems
are
documented
other
reference
manual
Multiple
location
fields
can
be
specified
replicated
NFS
file
which
case
automount
kernel
will
each
try
to
use
that
information
to
increase
If
flag
is
set
map
automountd
mounts
list
locations
that
kernel
may
sorted
by
several
Only
locations
available
mount
time
will
be
thus
be
available
to
When
server
does
not
kernel
will
switch
to
ternate
sort
ordering
automount
is
used
to
determine
how
next
server
is
If
flag
is
not
automount
will
mount
best
single
chosen
by
same
sort
new
servers
will
only
be
chosen
when
unmount
has
been
remount
is
Servers
same
local
subnet
are
given
strongest
servers
local
net
are
given
second
strongest
Among
servers
equally
far
response
times
will
determine
order
no
weighting
factors
are
If
list
includes
server
locations
using
both
NFS
Version
Protocol
NFS
Version
mount
will
choose
only
subset
server
locations
that
all
entries
will
be
same
It
will
choose
servers
with
NFS
Version
Protocol
long
as
NFS
Version
Protocol
server
local
subnet
will
not
be
See
additional
If
each
location
list
shares
same
pathname
then
single
location
may
be
used
with
list
Requests
server
may
be
with
weighting
factor
appended
to
server
name
as
integer
Servers
without
weighting
are
assumed
to
have
value
zero
likely
to
be
sively
higher
values
decrease
chance
being
In
man
hosts
alpha
bravo
have
highest
host
delta
has
Server
proximity
takes
priority
selection
In
example
server
delta
is
same
work
segment
as
others
are
different
network
then
delta
will
be
ing
value
is
weighting
has
effect
only
when
selecting
between
servers
with
same
network
automounter
always
selects
localhost
over
other
servers
same
network
regardless
In
cases
where
each
server
has
different
export
weighting
can
still
be
For
man
A
mapping
can
be
continued
across
input
lines
by
escaping
NEWLINE
with
backslash
Comments
begin
with
number
sign
end
subsequent
ampersand
character
is
expanded
to
value
key
field
entry
which
In
this
jane
expands
to
asterisk
when
supplied
as
key
is
recognized
as
Such
entry
will
match
any
key
not
previously
For
following
entry
appeared
indirect
map
this
would
allow
automatic
mounts
any
remote
file
system
whose
location
could
be
specified
Note
that
wildcard
key
does
not
work
conjunction
with
Client
specific
variables
can
be
used
within
automount
For
appeared
within
tomount
would
expand
to
current
value
host
Supported
variables
ARCHThe
output
archT{
architecture
For
T}
CPUThe
output
uname
processor
For
HOSTThe
output
uname
host
For
KARCHThe
output
arch
uname
kernel
architecture
name
machine
hardware
For
T}
OSNAMEThe
output
uname
OS
For
OSRELThe
output
uname
OS
release
For
example
OSVERSThe
output
uname
OS
For
NATISAThe
output
isainfo
native
instruction
set
architecture
T}
For
PLATFORMThe
output
uname
platform
For
T}
If
reference
needs
to
be
protected
from
affixed
can
surround
variable
name
with
curly
braces
A
multiple
mount
entry
takes
key
initial
is
optional
first
mount
mandatory
all
subsequent
optional
mountpoint
is
taken
as
pathname
relative
to
directory
named
by
If
mountpoint
is
omitted
first
mountpoint
is
Given
entry
indirect
map
beta
All
offsets
must
exist
server
under
automount
will
automatically
mount
as
from
whichever
host
is
nearest
responds
automounter
assumes
NFS
mounts
as
default
file
system
Other
file
system
types
can
be
described
using
fstype
mount
Other
mount
options
specific
to
this
file
system
type
can
be
combined
with
fstype
location
field
must
contain
information
specific
to
file
system
If
location
field
begins
with
colon
character
must
be
to
mount
CD
file
cdrom
to
perform
autofs
src
Use
this
procedure
only
are
not
using
Volume
Mounts
using
CacheFS
are
most
useful
when
applied
to
entire
map
as
map
following
entry
master
map
describes
cached
home
directory
It
assumes
default
location
cache
See
NOTES
section
information
option
An
indirect
map
allows
to
specify
mappings
subdirectories
wish
to
mount
under
directory
cated
command
In
indirect
each
key
consists
simple
name
that
refers
to
one
more
file
systems
that
are
to
be
mounted
as
Entries
direct
map
are
associated
directly
with
autofs
mount
Each
key
is
full
pathname
autofs
mount
direct
map
as
whole
is
not
associated
with
any
single
Direct
maps
are
distinguished
from
indirect
maps
by
For
Master
map
automounter
contents
another
map
can
be
included
within
map
with
entry
form
If
mapname
begins
with
is
assumed
to
be
pathname
local
location
map
is
determined
by
policy
name
service
switch
according
to
entry
automounter
such
as
files
nis
If
name
service
is
then
name
is
assumed
to
be
that
local
file
If
key
being
searched
is
not
found
included
search
continues
with
next
There
are
two
special
maps
map
is
used
with
directory
assumes
that
map
key
is
hostname
NFS
automountd
daemon
dynamically
constructs
map
entry
from
list
exported
file
References
to
directory
under
will
refer
to
sponding
directory
relative
to
hermes
map
cancels
previous
map
directory
This
is
most
useful
cancelling
entries
that
would
otherwise
be
inherited
from
include
To
be
entries
must
be
inserted
before
included
map
Local
maps
that
have
execute
bit
set
file
permissions
will
be
executed
by
automounter
provided
with
key
to
be
looked
up
as
executable
map
is
expected
to
return
content
automounter
map
entry
stdout
no
output
entry
cannot
be
A
direct
map
cannot
be
made
When
initiated
without
automount
consults
master
map
list
autofs
mount
points
It
mounts
any
autofs
mounts
that
are
not
already
unmounts
autofs
mounts
that
have
been
moved
from
master
map
direct
master
map
is
assumed
to
be
called
location
is
determined
by
name
service
switch
Normally
master
map
is
located
initially
as
local
file
automount
daemon
supports
browsability
indirect
This
allows
all
potential
mount
points
to
be
whether
not
are
option
can
be
added
to
any
indirect
autofs
map
to
disable
For
In
this
any
hostnames
would
only
be
visible
after
are
all
potential
mount
points
would
be
visible
under
option
enables
browsability
autofs
file
This
is
default
all
indirect
option
does
not
work
conjunction
with
wildcard
Options
specified
map
are
used
as
default
options
all
entries
that
They
are
ignored
when
map
entries
specify
own
mount
In
some
is
desirable
to
force
noexec
complete
mount
map
This
can
be
done
by
specifying
additional
mount
option
forces
inheritance
all
restrictive
options
noexec
as
well
as
restrict
option
In
this
particular
nosuid
restrict
option
are
inherited
hard
option
is
restrict
option
also
prevents
execution
is
enforced
auto
mounts
established
by
programs
with
fewer
than
all
privileges
available
following
exit
values
are
Successful
An
error
Master
automount
Map
to
support
automounted
home
Supplies
default
values
parameters
automount
See
Name
service
switch
configuration
See
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
autofs
mount
points
must
not
be
hierarchically
automount
does
not
allow
autofs
mount
point
to
be
ated
within
another
autofs
Since
each
direct
map
entry
results
new
autofs
mount
such
maps
should
be
kept
Entries
both
direct
indirect
maps
can
be
modified
any
new
information
is
used
when
mountd
next
uses
map
entry
to
do
New
entries
added
to
master
map
direct
map
will
not
be
useful
until
automount
command
is
run
to
install
as
new
autofs
mount
New
entries
added
to
indirect
map
may
be
used
As
Solaris
listing
autofs
directory
associated
with
indirect
map
shows
all
potential
mountable
attributes
associated
with
potential
mountable
entries
are
real
file
system
attributes
will
only
be
shown
once
file
system
has
been
Default
mount
options
can
be
assigned
to
entire
map
when
specified
as
optional
third
field
master
These
options
apply
only
to
map
entries
that
have
no
mount
Note
that
map
entities
with
options
override
default
as
this
options
do
not
concatenation
feature
is
planned
future
When
operating
map
that
invokes
NFS
default
number
retries
automounter
is
that
single
mount
with
no
Note
that
this
is
significantly
different
from
default
Network
Information
Service
was
formerly
known
as
Sun
Yellow
Pages
functionality
two
remains
automount
service
is
managed
by
service
management
under
service
Administrative
actions
this
such
as
requesting
can
be
performed
using
status
can
be
queried
using
canput
test
room
message
queue
int
Architecture
independent
level
q
Pointer
to
message
searches
through
stream
until
finds
queue
containing
service
routine
where
sage
can
be
until
reaches
end
If
queue
containing
service
routine
is
tested
to
see
there
is
room
message
should
always
be
used
preference
to
If
message
queue
is
not
If
queue
is
can
be
called
from
user
interrupt
Writing
Device
Drivers
STREAMS
Programming
Guide
Drivers
are
responsible
both
testing
queue
with
refraining
from
placing
message
queue
captoinfo
convert
termcap
description
into
terminfo
description
captoinfo
captoinfo
looks
filename
termcap
For
each
one
equivalent
terminfo
description
is
written
to
standard
along
with
any
comments
A
description
which
is
expressed
as
relative
to
another
description
specified
termcap
tc
is
reduced
to
minimum
superset
before
being
If
no
filename
is
then
environment
variable
TERMCAP
is
used
filename
If
TERMCAP
is
full
pathname
to
only
terminal
whose
name
is
specified
environment
variable
TERM
is
ed
from
that
If
environment
variable
TERMCAP
is
not
then
file
is
Display
fields
one
to
fields
are
printed
several
to
with
maximum
width
Display
tracing
information
standard
error
as
program
Specifying
additional
options
displays
more
detailed
Display
version
program
use
standard
error
then
width
Change
output
to
width
compiled
terminal
description
database
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
captoinfo
should
be
used
to
convert
termcap
entries
to
terminfo
entries
termcap
database
may
not
be
supplied
future
cardbus
configuration
files
cardbus
device
drivers
CardBus
bus
share
same
configuration
parameters
with
PCI
CardBus
devices
are
which
means
that
these
devices
provide
configuration
parameters
to
system
that
allow
system
to
identify
device
configuration
parameters
are
represented
form
pairs
that
can
be
trieved
using
DDI
property
See
CardBus
bus
properties
CardBus
devices
are
derived
from
PCI
configuration
driver
uration
files
are
not
necessary
these
On
some
drivers
CardBus
devices
can
use
driver
configuration
files
to
provide
driver
private
ties
through
global
property
See
further
Driver
configuration
files
can
also
be
used
to
augment
override
properties
specific
instance
CardBus
nexus
driver
recognizes
following
reg
An
arbitrary
length
array
where
each
element
array
consists
Each
array
ment
describes
logically
contiguous
mappable
resource
PCI
first
three
values
describe
PCI
address
mappable
first
tuple
contains
following
Bits
register
number
Bits
function
number
Bits
device
number
Bits
bus
number
Bits
address
space
type
identifier
Bits
Register
number
extended
bits
extended
config
Zero
conventional
figuration
T}
address
space
type
identifier
can
be
interpreted
as
space
space
memory
space
address
bus
number
is
unique
identifying
number
assigned
to
each
bus
within
PCI
PCIe
device
number
is
unique
identifying
number
assigned
to
each
device
PCI
PCIe
logical
Bus
A
device
number
is
unique
only
within
set
device
numbers
particular
bus
logical
Each
CardBus
device
can
have
one
to
eight
logically
independent
each
with
own
independent
set
configuration
Each
function
device
is
assigned
function
For
device
with
only
one
function
number
must
be
register
number
fields
select
particular
register
within
set
configuration
registers
corresponding
to
selected
When
address
space
type
identifier
indicates
configuration
register
number
tended
bits
select
registers
extended
configuration
second
third
values
reg
property
specify
address
mappable
resource
within
PCI
PCIe
address
Since
CardBus
is
second
tuple
is
not
third
tuple
corresponds
to
fourth
fifth
values
reg
property
specify
size
mappable
size
is
Since
only
fifth
tuple
is
driver
can
refer
to
elements
this
array
by
construct
kernel
mappings
to
these
addresses
using
index
into
array
is
passed
as
rnumber
argument
At
interrupt
can
use
family
functions
to
access
memory
access
to
configuration
space
is
not
allowed
when
running
interrupts
This
property
consists
element
Valid
interrupt
property
values
are
This
value
is
derived
directly
from
contents
A
driver
should
use
index
value
when
registering
interrupt
handler
with
DDI
interrupt
All
CardBus
devices
support
reg
device
number
function
number
as
derived
from
reg
property
are
used
to
construct
address
part
device
name
under
Only
devices
that
generate
interrupts
support
interrupts
Occasionally
might
be
necessary
to
override
augment
configuration
information
supplied
by
CardBus
This
change
can
be
achieved
by
writing
driver
configuration
file
that
describes
prototype
device
node
fication
containing
additional
properties
For
system
to
merge
prototype
node
specification
into
actual
device
certain
conditions
must
be
name
property
must
be
value
name
property
needs
to
match
binding
name
binding
name
is
name
chosen
by
system
to
bind
driver
to
device
is
alias
ated
with
driver
hardware
node
name
parent
property
must
identify
PCI
bus
PCIe
logical
property
must
identify
format
property
where
DD
is
device
number
F
is
function
If
function
number
is
only
DD
is
ample
Sample
Configuration
File
An
example
configuration
file
called
CardBus
device
driver
called
Copyright
ACME
SCSI
Host
Bus
Adaptor
ident
In
this
property
specifies
SCSI
bus
initiator
id
that
adapter
should
just
one
particular
instance
adapter
installed
name
property
identifies
driver
parent
property
to
identify
particular
bus
card
is
plugged
This
example
uses
full
path
name
to
tify
property
identifies
card
with
device
number
function
number
Two
global
driver
properties
are
also
has
string
value
speed
has
value
M
These
properties
apply
to
all
device
nodes
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Writing
Device
Drivers
IEEE
PCI
Bus
Binding
Binding
cargl
complex
argument
functions
double
complex
float
complex
long
double
double
complex
These
functions
compute
argument
called
phase
with
branch
cut
along
negative
real
These
functions
return
value
argument
interval
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
casinl
complex
arc
sine
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
arc
sine
with
branch
cuts
outside
interval
along
real
These
functions
return
complex
arc
sine
range
strip
mathematically
unbounded
along
inary
axis
interval
along
real
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
casinhl
complex
arc
hyperbolic
sine
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
arc
hyperbolic
sine
with
branch
cuts
outside
interval
along
imaginary
These
functions
return
complex
arc
hyperbolic
sine
range
strip
mathematically
unbounded
along
real
axis
interval
along
imaginary
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
cat
concatenate
display
files
cat
cat
utility
reads
each
file
sequence
writes
standard
cat
file
prints
file
cat
concatenates
writes
results
If
no
input
file
is
cat
reads
from
standard
input
cat
is
associated
with
It
is
invoked
when
cat
is
executed
without
pathname
prefix
pathname
search
finds
cat
copies
each
file
sequence
to
standard
If
no
file
is
file
is
cat
copies
from
standard
input
starting
current
following
options
are
supported
by
Number
as
omit
line
numbers
from
blank
Precede
each
line
output
with
line
cat
is
silent
about
output
is
not
Buffered
output
is
with
exception
NEWLINEs
form
are
printed
ASCII
trol
characters
are
printed
as
where
n
is
corresponding
ASCII
character
range
octal
DEL
character
is
printed
Other
able
characters
are
printed
as
where
x
is
ASCII
character
specified
by
seven
When
used
with
following
options
can
be
A
character
is
printed
end
each
prior
to
Tabs
are
printed
as
form
feeds
to
be
printed
as
options
are
ignored
option
is
not
cat
supports
following
Number
lines
as
with
omit
line
numbers
from
blank
Open
input
files
text
Removes
RETURNs
front
NEWLINEs
some
Equivalent
to
Insert
line
number
beginning
each
Equivalent
to
att
universe
Equivalent
to
Do
not
delay
output
by
Cause
characters
exception
form
to
be
output
as
printable
character
ASCII
control
characters
are
printed
as
where
n
is
corresponding
ASCII
character
range
octal
DEL
character
is
copied
as
Other
characters
are
copied
as
where
x
is
ASCII
character
specified
by
seven
acters
current
locale
are
treated
as
printable
Equivalent
to
Replace
multiple
adjacent
NEWLINE
characters
with
one
Open
output
files
text
Insert
RETURNs
front
NEWLINEs
some
Insert
before
each
cat
is
silent
about
Copies
TABs
as
form
feeds
as
following
operand
is
file
A
path
name
input
If
no
file
is
standard
input
is
If
file
is
cat
reads
from
dard
input
that
point
cat
does
not
close
reopen
standard
input
when
is
referenced
this
accepts
multiple
occurrences
as
See
description
behavior
cat
when
encountering
files
greater
than
equal
to
Gbyte
Example
Concatenating
File
following
command
writes
contents
file
myfile
to
standard
cat
myfile
Example
Concatenating
Two
files
into
One
following
command
concatenates
files
writes
result
to
cat
Example
Concatenating
Two
Arbitrary
Pieces
Input
with
Single
Invocation
When
standard
input
is
following
command
gets
two
arbitrary
pieces
input
from
terminal
with
single
invocation
cat
start
middle
end
file
when
standard
input
is
gets
two
arbitrary
pieces
input
from
terminal
with
single
invocation
If
standard
input
is
regular
cat
start
middle
end
file
would
be
equivalent
to
following
cat
start
middle
end
file
entire
contents
file
would
be
consumed
by
cat
first
time
was
used
as
file
operand
condition
would
be
detected
immediately
when
referenced
second
See
descriptions
following
environment
variables
that
affect
execution
following
exit
values
are
All
input
files
were
output
An
error
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
CSIEnabled
Interface
StabilityCommitted
StandardSee
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Interface
StabilitySee
binding
to
is
interfaces
are
Redirecting
output
cat
onto
one
files
being
read
causes
loss
data
originally
file
being
For
cat
causes
original
data
to
be
catanl
complex
arc
tangent
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
arc
tangent
with
branch
cuts
outside
interval
i
along
imaginary
These
functions
return
complex
arc
tangent
range
strip
mathematically
unbounded
along
imaginary
axis
interval
along
real
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
catanhl
complex
arc
hyperbolic
tangent
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
arc
hyperbolic
tangent
with
branch
cuts
outside
interval
along
real
These
functions
return
complex
arc
hyperbolic
tangent
range
strip
mathematically
unbounded
along
real
axis
interval
along
imaginary
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
catgets
read
program
message
char
int
int
const
char
function
attempts
to
read
message
set
from
message
catalog
identified
by
catd
argument
is
catalog
descriptor
returned
from
earlier
call
to
s
argument
points
to
default
message
string
which
will
be
returned
by
identified
message
catalog
is
not
currently
If
identified
message
is
retrieved
returns
pointer
to
internal
buffer
area
containing
null
terminated
message
If
call
is
unsuccessful
any
returns
pointer
to
s
errno
may
be
set
to
indicate
function
may
fail
EBADF
catd
argument
is
not
valid
message
catalogue
descriptor
open
EBADMSG
number
specifiers
that
appear
message
string
specified
by
s
does
not
match
ber
specifiers
that
appear
message
identified
by
specified
message
EINTR
read
operation
was
terminated
due
to
receipt
no
data
was
EINVAL
message
catalog
identified
by
catd
is
ENOMSG
message
identified
by
is
not
message
function
can
be
used
safely
multithreaded
applications
as
long
as
is
not
being
called
to
change
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
International
Language
Environments
Guide
Guide
catman
create
formatted
files
reference
manual
catman
utility
creates
preformatted
versions
manual
from
input
This
feature
allows
easy
distribution
preformatted
manual
pages
among
group
associated
machines
with
makes
directories
preformatted
manual
pages
independent
unformatted
catman
also
creates
windex
database
file
directories
specified
by
MANPATH
windex
database
file
is
three
column
list
consisting
reference
page
that
keyword
points
line
text
that
describes
purpose
utility
interface
documented
reference
Each
keyword
is
taken
from
comma
separated
list
words
NAME
line
before
reference
page
that
keyword
points
to
is
first
word
NAME
text
after
NAME
line
is
descriptive
text
third
NAME
line
must
be
immediately
preceded
by
page
heading
line
created
by
macro
NOTES
required
Each
manual
page
is
examined
those
whose
preformatted
versions
are
missing
out
date
are
If
any
changes
are
catman
recreates
windex
If
manual
page
is
shadow
that
sources
another
manual
page
symbolic
link
is
made
catx
fmtx
directory
to
appropriate
preformatted
manual
Shadow
files
unformatted
nroff
source
file
are
identified
by
first
line
being
form
Shadow
files
SGML
sources
are
identified
by
string
file
entity
declared
shadow
file
identifies
file
to
be
following
options
are
Create
unformatted
nroff
source
files
appropriate
man
subdirectories
from
SGML
This
option
will
overwrite
any
existing
file
man
directory
same
name
as
SGML
Do
not
create
windex
If
option
is
windex
database
is
not
created
man
man
commands
will
Print
what
would
be
done
instead
doing
Create
troffed
entries
appropriate
fmt
subdirectories
instead
nroffing
into
cat
Only
create
windex
database
that
is
used
by
No
manual
matting
is
directory
Update
manual
pages
located
specified
by
If
option
is
directory
argument
must
not
contain
comma
is
used
to
delineate
section
See
Use
place
standard
manual
page
by
following
operand
is
sections
If
there
is
one
parameter
not
starting
with
is
taken
to
be
space
separated
list
manual
sections
to
be
processed
by
If
this
operand
is
only
manual
sections
list
will
be
For
catman
only
updates
manual
sections
If
specific
sections
are
not
all
sections
man
directory
fied
by
environment
variable
MANPATH
are
TROFF
name
formatter
to
use
when
flag
is
If
not
is
MANPATH
A
list
directories
that
are
processed
by
catman
Each
directory
can
be
followed
by
list
If
value
overrides
as
default
directory
search
file
as
default
section
search
override
these
default
manual
directory
location
raw
nroff
input
files
raw
SGML
input
files
preformatted
nroffed
manual
pages
preformatted
troffed
manual
pages
table
contents
keyword
database
command
script
to
make
windex
database
default
macro
package
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wdoc
CSIEnabled
from
No
such
file
directory
file
outside
parentheses
is
is
referred
to
by
file
inside
target
must
be
relative
to
catman
only
allows
references
to
filenames
that
are
relative
to
directory
No
such
file
directory
A
harmless
warning
message
indicating
that
one
directories
catman
normally
looks
is
No
such
file
directory
A
harmless
warning
message
indicating
catman
came
across
empty
If
who
has
previously
run
catman
to
install
upgrades
operating
entire
directory
structure
should
be
removed
prior
to
running
See
Do
not
catman
to
whatis
database
unless
complete
set
directories
is
man
builds
this
windex
file
based
To
generate
valid
windex
index
catman
has
certain
Within
individual
man
page
catman
requires
two
macro
lines
to
have
specific
These
are
page
heading
line
NAME
macro
requires
least
first
three
that
section
line
starts
off
with
followed
by
man
page
single
section
another
single
date
should
appear
double
quotes
is
specified
as
month
with
month
always
abbreviated
to
first
three
letters
NAME
also
known
as
NAME
must
immediately
follow
with
nothing
tween
those
No
font
changes
are
permitted
NAME
NAME
line
is
immediately
followed
by
line
containing
man
page
then
shadow
page
separated
by
brief
summary
These
elements
should
all
be
one
no
carriage
returns
are
An
example
proper
coding
these
lines
nismatch
Apr
NAME
nisgrep
utilities
searching
tables
tables
catclose
message
catalog
char
int
int
function
opens
message
catalog
returns
message
catalog
name
specifies
name
message
catalog
to
be
If
name
contains
then
name
specifies
complete
pathname
sage
environment
variable
NLSPATH
is
used
must
If
NLSPATH
does
not
exist
message
catalog
cannot
be
opened
any
paths
specified
by
then
default
path
is
In
will
always
succeed
without
checking
default
search
names
message
catalogs
location
filesystem
can
vary
from
one
system
to
Individual
applications
can
choose
to
name
locate
message
catalogs
according
to
own
special
A
mechanism
is
therefore
required
to
specify
where
catalog
NLSPATH
variable
provides
both
location
message
form
search
ing
conventions
associated
with
message
catalog
For
metacharacter
introduces
substitution
where
substitutes
current
setting
LANG
environment
value
oflag
is
value
oflag
is
substitutes
value
name
parameter
passed
to
above
will
search
oflag
is
oflag
is
NLSPATH
variable
will
normally
be
set
up
system
wide
basis
thus
makes
location
naming
conventions
associated
with
message
catalogs
transparent
to
both
programs
full
set
metacharacters
value
name
parameter
passed
to
value
LANG
value
language
element
LANG
value
territory
element
LANG
value
codeset
element
LANG
A
single
LANG
environment
variable
provides
ability
to
specify
requirements
native
local
customs
character
as
ASCII
string
form
A
user
who
speaks
German
as
is
spoken
Austria
has
terminal
which
operates
ISO
would
want
setting
LANG
variable
to
be
With
this
setting
should
be
possible
that
user
to
find
any
relevant
catalogs
should
Should
LANG
variable
not
be
value
as
returned
by
is
If
this
is
default
path
as
defined
is
A
message
catalogue
descriptor
remains
valid
process
until
that
process
closes
successful
call
to
one
exec
A
change
setting
category
may
invalidate
existing
open
If
file
descriptor
is
used
to
implement
message
catalogue
flag
will
be
see
If
value
oflag
argument
is
LANG
environment
variable
is
used
to
locate
catalogue
without
regard
to
If
oflag
argument
is
category
is
used
to
locate
message
function
closes
message
catalog
identified
by
If
file
descriptor
is
used
to
implement
type
that
file
descriptor
will
be
Upon
successful
returns
message
catalog
descriptor
use
subsequent
calls
to
Otherwise
returns
Upon
successful
returns
Otherwise
returns
sets
errno
to
indicate
function
may
fail
EACCES
Search
permission
is
denied
component
path
prefix
message
catalogue
read
sion
is
denied
message
EMFILE
There
are
file
descriptors
currently
open
calling
ENAMETOOLONG
length
pathname
message
catalogue
exceeds
pathname
component
is
longer
than
ENAMETOOLONG
Pathname
resolution
symbolic
link
produced
intermediate
result
whose
length
exceeds
ENFILE
Too
many
files
are
currently
open
ENOENT
message
catalogue
does
not
exist
name
argument
points
to
empty
ENOMEM
Insufficient
storage
space
is
ENOTDIR
A
component
path
prefix
message
catalogue
is
not
function
may
fail
EBADF
catalogue
descriptor
is
not
EINTR
function
was
interrupted
by
functions
can
be
used
safely
multithreaded
as
long
as
is
not
being
called
to
change
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
entry
points
structure
Solaris
DDI
specific
structure
contains
all
entry
points
drivers
that
support
both
character
block
entry
All
leaf
device
drivers
that
support
direct
user
process
access
to
device
should
declare
All
drivers
that
safely
allow
multiple
threads
execution
driver
same
time
must
set
flag
See
If
driver
properly
handles
should
also
set
flag
This
specifies
that
driver
will
use
field
If
driver
returns
EINTR
from
should
also
set
flag
This
lets
framework
know
that
is
safe
driver
to
return
EINTR
when
to
provide
exclusion
call
to
complete
before
calling
function
describes
other
flags
that
can
be
set
is
structure
revision
This
field
must
be
set
to
drivers
should
set
to
following
functions
are
provided
driver
operations
tion
cXXmmapDKI
cXXsegmapDKI
int
int
int
int
int
int
int
buf
int
char
int
int
int
struct
uio
int
struct
uio
int
int
int
int
int
int
int
int
struct
as
unsigned
int
unsigned
int
unsigned
int
int
short
int
short
struct
pollhead
int
int
char
int
struct
streamtab
streams
information
int
int
int
struct
int
struct
Writing
Device
Drivers
STREAMS
Programming
Guide
Guide
raw
set
input
mode
controls
cc
int
int
int
int
function
enables
character
input
This
overrides
any
previous
call
to
function
turns
stty
flag
ICANON
function
sets
line
canonical
mode
turns
stty
flag
ICANON
without
touching
ISIG
IXON
function
sets
line
canonical
mode
turns
stty
flags
IXON
all
function
sets
character
input
mode
turns
stty
flags
IXON
all
This
mode
provides
maximum
control
over
It
is
important
to
remember
that
terminal
may
may
not
be
character
mode
operation
Most
active
programs
require
to
be
On
these
functions
return
return
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
cbrtl
cube
root
functions
double
float
long
double
double
These
functions
compute
real
cube
root
argument
On
successful
these
functions
return
cube
root
If
x
is
NaN
is
If
x
is
x
is
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
ccosl
complex
cosine
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
cosine
These
functions
return
complex
cosine
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
ccoshl
complex
hyperbolic
cosine
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
hyperbolic
cosine
These
functions
return
complex
hyperbolic
cosine
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
dirs
change
working
directory
cd
chdir
cd
chdir
pushd
|
popd
dirs
cd
cd
old
new
utility
changes
current
directory
context
cd
utility
This
is
contrast
to
version
built
into
has
no
effect
invoking
process
can
be
used
to
determine
whether
not
given
directory
can
be
set
as
current
Bourne
shell
cd
changes
current
directory
to
shell
parameter
HOME
is
default
shell
parameter
CDPATH
defines
search
path
directory
containing
Alternative
directory
names
are
separated
by
colon
default
path
is
current
rent
directory
is
specified
by
null
path
which
can
appear
immediately
after
equal
sign
between
colon
delimiters
anywhere
else
path
If
argument
begins
with
search
path
is
not
each
directory
path
is
searched
cd
must
have
execute
permission
Because
new
process
is
created
to
execute
each
cd
would
be
ineffective
were
written
as
mal
is
recognized
by
is
internal
to
chdir
is
just
another
way
to
call
If
dir
is
not
C
shell
cd
uses
value
shell
parameter
HOME
as
new
working
If
dir
specifies
complete
path
starting
with
dir
becomes
new
working
If
case
cd
tries
to
find
designated
directory
relative
to
one
paths
specified
by
CDPATH
shell
CDPATH
has
same
syntax
similar
semantics
PATH
shell
cd
must
have
execute
permission
Because
new
process
is
created
to
execute
each
cd
would
be
ineffective
were
written
as
normal
is
recognized
by
is
internal
to
chdir
changes
working
directory
to
directory
If
no
argument
is
change
to
home
directory
If
dir
is
relative
pathname
not
found
current
check
those
directories
listed
cdpath
If
dir
is
name
shell
variable
whose
value
starts
with
change
to
directory
named
by
that
pushd
pushes
directory
onto
directory
With
no
exchange
top
two
Rotate
entry
to
top
stack
cd
to
dir
Push
current
working
directory
onto
stack
change
to
popd
pops
directory
stack
cd
to
new
top
elements
directory
stack
are
numbered
from
starting
Discard
entry
dirs
prints
directory
most
recent
to
first
directory
shown
is
current
With
produce
unabbreviated
use
~
notation
is
Korn
shell
cd
command
can
be
two
In
first
form
changes
current
directory
to
If
arg
is
directory
is
changed
to
previous
shell
variable
HOME
is
default
environment
variable
PWD
is
set
to
current
If
PWD
is
OLDPWD
environment
able
shall
also
be
changed
to
value
old
working
that
current
working
directory
ly
prior
to
call
to
change
directory
shell
variable
CDPATH
defines
search
path
directory
containing
Alternative
directory
names
are
separated
by
colon
default
path
is
null
rent
current
directory
is
specified
by
null
path
which
can
appear
immediately
after
equal
sign
between
colon
delimiters
anywhere
else
path
If
arg
begins
with
then
search
path
is
not
each
directory
path
is
searched
If
cd
attempts
to
change
rectories
to
pathname
formed
by
concatenation
value
slash
Handles
operation
Symbolic
link
components
are
not
resolved
before
nents
are
Handles
operand
Symbolic
link
components
are
resolved
before
components
are
If
both
options
are
last
option
to
be
invoked
is
used
other
is
If
nor
is
operand
is
handled
second
form
cd
substitutes
string
new
string
old
current
directory
PWD
tries
to
change
to
this
new
cd
command
cannot
be
executed
by
Because
new
process
is
created
to
execute
each
cd
would
be
ineffective
were
written
as
normal
is
recognized
by
is
internal
to
rn
following
operands
are
directory
An
absolute
relative
pathname
directory
that
becomes
new
working
tion
relative
pathname
by
cd
depends
CDPATH
environment
If
directory
name
from
CDPATH
is
absolute
pathname
new
working
directory
is
written
to
standard
output
as
there
is
no
See
descriptions
following
environment
variables
that
affect
execution
CDPATH
A
list
pathnames
that
refer
to
If
directory
operand
does
not
begin
with
slash
first
component
is
not
dot
cd
searches
directory
relative
to
each
ry
named
CDPATH
order
new
working
directory
sets
to
first
matching
directory
An
empty
string
place
directory
pathname
represents
current
If
CDPATH
is
not
is
treated
as
were
empty
HOME
name
home
used
when
no
directory
operand
is
OLDPWD
A
pathname
previous
working
used
by
PWD
A
pathname
current
working
set
by
cd
after
has
changed
to
that
following
exit
values
are
returned
by
directory
was
successfully
An
error
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Interface
StabilityCommitted
StandardSee
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Interface
StabilityUncommitted
cdio
control
operations
set
commands
described
below
are
used
to
perform
audio
specific
Basic
to
these
cdio
ioctl
requests
are
definitions
Several
specific
commands
can
report
addresses
LBA
Block
format
MSF
READ
READ
READ
TABLE
OF
CONTENTS
commands
have
this
LBA
format
represents
logical
block
address
absolute
address
field
offset
from
beginning
current
track
expressed
as
number
logical
blocks
track
relative
address
MSF
format
represents
physical
address
written
expressed
as
sector
count
relative
to
beginning
medium
beginning
current
following
controls
do
not
have
any
additional
data
passed
into
received
from
CDROMSTART
This
spins
up
disc
seeks
to
last
address
CDROMSTOP
This
spins
down
CDROMPAUSE
This
pauses
current
audio
play
CDROMRESUME
This
resumes
paused
audio
play
CDROMEJECT
This
ejects
caddy
with
CDROMCLOSETRAY
This
closes
caddy
with
following
controls
require
pointer
to
structure
that
with
data
being
passed
into
CDROMPLAYMSF
This
command
requests
drive
to
output
audio
signals
specified
starting
dress
continue
audio
play
until
specified
ending
address
is
address
is
MSF
third
argument
this
call
is
pointer
to
type
struct
definition
play
audio
msf
structure
struct
{
unsigned
char
starting
unsigned
char
starting
unsigned
char
unsigned
char
ending
minute
unsigned
char
ending
second
unsigned
char
ending
frame
CDROMREADTOCENTRY
ioctl
request
may
be
used
to
obtain
start
time
An
approximation
finish
time
can
be
obtained
by
using
CDROMREADTOCENTRY
ioctl
request
to
retrieve
start
time
track
following
current
leadout
track
is
next
consecutive
track
after
last
audio
start
time
leadout
track
may
be
used
as
effective
finish
time
last
audio
CDROMPLAYTRKIND
This
command
is
similar
to
starting
ending
address
is
third
argument
call
is
pointer
to
type
struct
definition
play
audio
structure
struct
{
unsigned
char
starting
unsigned
char
starting
unsigned
char
ending
track
unsigned
char
ending
index
CDROMVOLCTRL
This
command
controls
audio
output
SCSI
command
allows
control
up
to
four
current
implementation
supported
drive
only
uses
channel
nel
valid
values
volume
control
are
between
with
value
indicating
maximum
third
argument
call
is
pointer
to
struct
which
contains
output
volume
definition
audio
volume
control
structure
struct
{
unsigned
char
unsigned
char
unsigned
char
unsigned
char
following
controls
take
pointer
that
will
have
data
returned
to
user
program
from
CDROMREADTOCHDR
This
command
returns
header
table
contents
header
consists
starting
tracking
number
ending
track
number
These
two
numbers
are
returned
through
pointer
struct
While
disc
can
start
any
all
tracks
between
first
last
tracks
are
contiguous
ascending
definition
read
toc
header
structure
struct
{
unsigned
char
starting
unsigned
char
ending
CDROMREADTOCENTRY
This
command
returns
information
specified
third
argument
function
call
is
pointer
to
type
struct
caller
needs
to
supply
track
number
address
This
command
will
return
adr
ctrl
starting
address
MSF
format
LBA
data
mode
track
is
data
ctrl
field
specifies
whether
track
is
data
definition
read
toc
entry
structure
struct
{
unsigned
char
unsigned
char
unsigned
char
unsigned
char
union
{
struct
{
unsigned
char
unsigned
char
unsigned
char
}
int
}
unsigned
char
To
get
information
from
leadout
following
value
is
appropriate
Leadout
track
To
get
information
from
data
following
value
is
appropriate
Data
track
following
values
are
appropriate
LBA
format
MSF
format
CDROMSUBCHNL
This
command
reads
Q
data
current
subchannel
data
includes
track
index
absolute
track
relative
control
data
audio
All
information
is
returned
through
pointer
to
struct
caller
needs
to
supply
address
format
returned
struct
{
unsigned
char
unsigned
char
unsigned
char
unsigned
char
unsigned
char
unsigned
char
union
{
struct
{
unsigned
char
unsigned
char
unsigned
char
}
int
}
union
{
struct
{
unsigned
char
unsigned
char
unsigned
char
}
int
}
following
values
are
valid
audio
status
field
returned
from
READ
SUBCHANNEL
Audio
status
not
Audio
play
operation
Audio
play
operation
Audio
play
successfully
Audio
play
stopped
due
to
No
current
audio
status
to
CDROMREADOFFSET
This
command
returns
absolute
address
first
track
last
session
third
argument
call
is
pointer
to
CDROMCDDA
This
command
returns
data
subcode
third
argument
call
is
pointer
to
type
struct
In
addition
to
allocating
memory
supplying
caller
needs
to
supply
starting
address
transfer
length
terms
number
blocks
to
be
subcode
caller
also
needs
to
issue
CDROMREADTOCENTRY
to
find
out
which
tracks
contain
data
before
issuing
this
Definition
structure
struct
{
unsigned
int
unsigned
int
unsigned
char
signifies
starting
logical
block
signifies
transfer
length
length
block
depends
which
is
explained
To
get
subcode
information
related
to
following
values
are
appropriate
data
with
no
data
with
sub
Q
data
with
all
All
subcode
To
allocate
memory
related
to
subcode
following
values
are
appropriate
each
data
block
data
with
no
subcode
bytes
data
with
sub
Q
code
bytes
data
with
all
subcode
bytes
All
subcode
only
bytes
CDROMCDXA
This
command
returns
XA
Extended
data
according
to
XA
third
argument
call
is
pointer
to
type
struct
In
tion
to
allocating
memory
supplying
caller
needs
to
supply
starting
address
transfer
length
terms
number
caller
also
needs
to
issue
CENTRY
to
find
out
which
tracks
contain
XA
data
before
issuing
this
Definition
XA
structure
struct
{
unsigned
int
unsigned
int
unsigned
char
To
get
proper
XA
following
values
are
appropriate
XA
data
only
XA
all
sector
data
XA
data
with
error
flags
data
To
allocate
memory
related
to
XA
following
values
are
appropriate
each
data
block
XA
data
only
bytes
XA
all
sector
data
bytes
XA
data
with
error
flags
data
bytes
CDROMSUBCODE
This
command
returns
raw
subcode
data
P
~
W
are
described
see
SEE
to
initiator
while
target
is
playing
third
argument
call
is
pointer
to
type
struct
caller
needs
to
supply
transfer
length
terms
number
blocks
allocate
memory
subcode
memory
allocated
should
be
multiple
bytes
depending
transfer
Definition
subcode
structure
struct
{
unsigned
int
next
group
controls
get
set
various
drive
CDROMGBLKMODE
This
command
returns
current
block
size
used
by
third
argument
call
is
pointer
to
CDROMSBLKMODE
This
command
requests
drive
to
change
from
current
block
size
to
requested
block
third
argument
call
is
integer
which
contains
requested
block
This
command
operates
mode
caller
must
ensure
that
no
other
processes
can
ate
same
device
before
issuing
this
behavior
subsequent
to
this
remains
caller
is
still
constrained
to
read
raw
device
block
boundaries
block
To
set
proper
block
following
values
are
bytes
bytes
bytes
bytes
bytes
bytes
bytes
bytes
bytes
bytes
bytes
CDROMGDRVSPEED
This
command
returns
current
drive
third
argument
call
is
pointer
to
CDROMSDRVSPEED
This
command
requests
drive
to
change
current
drive
speed
to
requested
drive
This
speed
setting
is
only
applicable
when
reading
data
third
argument
is
integer
which
contains
requested
drive
To
set
drive
to
proper
following
values
are
Note
that
these
numbers
are
only
accurate
when
reading
byte
drive
will
automatically
switch
to
normal
speed
when
playing
audio
tracks
will
switch
back
to
speed
setting
when
accessing
Phillips
Sony
System
Description
Compact
Disc
Digital
Phillips
Sony
System
Description
Compact
Disc
Read
Only
Sony
System
Description
Volume
File
Structure
Information
ISO
document
SCSI
Multimedia
Version
some
block
sizes
CDROMSBLKMODE
are
designed
new
drives
might
not
work
some
older
CDROMCDXA
CDROMSUBCODE
will
return
error
transfer
length
exceeds
valid
limits
as
determined
length
can
not
exceed
bytes
same
striction
is
enforced
as
no
limit
was
published
these
older
drives
bytes
is
reasonable
all
Note
that
enforcing
this
limit
does
not
imply
that
values
passed
below
this
limit
will
tually
be
applicable
each
every
piece
interface
to
this
device
is
preliminary
subject
to
change
future
Programs
should
be
written
modular
fashion
that
future
changes
can
be
easily
cdrw
CD
read
write
cdrw
cdrw
cdrw
cdrw
cdrw
all
|
session
|
fast
cdrw
cdrw
cdrw
cdrw
cdrw
command
provides
ability
to
create
data
audio
This
command
also
provides
ability
to
tract
audio
tracks
from
audio
CD
to
create
data
CD
DVD
device
must
be
to
create
CD
DVD
with
cdrw
cdrw
searches
CD
DVD
writer
connected
to
unless
specify
device
with
If
cdrw
finds
single
such
uses
that
device
as
default
CD
DVD
writer
When
more
than
one
CD
DVD
writer
is
connected
to
use
option
to
indicate
which
device
is
device
name
can
be
specified
one
following
name
used
by
volume
such
as
cdrom
Using
option
provides
list
CD
DVD
For
instructions
adding
device
to
see
When
creating
data
cdrw
uses
mode
Use
option
to
specify
file
that
tains
data
to
write
CD
If
specify
this
cdrw
reads
data
from
standard
In
data
is
typically
prepared
by
using
mkisofs
command
to
convert
file
file
information
into
High
Sierra
format
used
See
examples
that
include
use
this
cdrw
can
create
data
DVDs
devices
using
images
generated
from
These
disks
can
be
mounted
as
HSFS
file
When
making
data
cdrw
uses
mode
which
closes
media
when
writing
is
completed
prevents
any
further
sessions
from
being
image
should
be
prepared
advance
when
writing
image
to
DVD
media
DAO
mode
quires
that
size
image
be
known
Use
option
to
create
audio
Single
multiple
audio
files
can
be
specified
with
this
All
audio
files
should
be
supported
audio
Currently
approved
formats
sun
Sun
files
with
data
Red
Book
CDDA
form
wav
RIFF
files
with
data
Red
Book
CDDA
form
cda
files
having
raw
CD
audio
data
bit
PCM
stereo
KHz
sample
rate
byte
aur
files
having
raw
CD
data
byte
order
If
no
audio
format
is
cdrw
tries
to
identify
audio
file
format
based
file
case
characters
extension
is
If
format
is
specified
using
is
assumed
to
be
audio
file
type
all
files
using
option
closes
session
after
writing
audio
tracks
to
be
written
should
be
specified
single
command
cdrw
can
also
be
used
extracting
audio
data
from
audio
CD
with
CD
should
have
tracks
Red
Book
CDDA
By
output
format
is
based
file
A
user
can
specify
aur
output
format
with
cdrw
can
be
used
to
copy
single
session
data
Red
Book
audio
When
copying
cdrw
looks
specified
source
If
no
source
device
is
specified
when
using
current
CD
writer
is
assumed
to
be
cdrw
extracts
track
tracks
into
temporary
file
looks
blank
writable
media
current
CD
If
no
media
is
insert
blank
writable
CD
media
current
CD
If
default
temporary
directory
does
not
have
enough
alternate
directory
can
be
specified
by
using
Users
have
to
erase
media
before
can
be
With
following
flavors
erasing
are
currently
session
Erases
last
fast
Minimally
erases
all
Erases
entire
If
session
erasing
type
is
cdrw
erases
last
If
there
is
only
one
session
recorded
data
audio
created
by
this
then
session
erasing
only
erases
portion
that
is
leaving
behind
blank
This
is
faster
than
erasing
entire
For
DVD
using
sion
erases
whole
fast
erasing
type
minimally
erases
entire
media
by
removing
PMA
TOC
first
It
does
not
erase
user
data
subsequent
tracks
media
is
treated
as
were
blank
If
complete
erase
is
media
is
use
all
all
erasing
type
should
be
used
is
multisession
last
session
is
not
disk
status
is
want
to
erase
With
this
type
cdrw
erases
entire
media
does
not
support
To
simply
write
new
image
onto
cdrw
formats
overwrites
existing
media
You
can
list
CD
DVD
writers
by
using
particular
can
get
blanking
status
table
contents
by
using
option
also
prints
information
about
last
start
address
next
writable
This
along
with
can
be
used
to
ate
multisession
Refer
to
man
SUNWfsman
package
more
following
options
are
Creates
audio
At
least
one
name
must
be
A
CD
can
not
have
more
than
audio
no
more
than
audio
files
can
be
Blanks
type
erasing
must
be
specified
by
session
media
does
not
support
can
be
rewritten
without
need
Copies
If
no
other
argument
is
default
CD
writing
device
is
assumed
to
be
source
device
as
In
this
copy
operation
reads
source
media
into
temporary
directory
prompts
to
place
blank
media
into
drive
copy
operation
to
This
option
is
This
option
used
to
causecdrw
to
query
drive
to
determine
media
This
is
now
default
Specifies
CD
DVD
writing
Prints
usage
Specifies
image
file
creating
data
CDs
file
size
should
be
less
than
what
can
be
written
consider
having
file
locally
available
instead
having
file
file
CD
writing
process
expects
data
to
be
available
continuously
without
Lists
all
CD
DVD
writers
available
Closes
If
media
was
left
open
state
after
last
write
is
closed
to
prevent
any
ther
This
operation
can
only
be
done
Uses
alternate
temporary
directory
instead
default
temporary
directory
storing
track
data
while
copying
CD
An
alternate
temporary
directory
might
be
required
amount
data
CD
can
be
For
amount
data
can
be
as
much
as
Mbytes
minute
audio
CD
Gbytes
default
temporary
directory
might
not
have
that
much
space
Reports
media
cdrw
reports
media
is
blank
table
last
start
next
writable
address
disk
is
does
not
support
erasing
always
has
some
content
Keeps
disk
cdrw
closes
keeps
disk
open
that
another
session
can
be
added
er
to
create
multisession
Sets
CD
writing
For
sets
speed
to
If
this
option
is
not
cdrw
uses
default
speed
CD
If
this
option
is
cdrw
tries
to
set
drive
write
speed
to
this
there
is
no
guarantee
actual
speed
that
is
used
by
Specifies
source
device
copying
CD
Simulation
In
this
cdrw
operates
with
drive
laser
turned
nothing
is
written
to
Use
this
option
to
verify
system
can
provide
data
rate
good
enough
CD
MRW
media
support
simulation
mode
any
some
others
do
not
support
simulation
mode
Audio
format
to
use
extracting
audio
files
reading
audio
files
audio
CD
can
be
Verbose
Extracts
audio
data
from
audio
Example
Creating
Data
CD
DVD
cdrw
Example
Creating
CD
DVD
from
Directory
This
example
shows
how
to
create
CD
DVD
from
directory
tree
mkisofs
|
cdrw
Example
Extracting
Audio
Track
Number
This
example
shows
how
to
extract
audio
track
number
to
cdrw
wav
Example
Using
wav
Files
This
example
shows
how
to
create
audio
CD
from
wav
files
cdrw
Example
Erasing
Media
This
example
shows
how
to
erase
rewritable
cdrw
all
Example
Creating
Data
CD
DVD
with
Multiple
Drives
This
example
shows
how
to
create
data
CD
DVD
system
with
multiple
cdrw
Example
Checking
Data
Delivery
Rate
This
example
shows
how
to
verify
that
system
can
provide
data
to
DVD
drive
rate
sufficient
write
cdrw
Example
Running
Higher
Priority
This
example
shows
how
to
run
cdrw
higher
priority
root
user
priocntl
cdrw
Example
Creating
Disk
This
examples
shows
how
to
create
first
session
image
by
using
mkisofs
recording
onto
disk
without
closing
cdrw
Additional
sessions
can
be
added
to
open
disk
by
creating
image
with
mkisofs
using
session
start
next
writable
address
reported
by
cdrw
Track
|Type
|Start
address
|Data
|
Leadout
|Data
|
Last
session
start
Next
writable
mkisofs
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcdrw
SUNWfsman
package
System
Administration
Devices
File
Systems
CD
writing
process
requires
data
to
be
supplied
constant
rate
to
Keep
activity
to
minimum
shut
down
any
related
applications
while
writing
When
making
copies
extracting
audio
use
MMC
compliant
source
CD
writer
can
be
used
this
Before
writing
ensure
that
media
is
blank
by
using
You
can
use
simulation
mode
to
test
system
to
make
sure
can
provide
data
required
cdrw
turns
buffer
underrun
protection
drives
that
support
recovers
from
most
If
system
is
not
able
to
provide
data
constant
rate
quent
stalling
can
lower
speed
by
using
You
can
also
try
to
run
cdrw
higher
ty
by
using
If
know
that
drive
can
operate
different
write
use
Some
commercially
available
drives
handle
drive
speed
setting
command
use
this
option
cdrw
command
uses
to
control
user
access
to
By
cdrw
is
accessible
to
all
users
can
be
restricted
to
individual
Refer
to
System
Administration
Devices
File
Systems
more
To
burn
CDs
as
user
hal
must
be
enabled
user
must
be
that
is
SMF
is
enabled
by
typically
this
requires
no
special
user
must
be
logged
onto
is
also
users
could
log
by
using
telnet
be
able
to
burn
This
would
work
unless
administrator
had
changed
default
configuration
to
deny
See
cdtoc
table
contents
file
table
contents
is
ASCII
file
that
describes
contents
other
software
bution
It
resides
directory
file
system
slice
It
is
independent
file
system
that
file
system
slice
can
be
UFS
Each
entry
file
is
line
that
establishes
value
parameter
following
Blank
lines
comments
preceded
by
are
also
allowed
Parameters
are
grouped
by
with
beginning
product
defined
by
line
Each
product
is
expected
to
consist
one
more
software
packages
that
are
stored
together
subdirectory
distribution
There
can
be
any
number
products
described
within
There
is
no
required
order
which
parameters
must
be
except
that
parameters
must
be
grouped
by
product
NAME
parameter
must
appear
first
list
parameters
each
product
Each
parameter
is
described
All
parameters
are
required
each
PRODNAME
full
name
This
must
be
unique
within
file
is
preferably
unique
across
all
possible
This
value
may
contain
white
length
this
value
is
limited
to
ASCII
other
restrictions
may
apply
PRODVERS
version
value
can
contain
any
combination
other
This
value
may
contain
white
length
this
value
is
limited
to
ASCII
other
tions
may
apply
PRODDIR
name
directory
containing
This
name
should
be
relative
to
directory
distribution
number
path
components
name
is
limited
only
by
maximum
path
name
which
is
ASCII
Any
single
component
is
limited
to
ASCII
This
value
cannot
contain
white
lengths
values
PRODNAME
PRODVERS
are
further
constrained
by
fact
that
initial
install
programs
concatenate
these
values
to
produce
full
product
For
unbundled
products
combined
length
values
PRODNAME
PRODVERS
must
not
exceed
ASCII
When
install
OS
services
with
Solstice
Host
directories
diskless
clients
are
created
by
constructing
names
derived
from
concatenation
values
client
length
component
containing
product
name
sion
must
not
exceed
ASCII
products
corresponding
to
bundled
OS
releases
Solaris
values
PRODNAME
PRODVERS
are
effectively
restricted
to
lengths
much
less
than
initial
install
programs
use
value
PRODDIR
macro
file
to
indicate
where
packages
can
be
Example
Sample
Here
is
sample
file
Online
product
family
CD
DiskSuite
Backup
This
example
corresponds
to
following
directory
layout
bundled
release
Solaris
includes
following
This
file
corresponds
to
following
directory
layout
slice
Solaris
product
ceill
ceiling
value
function
double
float
long
double
double
These
functions
compute
smallest
integral
value
not
less
than
Upon
successful
functions
return
smallest
integral
value
not
less
than
expressed
as
type
long
If
x
is
NaN
is
If
x
is
x
is
integral
value
returned
by
these
functions
need
not
be
expressible
as
int
long
return
value
should
be
tested
before
assigning
to
integer
type
to
avoid
undefined
results
integer
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
cexpl
complex
exponential
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
exponent
defined
as
These
functions
return
complex
exponential
value
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
cfgadm
configuration
administration
|
function
|
|
|
cfgadm
command
provides
configuration
administration
operations
dynamically
reconfigurable
hardware
These
operations
include
displaying
initiating
invoking
configuration
state
invoking
hardware
specific
obtaining
configuration
administration
help
messages
figuration
administration
is
performed
attachment
which
are
places
where
system
software
supports
namic
reconfiguration
hardware
resources
during
continued
operation
Configuration
administration
makes
distinction
between
hardware
resources
that
are
physically
present
chine
hardware
resources
that
are
configured
visible
to
nature
configuration
administration
functions
are
hardware
are
performed
by
calling
hardware
specific
Configuration
administration
operates
attachment
Hardware
resources
located
attachment
points
can
can
not
be
physically
replaceable
during
system
are
dynamically
reconfigurable
by
way
figuration
administration
An
attachment
point
defines
two
unique
which
are
distinct
from
hardware
resources
that
exist
beyond
attachment
two
elements
attachment
point
are
receptacle
Physical
insertion
removal
hardware
resources
occurs
attachment
points
results
receptacle
gaining
losing
Configuration
administration
supports
physical
insertion
removal
operations
as
well
as
other
tion
administration
functions
attachment
Attachment
points
have
associated
state
condition
configuration
administration
interfaces
vide
control
transitioning
attachment
point
A
receptacle
can
exist
one
three
nected
while
occupant
can
exist
one
two
configured
A
receptacle
can
provide
empty
which
is
normal
state
receptacle
when
attachment
point
has
no
A
receptacle
can
also
provide
disconnected
state
has
capability
isolating
occupants
from
normal
system
Typically
this
state
is
used
various
hardware
specific
testing
prior
to
bringing
resources
into
full
use
by
as
step
preparing
occupant
physical
removal
A
receptacle
disconnected
state
isolates
occupant
from
system
as
much
as
hardware
can
provide
access
testing
A
receptacle
must
provide
connected
which
allows
normal
access
to
hardware
resources
contained
any
connected
state
is
normal
state
receptacle
that
contains
occupant
that
is
not
currently
undergoing
configuration
administration
hardware
resources
contained
occupant
unconfigured
state
are
not
represented
by
normal
Solaris
data
structures
are
thus
not
available
use
by
Operations
allowed
unconfigured
occupant
are
limited
to
configuration
administration
hardware
resources
occupant
configured
state
are
represented
by
normal
Solaris
data
structures
thus
some
all
those
hardware
resources
can
be
use
by
All
occupants
provide
both
configured
unconfigured
An
attachment
point
can
be
one
five
An
attachment
point
can
enter
system
any
condition
depending
upon
results
tests
record
An
attachment
point
with
occupant
configured
state
is
one
four
If
condition
is
not
failing
failed
attachment
point
can
change
to
failing
during
course
tion
hardware
dependent
recoverable
error
threshold
is
If
condition
is
not
failed
attachment
point
can
change
to
failed
during
operation
as
result
unrecoverable
An
attachment
point
with
occupant
unconfigured
state
can
be
any
defined
tion
attachment
point
with
unconfigured
occupant
can
decay
from
ok
to
unknown
after
machine
dent
time
Initiating
test
function
changes
attachment
condition
to
failing
failed
pending
outcome
An
attachment
point
that
does
not
provide
test
function
can
leave
ment
point
unknown
If
test
is
attachment
condition
can
be
set
to
ous
unknown
An
attachment
point
failed
conditions
can
be
An
attachment
point
can
exist
unusable
condition
variety
such
as
inadequate
power
ing
occupant
that
is
incorrectly
An
attachment
point
unusable
condition
can
never
be
used
by
It
typically
remains
this
condition
until
physical
cause
is
An
attachment
point
also
maintains
busy
information
that
indicates
when
state
change
is
progress
tion
is
being
Attachment
points
are
referred
to
using
hardware
specific
identifiers
that
are
related
to
type
location
attachment
points
system
device
An
can
not
be
must
identify
single
tachment
Two
types
specifications
are
physical
A
physical
contains
fully
specified
while
logical
contains
shorthand
notation
that
identifies
attachment
point
more
For
attachment
point
representing
backplane
slot
number
could
have
physical
while
logical
could
be
Another
third
tacle
second
PCI
bus
system
could
have
logical
Attachment
points
may
also
be
created
A
dynamic
attachment
point
is
named
relative
to
base
ment
point
which
is
present
dynamic
attachment
points
consist
base
component
lowed
by
two
colons
dynamic
base
component
is
base
attachment
point
dynamic
component
is
hardware
specific
generated
by
corresponding
hardware
specific
For
consider
base
attachment
which
represents
SCSI
with
physical
logical
A
disk
attached
to
this
SCSI
HBA
could
be
represented
by
dynamic
attachment
point
with
logical
where
is
base
component
is
hardware
specific
dynamic
Similarly
physical
this
dynamic
attachment
point
would
An
is
partial
form
logical
that
can
be
ambiguous
not
specify
particular
attachment
An
is
substring
portion
logical
up
to
not
including
colon
For
pci
would
show
all
attachment
points
whose
logical
begin
with
use
is
new
select
to
option
provides
more
general
flexible
mechanism
selecting
attachment
See
cfgadm
command
interacts
primarily
with
hardware
dependent
functions
contained
hardware
specific
braries
thus
behavior
is
hardware
For
each
configuration
administration
operation
service
interruption
can
be
Should
completion
function
requested
require
noticeable
service
interruption
to
interactive
prompt
is
output
standard
error
output
confirmation
standard
input
before
function
is
Confirmation
can
be
overridden
ing
options
to
always
answer
yes
no
Hardware
specific
such
as
test
are
supplied
as
using
Operations
that
change
state
system
configuration
are
audited
by
system
log
daemon
arguments
this
command
conform
to
syntax
following
options
are
Specifies
that
option
must
also
list
dynamic
attachment
Performs
state
change
function
attachment
point
specified
by
Specify
function
as
configure
These
functions
cause
state
transitions
attachment
point
by
calling
hardware
specific
library
routines
are
defined
following
insert
Performs
operations
that
allows
user
to
manually
insert
occupant
to
activate
hardware
supplied
mechanism
that
performs
physical
insert
can
have
hardware
specific
side
effects
that
temporarily
pend
activity
portions
In
such
cases
hardware
specific
library
generates
appropriate
warning
messages
informs
user
any
special
considerations
procedures
unique
to
that
Various
ware
specific
errors
can
cause
this
function
to
fail
set
receptacle
condition
to
remove
Performs
operations
that
allow
user
to
manually
remove
occupant
to
activate
hardware
supplied
mechanism
to
perform
physical
remove
can
have
hardware
specific
side
effects
that
temporarily
pend
activity
portions
In
such
cases
hardware
specific
library
generates
appropriate
warning
messages
informs
user
any
special
considerations
procedures
unique
to
that
Various
ware
specific
errors
can
cause
this
function
to
fail
set
receptacle
condition
to
disconnect
Performs
hardware
specific
operations
to
put
receptacle
disconnected
which
can
prevent
occupant
from
operating
normal
fashion
through
connect
Performs
hardware
specific
operations
to
put
receptacle
connected
which
allows
pant
to
operate
normal
fashion
through
configure
Performs
hardware
specific
operations
that
allow
hardware
resources
to
be
usable
by
Occupants
that
are
configured
are
part
system
configuration
are
available
manipulation
by
laris
device
manipulation
maintenance
commands
unconfigure
Performs
hardware
specific
operations
that
logically
remove
hardware
resources
from
occupant
must
currently
be
configured
hardware
resources
must
not
be
use
by
State
transition
functions
can
fail
due
to
condition
attachment
point
other
hardware
dependent
All
state
change
functions
direction
adding
connect
are
passed
onto
hardware
specific
library
when
attachment
point
is
ok
unknown
All
other
tions
require
use
force
option
to
allow
these
functions
to
be
passed
to
hardware
specific
tachment
point
condition
does
not
prevent
hardware
specific
library
being
called
related
to
removal
disconnect
hardware
resources
from
Hardware
specific
libraries
can
reject
state
change
functions
attachment
point
is
unknown
condition
attachment
point
is
not
necessarily
changed
by
state
change
however
errors
during
state
change
operations
can
change
attachment
point
An
attempt
to
override
condition
force
state
change
that
would
otherwise
fail
can
be
made
by
specifying
force
option
Hardware
specific
safety
integrity
checks
can
prevent
force
option
from
having
any
Forces
specified
action
to
this
is
hardware
dependent
override
safety
Forcing
state
change
operation
can
allow
use
hardware
resources
occupant
that
is
not
ok
unknown
discretion
any
hardware
dependent
safety
|
Prints
out
help
message
If
is
help
routine
hardware
specific
library
attachment
point
indicated
by
argument
is
|
Lists
state
condition
attachment
points
Attachment
points
can
be
filtered
by
using
option
select
Invoking
cfgadm
without
one
action
options
is
equivalent
to
without
format
list
display
is
controlled
by
When
option
is
specified
attachment
points
are
dynamically
Suppress
any
interactive
confirmation
assume
that
answer
is
If
is
interactive
confirmation
is
obtained
through
standard
error
output
standard
If
these
standard
channels
does
not
correspond
to
terminal
determined
by
then
option
is
Supplies
hardware
specific
options
to
main
command
format
content
hardware
option
string
is
completely
hardware
option
string
conforms
to
syntax
Supplies
listing
options
to
list
conforms
to
syntax
are
used
to
specify
attachment
point
selection
criteria
type
ing
desired
order
listing
data
that
is
displayed
column
delimiter
whether
to
suppress
column
headings
When
select
is
only
attachment
points
which
match
specified
criteria
will
be
select
has
following
cfgadm
where
attr
is
one
class
refers
to
logical
class
refers
to
attachment
point
class
type
refers
to
type
are
corresponding
values
to
be
type
match
can
be
specified
by
match
as
cfgadm
where
can
be
exact
default
value
is
Arguments
to
select
can
be
quoted
to
protect
from
A
is
one
more
concatenated
using
colon
as
A
field
is
one
field
output
is
logical
name
attachment
while
physid
field
contains
physical
field
can
be
disconnected
field
can
be
configured
busy
field
can
be
y
attachment
point
is
n
is
type
info
fields
are
hardware
field
provides
time
which
condition
attachment
point
last
field
is
parsable
version
If
ment
point
has
associated
class
field
lists
class
If
attachment
point
does
not
have
ciated
class
field
lists
order
fields
is
For
sort
first
field
given
is
primary
sort
For
cols
fields
are
printed
order
order
sorting
can
be
reversed
by
placing
minus
before
name
within
sort
default
value
sort
is
defaults
values
cols
depend
whether
option
is
Without
cols
is
is
not
With
cols
is
is
default
value
delim
is
single
value
delim
can
be
string
arbitrary
delimiter
cannot
include
comma
see
These
listing
options
can
be
used
to
create
parsable
See
Performs
test
one
more
attachment
test
function
is
used
to
condition
ment
Without
test
level
specifier
fastest
test
that
identifies
hard
faults
is
More
comprehensive
tests
are
hardware
specific
are
selected
using
results
test
is
used
to
update
condition
specified
occupant
to
ok
no
faults
are
failing
recoverable
faults
are
found
failed
any
unrecoverable
faults
are
If
test
is
attachment
condition
can
be
restored
to
previous
value
set
to
unknown
no
errors
were
found
failing
only
recoverable
errors
were
found
to
failed
any
unrecoverable
errors
were
attachment
point
should
only
be
set
to
ok
upon
normal
completion
testing
with
no
Executes
verbose
For
options
outputs
message
giving
results
each
attempted
Outputs
detailed
help
information
Outputs
verbose
information
each
attachment
point
Performs
hardware
specific
Private
hardware
specific
functions
can
change
state
receptacle
Attachment
point
conditions
can
change
as
result
errors
encountered
during
private
hardware
specific
format
content
string
is
completely
hardware
option
string
conforms
to
syntax
Suppresses
any
interactive
confirmation
assume
that
answer
is
required
privileges
to
use
this
command
are
hardware
default
system
configuration
stricts
all
list
option
to
Example
Listing
Attachment
Points
Device
Tree
following
example
lists
all
attachment
points
except
dynamic
attachment
cfgadm
Type
Receptacle
Occupant
Cond
connected
configured
ok
connected
configured
ok
connected
configured
ok
unknown
connected
unconfigured
unknown
connected
configured
failing
connected
configured
ok
unknown
disconnected
unconfigured
unusable
unknown
empty
unconfigured
ok
connected
configured
unknown
connected
configured
unknown
Example
Listing
All
Configurable
Hardware
Information
following
example
lists
all
current
configurable
hardware
including
those
represented
by
dynamic
attachment
cfgadm
Type
Receptacle
Occupant
Cond
connected
configured
ok
connected
configured
ok
connected
configured
ok
unknown
connected
unconfigured
unknown
connected
configured
failing
connected
configured
ok
unknown
disconnected
unconfigured
unusable
unknown
empty
unconfigured
ok
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
tape
connected
configured
unknown
connected
configured
unknown
Example
Listing
Based
Attachment
Point
Attributes
following
example
lists
all
attachment
points
whose
class
begins
with
begins
with
c
type
field
begins
with
argument
to
option
is
quoted
to
protect
from
cfgadm
Type
Receptacle
Occupant
Cond
connected
configured
unknown
connected
configured
unknown
Example
Listing
Current
Configurable
Hardware
Information
Verbose
Mode
following
example
lists
current
configurable
hardware
information
system
verbose
cfgadm
system
Receptacle
Occupant
Condition
Information
When
Type
Busy
connected
configured
ok
Apr
n
connected
configured
ok
Apr
n
connected
configured
ok
Apr
n
connected
configured
ok
Apr
n
When
column
represents
Example
Testing
Two
Occupants
Using
Hardware
cific
Extended
Test
following
example
tests
two
occupants
using
hardware
specific
extended
cfgadm
extended
Testing
attachment
point
ok
Testing
attachment
point
ok
Example
Configuring
Occupant
Using
Force
Option
following
example
configures
occupant
failing
state
to
system
using
force
cfgadm
configure
Example
Unconfiguring
Occupant
From
System
following
example
unconfigures
occupant
from
cfgadm
unconfigure
Example
Configuring
Occupant
Attachment
Point
following
example
configures
cfgadm
configure
See
descriptions
following
environment
variables
that
affect
execution
NLSPATH
Determines
how
cfgadm
displays
column
headings
error
Listing
output
data
is
not
affected
by
setting
this
Determines
how
cfgadm
displays
human
readable
status
changed
time
TZ
Specifies
timezone
used
when
converting
status
changed
This
applies
to
both
human
readable
parsable
following
exit
values
are
Successful
An
error
Configuration
administration
not
supported
specified
Usage
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Diagnostic
messages
appear
standard
error
Other
than
options
usage
following
are
agnostic
messages
produced
by
this
Configuration
administration
not
supported
No
library
found
ambiguous
Insufficient
privileges
Attachment
point
is
try
again
No
attachment
points
with
specified
attributes
found
System
is
try
again
Operation
requires
service
interruption
Data
Hardware
specific
See
additional
details
regarding
error
Hardware
resources
enter
unconfigured
pool
hardware
specific
This
can
occur
various
times
such
system
initialization
as
result
unconfigure
An
occupant
that
is
unconfigured
state
is
not
available
use
by
system
until
specific
intervention
This
intervention
can
be
manifested
as
ator
initiated
command
can
be
by
way
automatic
configuring
listing
option
cfgadm
command
can
be
used
to
provide
parsable
input
another
example
within
shell
For
parsable
option
must
be
used
to
select
fields
option
can
also
be
used
to
suppress
column
following
fields
always
produce
parsable
busy
Parsable
output
never
has
characters
embedded
field
following
shell
script
fragment
finds
first
good
unconfigured
occupant
type
cfgadm
|
while
read
cond
type
do
unconfigured
ok
CPU
then
then
fi
fi
done
then
echo
CPU
fi
format
parsable
time
field
is
giving
minute
second
form
suitable
string
Reference
should
be
made
to
hardware
specific
documentation
details
System
Configuration
tion
memory
system
administration
|
|
quick
|
normal
|
|
ac
hardware
specific
library
provides
functionality
configuring
unconfiguring
memory
banks
systems
as
part
ic
Reconfiguration
boards
using
Memory
banks
appear
as
attachment
points
device
For
each
two
attachment
points
are
one
each
bank
If
bank
is
receptacle
state
is
If
bank
is
receptacle
state
is
receptacle
state
memory
bank
can
never
be
occupant
state
connected
memory
bank
can
be
configured
If
occupant
state
is
memory
is
use
by
unconfigured
is
Refer
to
complete
descriptions
command
following
options
are
configure
|
unconfigure
Change
occupant
configure
argument
ensures
that
memory
is
initialized
adds
memory
to
Solaris
memory
unconfigure
argument
removes
memory
from
use
by
When
ory
board
is
to
be
removed
from
both
banks
memory
must
be
cfgadm
refuses
configure
operation
memory
board
is
marked
info
less
option
enable
boot
is
configure
operation
takes
short
time
proportional
to
size
memory
that
must
be
cfgadm
refuses
unconfigure
operation
there
is
not
enough
uncommitted
memory
system
viability
bank
to
be
unconfigured
has
memory
that
be
removed
pages
ence
pages
is
indicated
by
word
permanent
info
listing
Removing
memory
from
use
by
Solaris
may
take
significant
time
due
to
factors
such
as
system
load
how
much
paging
to
secondary
storage
is
unconfigure
operation
can
be
cancelled
any
time
memory
returned
to
fully
configured
state
by
interrupting
command
invocation
with
unconfigure
operation
no
memory
can
be
removed
within
timeout
default
timeout
period
seconds
can
be
changed
using
with
value
disabling
Force
Use
this
option
to
override
block
configuring
memory
bank
marked
as
disabled
boot
See
Platform
Enterprise
Systems
List
This
option
is
supported
as
described
type
field
is
always
info
field
has
following
information
empty
empty
indicates
system
slot
into
which
board
is
For
this
were
attachment
point
use
with
cfgadm
to
manipulate
associated
board
would
be
info
field
has
following
information
connected
sizeMb|sizeGb
base
size
bank
is
given
Mb
Gb
as
If
memory
is
less
than
completely
used
size
is
physical
base
address
is
given
If
memory
bank
is
interleaved
with
some
other
interleave
factor
is
If
memory
board
is
disabled
boot
using
this
is
If
bank
has
memory
that
cannot
be
removed
this
is
reported
as
|
These
options
allow
state
variable
to
be
These
options
can
be
used
conjunction
with
issuing
option
with
explicit
implied
listing
no
mand
is
Use
with
configure
command
to
override
block
configuring
ory
board
disabled
memory
extended
|
normal
|
quick
Use
with
option
to
specify
test
normal
test
level
ensures
that
each
memory
cell
stores
both
checks
that
all
cells
are
separately
quick
test
level
only
does
typically
misses
address
line
tended
test
uses
patterns
to
test
adjacent
cell
interference
default
test
level
is
See
Use
with
option
to
specify
maximum
number
allowed
If
not
default
is
Use
with
unconfigure
command
to
set
default
value
is
unit
is
A
value
means
no
Test
unconfigured
bank
Specify
test
level
using
quick
|
normal
|
extended
cfgadm
exits
with
test
was
able
to
run
memory
result
test
is
available
condition
attachment
Verbose
Use
this
option
combination
with
option
to
display
detailed
progress
results
For
all
pages
memory
use
specified
memory
relocation
operation
as
used
unconfigure
command
is
success
this
operation
does
not
guarantee
that
bank
can
be
Failure
indicates
that
probably
cannot
be
This
option
is
test
purposes
following
operand
is
attachment
points
memory
banks
are
published
by
instances
address
controller
driver
One
instance
ac
driver
is
created
each
system
only
those
instances
associated
with
boards
publish
two
bank
attachment
This
form
conforms
to
logical
specification
given
corresponding
physical
are
listed
FILES
ac
driver
instance
numbering
has
no
relation
to
slot
number
corresponding
full
physical
attachment
point
identifier
has
slot
number
incorporated
into
as
twice
slot
number
hexadecimal
directly
following
attachment
points
hardware
specific
library
file
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Sun
Enterprise
Systems
Dynamic
Reconfiguration
Guide
Platform
Enterprise
Systems
Refer
to
Sun
Enterprise
Systems
Dynamic
Reconfiguration
Guide
ditional
details
regarding
dynamic
reconfiguration
system
cardbus
hardware
specific
commands
cfgadm
|
function
|
|
CardBus
slots
Solaris
are
hot
plug
This
capability
is
supported
by
PCI
hardware
specific
library
through
cfgadm
command
hot
plug
administrative
models
between
PCI
Express
operate
same
Please
refer
to
usage
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsl
driver
specific
commands
cfgadm
|
function
fp
port
driver
provides
functionality
Fibre
Channel
Fabric
device
node
management
through
cfgadm
operates
attachment
Attachment
points
are
locations
system
where
hardware
resources
can
be
dynamically
Refer
to
additional
details
attachment
For
Fibre
Channel
Fabric
device
node
each
fp
port
node
is
represented
by
attachment
point
device
In
each
Fibre
Channel
device
is
represented
by
dynamic
attachment
Attachment
points
are
named
through
Two
types
are
logical
physical
is
based
physical
logical
is
more
For
fp
port
logical
is
corresponding
disk
controller
For
is
typical
logical
Fibre
Channel
devices
are
named
with
port
World
Wide
Name
If
disk
device
is
connected
to
controller
can
where
identifies
port
WWN
specific
Fibre
Channel
Each
device
Fibre
Channel
private
loop
Fabric
port
public
loop
port
is
probed
made
available
to
Solaris
by
Devices
connected
to
Fibre
Channel
Fabric
port
public
loop
port
can
be
made
unavailable
to
Solaris
by
initiating
application
end
user
operation
is
similar
to
hot
unplugging
vices
by
way
management
user
Applications
users
can
use
library
to
able
libcfgadm
to
provide
interfaces
to
accomplish
this
list
currently
connected
Fabric
devices
is
generated
form
attachment
A
simple
listing
attachment
points
system
includes
attachment
points
fp
port
nodes
not
Fibre
Channel
following
example
uses
flag
to
list
option
to
list
Fibre
Channel
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
connected
configured
unknown
connected
configured
unknown
fc
connected
unconfigured
unknown
connected
configured
ok
connected
configured
ok
following
example
lists
Fibre
Channel
devices
connected
to
fp
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
connected
configured
unknown
tape
connected
configured
unknown
fc
connected
unconfigured
unknown
connected
configured
ok
connected
configured
ok
In
this
type
indicates
that
fp
port
is
connected
to
For
fp
port
with
type
such
as
device
node
creation
happens
by
default
boot
time
can
be
managed
by
cfgadm
configure
unconfigure
type
indicates
that
fp
port
is
connected
to
device
node
creation
happens
by
default
as
type
indicates
that
fp
port
is
directly
connected
to
another
device
node
creation
also
happens
by
fc
type
indicates
that
nothing
is
attached
to
fp
port
Type
field
Fibre
Channel
device
shows
SCSI
device
type
LUN
A
Fibre
Channel
device
with
multiple
FCP
SCSI
LUNs
is
configured
into
Solaris
each
FCP
SCSI
LUN
is
able
as
Solaris
Suppose
that
represent
Fibre
Channel
devices
with
multiple
FCP
SCSI
following
example
shows
how
to
list
with
FCP
SCSI
LUN
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
unconfigured
unknown
disk
connected
unconfigured
unknown
disk
connected
unconfigured
unknown
disk
connected
unconfigured
unknown
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
connected
configured
unknown
tape
connected
configured
unknown
fc
connected
unconfigured
unknown
In
this
identifies
FCP
SCSI
LUN
Fibre
Channel
device
which
is
represented
by
port
WWN
Fibre
Channel
device
is
reported
to
have
FCP
SCSI
LUNs
are
all
FCP
SCSI
LUN
level
associated
with
port
WWN
are
listing
also
displays
FCP
SCSI
LUNs
unconfigured
Fibre
Channel
Fibre
Channel
device
represented
by
is
reported
to
have
two
FCP
SCSI
configure
operation
creates
two
Solaris
Type
field
FCP
SCSI
LUN
level
show
SCSI
device
type
each
When
Fibre
Channel
device
has
different
device
type
Type
field
reflects
receptacle
occupant
state
attachment
points
fp
port
have
following
configured
One
more
devices
configured
fp
port
connected
fp
port
active
disconnected
fp
port
quiesced
activity
is
empty
Not
applicable
unconfigured
No
devices
configured
fp
port
state
individual
Fibre
Channel
devices
fp
configured
Device
is
configured
into
Solaris
is
available
use
connected
fp
port
to
which
device
is
connected
to
is
active
disconnected
fp
port
to
which
device
is
attached
is
quiesced
unconfigured
Device
is
available
to
be
configured
condition
field
attachment
points
fp
port
has
following
failed
An
error
condition
has
prevented
fp
port
from
being
able
to
detect
presence
type
Fibre
Channel
condition
field
individual
Fibre
Channel
devices
fp
port
has
following
failed
An
error
is
encountered
while
probing
device
failing
A
device
was
configured
host
state
as
seen
by
Solaris
appears
to
be
normal
is
not
currently
present
visible
fabric
presence
could
not
be
verified
due
to
error
condition
cal
port
through
which
device
was
unusable
A
device
has
been
configured
is
currently
offline
unknown
condition
indicates
that
probing
device
Fabric
completed
without
error
device
state
within
Solaris
host
is
normal
device
was
configured
internal
condition
device
cannot
be
cfgadm
defines
several
types
operations
addition
to
listing
These
operations
include
invoking
tion
state
changes
obtaining
configuration
administration
help
messages
following
options
are
function
following
generic
commands
are
defined
For
Fibre
Channel
device
attachment
points
type
fp
port
attachment
following
tion
state
change
operations
are
configure
Configure
connected
Fibre
Channel
Fabric
device
to
When
Fibre
Channel
device
is
listed
as
unknown
type
output
list
operation
device
might
not
be
No
attempt
is
made
to
configure
devices
with
unknown
force
option
can
be
used
to
force
fp
port
driver
to
make
attempt
to
figure
any
Any
errors
process
are
By
each
FCP
SCSI
LUN
that
is
discovered
Fibre
channel
Fabric
device
is
FCP
SCSI
LUNs
that
are
specified
property
file
will
remain
FCP
SCSI
LUN
level
listing
reflects
state
such
FCP
SCSI
They
stay
state
after
reboot
Solaris
Dynamic
Reconfiguration
controller
that
are
connected
Refer
to
additional
details
unconfigure
Unconfigure
Fibre
Channel
Fabric
device
from
This
device
stays
unconfigured
until
next
reboot
laris
Dynamic
Reconfiguration
controller
that
device
is
which
time
all
fabric
devices
are
tomatically
default
behavior
may
be
changed
through
use
property
If
property
is
device
remains
unconfigured
after
Refer
to
additional
details
For
Fibre
Channel
private
loop
devices
configure
command
returns
success
without
doing
any
unconfigure
command
is
not
supported
private
loop
devices
private
loop
devices
devices
are
configured
by
Solaris
Fibre
Channel
drivers
by
default
are
not
managed
through
end
property
file
is
applied
to
private
loop
device
device
same
way
is
applied
to
Fabric
Force
configure
change
state
operation
to
occur
irrespective
condition
Refer
to
above
scription
configure
change
state
Obtain
Specify
any
fp
attachment
following
hardware
options
are
Lists
associated
with
each
FCP
SCSI
LUN
discovered
Fibre
Channel
devices
when
specified
with
list
option
Refer
to
previously
mentioned
description
example
FCP
SCSI
LUN
level
Device
node
creation
is
not
supported
FCP
SCSI
LUN
See
All
Fibre
Channel
devices
are
available
to
Solaris
by
Enabling
only
subset
Fabric
devices
available
to
Solaris
by
default
can
be
accomplished
by
setting
property
When
is
all
Fabric
devices
are
not
available
to
Solaris
unless
plication
end
user
had
previously
requested
device
be
configured
into
configure
command
makes
device
available
to
After
successful
configure
operation
Fabric
ciated
links
are
added
to
unconfigure
command
makes
device
unavailable
to
When
Fibre
Channel
Fabric
device
is
configured
successfully
to
host
using
configure
cal
is
stored
When
Fibre
Channel
Fabric
device
is
unconfigured
using
unconfigure
physical
is
deleted
from
same
All
fabric
devices
are
automatically
enumerated
by
default
repository
is
used
only
property
is
Refer
to
additional
details
You
can
specify
following
commands
with
option
to
control
update
behavior
For
attachment
point
is
unconditionally
added
to
attachment
point
is
unconditionally
No
update
is
made
to
repository
regardless
These
options
should
not
be
used
normal
configure
unconfigure
See
When
Fibre
Channel
device
has
multiple
FCP
SCSI
LUNs
configured
any
Solaris
device
associated
with
FCP
SCSI
LUN
is
unusable
whole
Fibre
Channel
device
is
reported
as
following
option
with
unconfigure
command
removes
only
Solaris
devices
with
unusable
condition
Fibre
nel
For
unconfigure
any
offlined
device
nodes
target
device
is
Refer
to
usage
No
test
commands
are
available
No
hardware
specific
functions
are
available
All
other
options
have
same
meaning
as
defined
man
Example
Unconfiguring
Disk
following
command
unconfigures
cfgadm
unconfigure
Example
Unconfigure
all
Configured
Disks
under
Single
Attachment
Point
following
command
unconfigures
all
configured
disks
under
attachment
point
cfgadm
unconfigure
Example
Configuring
Disk
following
command
configures
cfgadm
configure
Example
Configure
all
Unconfigured
Disks
under
Single
Attachment
Point
following
command
configures
all
unconfigured
disks
under
attachment
point
cfgadm
configure
Example
Removing
Fibre
Channel
Fabric
Device
Attachment
Point
from
Repository
following
command
unconditionally
removes
fibre
channel
fabric
device
attachment
point
from
Fabric
device
cfgadm
unconfigure
Example
Removing
Offlined
Solaris
Device
Nodes
Target
Device
following
command
removes
offlined
Solaris
device
nodes
target
cfgadm
unconfigure
library
Fibre
Channel
Fabric
device
node
Repository
physical
Fabric
devices
currently
It
is
used
only
to
reconfigure
those
Fabric
vices
boot
This
repository
is
only
used
when
file
is
Reconfigures
Fabric
which
physical
is
listed
boot
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
SUNWcfplx
Do
not
use
options
repository
update
under
normal
options
are
expected
to
be
used
when
node
creation
Fabric
device
fails
boot
time
error
condition
is
considered
to
be
unconfigure
command
with
option
unconditionally
removes
attachment
point
failing
Fabric
device
from
For
devices
with
unknown
no
SCSI
device
type
Fibre
Channel
Host
Bus
configure
operation
might
not
be
configure
unconfigure
commands
operate
Fibre
Channel
device
level
which
is
represented
by
port
WWN
If
Fibre
Channel
device
has
multiple
FCP
SCSI
LUNs
configure
command
sociated
port
WWN
results
creating
Solaris
device
each
FCP
SCSI
LUN
unless
is
specified
property
unconfigure
command
removes
all
Solaris
devices
associated
with
port
WWN
FCP
SCSI
LUN
level
is
not
valid
configure
unconfigure
deprecated
option
has
been
replaced
by
new
deprecated
option
has
been
replaced
by
new
service
is
managed
by
service
management
under
service
Administrative
actions
this
such
as
requesting
can
be
performed
using
status
can
be
queried
using
No
administrative
actions
this
service
are
required
Fabric
device
configuration
once
this
service
is
started
boot
InfiniBand
hardware
specific
commands
cfgadm
|
function
|
|
InfiniBand
hardware
specific
library
provides
functionality
administering
ric
through
cfgadm
operates
attachment
See
An
InfiniBand
device
is
enumerated
by
IB
nexus
based
services
from
IB
Device
Manager
IB
nexus
driver
creates
initializes
five
types
child
device
IB
Port
devices
IB
HCA
service
devices
IB
Virtual
Physical
Point
Attachment
devices
Controller
IB
Pseudo
devices
See
details
enumeration
IB
IB
IB
For
additional
information
see
See
details
IB
Pseudo
For
IB
two
types
static
attachment
point
are
created
fabric
administration
as
seen
by
given
There
is
one
static
attachment
point
ib
all
IB
devices
Pseudo
fabric
are
represented
as
dynamic
attachment
points
based
off
There
is
another
static
tachment
point
each
Host
Channel
Adapter
host
based
node
Globally
Unique
Identifier
Attachment
points
are
named
through
There
are
two
types
logical
physical
is
based
physical
path
For
IB
fabric
is
logical
is
has
more
user
friendly
static
IB
fabric
is
IB
devices
are
dynamic
attachment
points
have
no
physical
logical
IOC
contains
An
example
IOC
is
logical
Pseudo
see
is
format
An
example
pseudo
would
be
where
is
driver
name
is
logical
VPPA
device
contains
Partition
Key
Port
GUID
Node
GUID
communication
format
is
as
Port
device
VPPA
device
device
Partition
Key
is
Port
helps
determine
partition
to
which
this
port
belongs
VPPA
device
A
port
might
have
more
than
one
An
example
VPPA
device
logical
point
is
is
is
service
name
is
information
is
obtained
from
file
which
contains
name
logical
contains
node
GUID
An
example
is
A
listing
IB
attachment
points
includes
information
all
IB
devices
Port
devices
seen
by
IBDM
IB
nexus
fabric
even
are
not
seen
by
host
figured
following
shows
listing
five
IB
devices
one
one
one
one
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
ok
ib
connected
configured
ok
connected
configured
ok
connected
unconfigured
unknown
connected
configured
ok
connected
configured
ok
connected
configured
ok
connected
configured
ok
shows
IOC
device
that
is
not
yet
configured
by
host
use
had
been
ously
offlined
by
explicit
cfgadm
unconfigure
distinction
was
made
by
information
displayed
under
Condition
IB
device
with
zero
HCA
GUID
is
Refer
to
more
information
regarding
listing
attachment
receptacle
state
attachment
points
have
following
connected
For
connected
implies
that
has
been
seen
by
device
might
not
have
been
configured
use
by
For
HCA
attachment
connected
implies
that
has
been
configured
is
All
IB
are
always
shown
as
occupant
state
attachment
points
have
following
configured
IB
HCA
are
configured
usable
by
unconfigured
IB
device
was
explicitly
offlined
using
cfgadm
was
not
successfully
This
could
be
wasn
not
successfully
configuref
use
with
Solaris
device
was
never
configured
use
by
IB
nexus
unconfigured
operation
is
not
supported
HCA
attachment
IB
static
is
shown
figured
system
has
no
IB
attachment
point
conditions
failed
Not
failing
Not
ok
Normal
Ready
unknown
This
state
is
only
valid
IB
device
that
have
been
probed
by
IBDM
not
yet
configured
use
by
It
is
also
shown
devices
that
have
been
explicitly
offlined
by
cfgadm
unconfigure
This
condition
does
not
apply
to
HCA
attachment
unusable
Not
following
options
are
function
IB
hardware
specific
library
supports
two
generic
commands
These
commands
are
not
supported
static
attachment
points
HCA
IB
static
ib
following
generic
commands
are
configure
Configure
IB
device
to
be
used
by
unconfigure
Unconfigure
IB
If
cfgadm
reports
condition
this
as
Not
Obtain
IB
specific
help
IB
attachment
List
state
condition
IB
attachment
option
works
as
described
When
paired
with
displays
dynamic
attachment
points
as
well
When
paired
with
displays
verbose
data
about
For
Info
field
cfgadm
output
displays
following
ProtocolVersion
IDString
from
If
ID
string
provided
then
nothing
is
displayed
These
fields
are
defined
InfiniBand
Specification
Volume
For
device
Info
field
cfgadm
display
shows
service
name
tion
to
which
this
device
is
If
no
such
information
nothing
is
For
Pseudo
device
cfgadm
displays
driver
name
For
HCA
verbose
listing
displays
ProductID
number
ports
PortGUID
value
See
This
option
is
not
currently
Attachment
points
class
ib
can
be
listed
by
using
select
Refer
to
man
page
more
Perform
hardware
specific
Note
that
name
can
not
be
more
than
characters
following
hardware
specific
functions
are
This
hardware
specific
function
is
supported
static
IB
attachment
It
can
be
used
to
add
new
service
to
file
to
update
You
must
use
option
to
indicate
new
service
to
be
You
must
use
option
option
to
add
name
service
to
to
See
This
hardware
specific
function
is
supported
static
IB
attachment
point
It
can
be
used
to
delete
ing
service
from
file
also
from
data
You
must
use
option
to
indicate
which
service
to
You
must
use
option
to
delete
this
service
from
See
Supported
HCA
attachment
Displays
all
kernel
IB
clients
using
this
It
also
displays
tive
these
kernel
IB
clients
have
opened
alternate
HCA
See
If
given
kernel
IB
client
does
not
have
valid
then
is
displayed
that
This
hardware
specific
function
is
supported
static
IB
attachment
point
It
lists
all
Port
VPPA
vices
as
read
from
See
This
hardware
specific
function
is
supported
static
HCA
attachment
point
It
can
be
used
to
unconfigure
all
IB
kernel
clients
this
given
Only
IB
kernel
clients
that
do
not
have
alternate
HCA
are
See
This
hardware
specific
function
is
supported
static
ib
attachment
point
IOC
attachment
For
ib
this
function
updates
properties
all
IOC
device
For
IOC
this
function
updates
properties
specified
IOC
device
This
command
updates
name
IOC
node
properties
See
Supported
static
ib
attachment
Updates
PKEY
information
inside
IBTL
tables
all
ports
each
HCA
present
See
Example
Listing
State
Condition
IB
Devices
following
command
lists
state
condition
IB
devices
It
only
shows
static
attachment
cfgadm
connected
configured
ok
ib
connected
configured
ok
option
lists
all
attachment
following
example
uses
option
lists
all
attachment
cfgadm
connected
configured
ok
ib
connected
configured
ok
connected
unconfigured
ok
connected
configured
ok
connected
configured
ok
connected
configured
ok
connected
configured
ok
Example
Listing
Verbose
Status
IB
VPPA
Device
following
command
lists
verbose
status
IB
VPPA
cfgadm
Receptacle
Occupant
Condition
Information
When
Type
Busy
connected
configured
ok
ipib
unavailable
n
A
verbose
listing
IOC
shows
additional
following
command
shows
verbose
cfgadm
Receptacle
Occupant
Condition
Information
When
Type
Busy
connected
configured
ok
Sample
Host
Adapter
unavailable
n
A
verbose
listing
Pseudo
device
cfgadm
Receptacle
Occupant
Condition
Information
When
Type
Busy
connected
configured
ok
Driver
unavailable
n
A
verbose
listing
HCA
cfgadm
Receptacle
Occupant
Condition
Information
When
Type
Busy
connected
configured
ok
unavailable
n
You
can
obtain
more
output
specify
these
following
cfgadm
class
field
selection
following
command
displays
only
IB
output
only
includes
Information
cfgadm
Information
ipib
Example
Unconfiguring
Existing
IB
IOC
following
command
unconfigures
IB
IOC
attached
to
then
displays
status
cfgadm
unconfigure
Unconfigure
This
operation
will
suspend
activity
IB
device
Continue
y
IB
device
unconfigured
cfgadm
Type
Receptacle
Occupant
Condition
connected
unconfigured
unknown
condition
unknown
implies
that
device
node
exist
anymore
this
IB
existence
is
known
only
to
IB
Device
Example
Configuring
IB
IOC
following
series
commands
configures
IB
device
attached
to
cfgadm
configure
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
ok
Example
Listing
All
Kernel
IB
Clients
HCA
following
command
lists
all
kernel
IB
clients
HCA
attached
to
cfgadm
Attachment
Point
Clients
Alternate
HCA
Yes
ipib
No
hnfs
No
ibdm
No
ibmf
No
Example
Adding
Port
Service
following
command
adds
new
Port
service
called
cfgadm
ib
Example
Deleting
VPPA
Service
following
command
deletes
ibd
VPPA
service
cfgadm
ib
Example
Listing
Services
following
command
lists
all
cfgadm
ib
Port
communication
srp
VPPA
communication
ipib
nfs
communication
hnfs
Example
Reprobing
IOC
Devices
following
command
reprobes
all
IOC
device
cfgadm
ib
This
operation
can
update
properties
IOC
Continue
y
Example
Unconfiguring
All
Kernel
Clients
HCA
following
command
unconfigures
all
kernel
clients
HCA
cfgadm
This
operation
will
unconfigure
clients
this
Continue
y
library
generic
InfiniBand
device
administration
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsl
InfiniBand
Specification
Volume
Apart
from
listing
cfgadm
only
superuser
can
execute
any
functions
tachment
PCI
Express
Hotplug
hardware
specific
commands
cfgadm
|
function
|
|
PCI
hardware
specific
provides
support
hot
plugging
PCI
Express
adapter
cards
into
respective
hot
pluggable
slots
system
that
is
hot
plug
through
cfgadm
command
Hot
plug
administrative
models
between
PCI
Express
remain
same
except
where
noted
this
For
PCI
Hot
each
hot
plug
slot
specific
PCI
bus
is
represented
by
attachment
point
that
specific
PCI
An
attachment
point
consist
two
receptacle
receptacle
under
PCI
hot
plug
is
usually
referred
to
as
physical
hot
pluggable
occupant
is
usually
referred
to
as
PCI
adapter
card
that
plugs
into
Attachment
points
are
named
through
There
are
two
types
logical
physical
is
based
physical
that
whereas
logical
is
more
For
PCI
hot
pluggable
logical
is
usually
corresponding
hot
plug
controller
driver
name
plus
logical
slot
that
PCI
nexus
with
hot
plug
troller
driver
named
hpc
slot
number
Hot
plug
PCI
is
Note
that
is
not
same
as
information
Type
See
detailed
description
hot
plug
For
attachment
points
located
PCI
Express
hierarchy
parent
ancestor
is
PCI
Express
including
attachment
points
which
are
not
PCI
Express
devices
following
naming
scheme
is
APID
where
indicates
chassis
containing
where
is
PCI
Express
expansion
followed
by
serial
number
available
|
where
is
name
assigned
by
platform
hardware
is
PCI
Express
devices
PCI
is
driver
name
device
is
hardware
slot
is
PCI
device
number
standard
PCI
is
constructed
that
attempts
to
describe
attachment
topological
location
more
physically
identifiable
terms
user
This
consists
components
each
ated
by
leaf
component
describes
device
attachment
point
itself
while
right
adjacent
component
up
to
right
component
describes
parent
up
to
root
Each
consists
optionally
preceded
by
which
indicates
expansion
chassis
containing
device
described
by
consists
followed
by
optional
type
is
PCI
Express
expansion
chassis
while
is
hexadecimal
number
ing
raw
serial
number
obtained
from
expansion
chassis
ASCII
character
sequence
Sun
branded
expansion
Each
consists
one
three
possible
form
form
form
precedence
which
form
to
select
flows
from
lowest
form
number
to
highest
form
from
top
to
bottowm
as
described
If
form
cannot
be
successfully
then
next
numerically
higher
form
is
form
is
taken
from
property
corresponding
node
device
tree
is
name
assigned
by
hardware
This
format
is
not
predefined
In
form
indicates
device
type
is
PCI
press
while
take
from
property
corresponding
device
indicates
hardware
slot
number
form
is
used
when
all
other
forms
cannot
successfully
be
is
considered
to
be
default
is
driver
is
such
is
same
as
described
form
is
PCI
device
number
as
described
used
device
figuration
cycles
standard
PCI
In
summary
expanding
optional
FRU
component
that
may
precede
will
consist
one
following
forms
final
form
actual
name
used
cfgadm
is
decided
as
specified
order
form
can
fit
within
fixed
length
limit
then
itself
is
used
form
exceeds
length
last
component
is
contained
within
expansion
contains
then
last
component
is
requirement
this
form
is
to
ensure
globally
unique
form
exceeds
length
default
form
last
nent
is
used
Whichever
final
name
is
is
stored
Information
field
which
can
be
displayed
using
This
information
can
be
used
to
physically
locate
any
named
using
form
form
is
tranformed
slightly
when
stored
information
by
replacement
colon
with
forward
slashes
to
more
closely
denote
topological
can
include
components
that
are
not
hotpluggable
above
leaf
component
up
to
onboard
host
See
EXAMPLES
section
list
hotpluggable
following
options
are
function
following
functions
are
supported
PCI
hot
pluggable
configure
Configure
PCI
device
slot
to
be
used
by
connect
Connect
slot
to
PCI
disconnect
Disconnect
slot
from
PCI
insert
Not
remove
Not
unconfigure
Logically
remove
PCI
resources
from
Not
|
Print
out
PCI
hot
plug
specific
help
list
List
values
PCI
Hot
Plug
No
hardware
specific
options
are
currently
Same
as
generic
This
command
is
only
supported
platforms
which
support
testing
capability
Execute
verbose
When
option
is
used
with
cfgadm
command
outputs
information
about
attachment
For
attachment
points
located
PCI
Express
Information
field
will
contain
attachment
absolute
slot
path
including
any
hardware
platform
specific
labeling
information
each
component
slot
Each
component
slot
path
will
be
seperated
by
See
PCI
Express
naming
For
PCI
Hot
Plug
attachment
points
not
located
PCI
Express
Information
field
will
be
system
This
string
will
be
obtained
from
property
bus
information
Type
field
is
printed
with
without
occupant
Type
field
will
describe
contents
There
are
possible
unknown
slot
is
If
card
is
card
is
not
configured
there
is
no
driver
device
card
slot
is
subclass
is
string
representing
subclass
code
If
card
is
MULT
will
get
printed
board
is
string
representing
board
type
For
hp
is
string
used
PCI
Hot
Plug
hs
is
used
Hot
Swap
nhs
Swap
cPCI
bhs
Basic
Hot
Swap
cPCI
fhs
Full
Hot
Swap
cPCI
Most
PCI
cards
with
more
than
one
device
are
not
are
implemented
as
PCI
bridge
with
arbitrary
devices
behind
In
those
subclass
displayed
is
that
PCI
Most
bridges
are
generic
PCI
to
PCI
bridge
PCI
Perform
hardware
specific
These
hardware
specific
functions
should
not
normally
change
state
ceptacle
following
are
|
Change
state
slot
preserve
state
slot
across
Preservation
state
across
reboot
is
only
supported
select
enables
addition
hardware
to
this
slot
hot
plugging
boot
disables
addition
hardware
to
this
slot
hot
plugging
boot
When
slot
is
disabled
condition
is
shown
as
|
Change
ability
to
autoconfigure
occupant
Only
platforms
that
support
auto
configuration
support
this
enables
ability
to
autoconfigure
disables
ability
to
autoconfigure
Autoconfiguration
is
done
through
attention
button
PCI
Express
platforms
through
latch
CompactPCI
When
autoconfiguration
is
attention
button
latch
mechanism
cannot
be
used
to
configure
occupant
Without
print
list
current
LED
With
set
mode
specific
LED
Specify
as
Specify
as
off
For
PCI
only
power
attn
LEDs
are
valid
only
state
attn
LED
can
be
Changing
state
LED
does
not
change
state
receptacle
LEDs
are
trolled
by
hot
plug
no
user
intervention
is
Use
this
command
testing
Changing
state
LED
can
misrepresent
state
occupant
following
command
prints
values
cfgadm
led
Led
following
command
turns
Fault
cfgadm
following
command
turns
off
Power
cfgadm
following
command
sets
active
LED
to
blink
to
indicate
location
cfgadm
Example
Printing
out
Value
Each
Slot
following
command
prints
out
values
each
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
connected
unconfigured
unknown
connected
unconfigured
unknown
connected
configured
ok
unknown
empty
unconfigured
unknown
connected
configured
ok
connected
configured
ok
connected
configured
ok
unknown
empty
unconfigured
unknown
connected
configured
ok
Example
Replacing
Card
following
command
lists
all
attachment
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
connected
unconfigured
unknown
connected
unconfigured
unknown
connected
configured
ok
unknown
empty
unconfigured
unknown
connected
configured
ok
connected
configured
ok
connected
configured
ok
unknown
empty
unconfigured
unknown
connected
configured
ok
following
command
unconfigures
electrically
disconnects
cfgadm
disconnect
change
can
be
verified
by
entering
following
cfgadm
Type
Receptacle
Occupant
Condition
unknown
disconnected
unconfigured
unknown
Now
card
can
be
following
command
electrically
connects
configures
cfgadm
configure
change
can
be
verifed
by
entering
following
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
ok
Example
Interpreting
ApIds
devices
PCI
Express
topology
following
command
shows
listing
topology
with
both
PCI
Express
PCI
attachment
points
pansion
chassis
connected
to
hotpluggable
slots
host
cfgadm
Information
In
this
represents
hotpluggable
slots
Since
form
does
not
match
any
forms
stated
grammar
specification
section
described
can
infer
that
such
name
base
component
this
hotplug
topology
is
derived
from
platform
through
Slot
this
slot
is
empty
occupant
is
unconfigured
Slot
this
slot
contains
expansion
chassis
with
two
hotpluggable
represent
two
PCI
slots
contained
within
that
expansion
chassis
with
physical
slot
numbers
sion
chassis
this
case
does
not
have
exports
Slot
this
slot
contains
third
party
expansion
chassis
with
hexadecimal
Within
that
expansion
sis
are
two
hotpluggable
represents
PCI
Express
slot
with
physical
slot
ber
slot
has
label
which
is
derived
from
hardware
Slot
this
slot
contains
Sun
expansion
chassis
with
FRU
identifier
This
expansion
chassis
contains
three
PCI
Express
with
physical
slot
numbers
two
PCI
with
physical
slot
numbers
following
command
shows
listing
topology
with
both
PCI
Express
PCI
attachment
points
pansion
chassis
connected
hotpluggable
host
cfgadm
Information
In
this
host
system
only
has
one
hotpluggable
We
can
infer
that
are
not
hotpluggable
slots
do
not
appear
as
attachment
points
themselves
each
contains
third
party
expansion
chassis
with
hotpluggable
following
command
shows
listing
topology
with
attachment
points
that
are
lacking
certain
device
cfgadm
Information
In
this
host
system
contains
two
hotpluggable
In
this
uses
form
default
base
component
framework
could
not
obtain
enough
information
to
produce
other
more
descriptive
forms
higher
Interpreting
attachment
point
represents
PCI
Express
slot
with
PCI
device
number
does
not
imply
physical
slot
number
bound
to
nexus
driver
instance
tachment
point
represents
PCI
Express
slot
with
PCI
device
number
bound
to
driver
instance
Under
is
third
party
expansion
chassis
without
with
three
hotpluggable
PCI
press
following
command
shows
listing
topology
with
attachment
point
paths
exceeding
ApId
field
length
cfgadm
Information
In
this
there
is
only
one
hotpluggable
Connected
under
is
SUN
sion
chassis
with
FRU
identifier
Nested
under
PCI
Express
slot
that
expansion
chassis
lies
another
expansion
chassis
with
three
hotpluggable
PCI
Because
length
form
exceeds
ApId
field
length
leaf
component
is
globally
form
is
where
leaf
path
component
is
used
as
final
following
command
shows
listing
topology
with
attachment
point
paths
exceeding
ApId
field
length
limit
lacking
enough
information
to
uniquely
identify
leaf
own
missing
cfgadm
Information
In
this
there
is
only
one
hotpluggable
Connected
under
is
third
party
pansion
chassis
with
hexadecimal
Nested
under
PCI
Express
slot
that
pansion
chassis
lies
another
third
part
expansion
chassis
without
with
two
hotpluggable
PCI
Express
Because
length
form
exceeds
ApId
field
length
leaf
component
is
not
globally
form
is
form
is
where
form
leaf
component
is
used
as
final
default
form
form
leaf
component
PCI
Express
slot
with
device
number
bound
to
driver
instance
default
form
leaf
component
represents
PCI
Express
slot
with
device
number
bound
to
driver
instance
Hardware
specific
library
PCI
hot
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsl
SATA
commands
cfgadm
|
function
|
|
SATA
hardware
specific
provides
functionality
SATA
hot
plugging
through
cfgadm
cfgadm
operates
attachment
which
are
locations
system
where
hardware
resources
can
be
dynamically
See
information
regarding
attachment
Each
SATA
port
device
port
is
represented
by
attachment
point
device
SATA
connected
configured
system
are
shown
as
attachment
point
name
terms
are
used
interchangeably
following
Attachment
points
are
named
through
All
SATA
attachment
points
consist
string
lowing
where
X
is
SATA
controller
number
P
is
SATA
device
port
number
to
M
is
port
device
port
number
to
port
multiplier
host
port
number
It
is
used
only
when
port
multiplier
is
attached
to
SATA
device
identifies
attached
SATA
device
Y
is
target
number
In
device
identifier
is
derived
from
corresponding
logical
link
device
Because
only
one
LUN
is
supported
by
SATA
component
device
string
will
always
have
ber
For
logical
device
port
port
multiplier
connected
to
device
port
SATA
controller
would
If
SATA
disk
device
is
connected
to
this
attachment
device
is
would
string
identifying
device
has
correspondence
to
device
attachment
A
simple
listing
attachment
points
system
will
include
all
SATA
device
ports
attached
For
Type
Receptacle
Occupant
Condition
disk
connected
configured
ok
disk
connected
configured
ok
connected
configured
ok
empty
unconfigured
ok
disconnected
unconfigured
unknown
sata
port
disconnected
unconfigured
unknown
sata
port
empty
unconfigured
ok
connected
configured
ok
disk
connected
configured
ok
empty
unconfigured
ok
empty
unconfigured
ok
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
See
more
information
regarding
listing
attachment
receptacle
state
attachment
point
SATA
port
have
following
empty
SATA
port
is
No
device
presence
was
detected
this
disconnected
SATA
port
is
not
enabled
SATA
device
presence
was
detected
no
communication
with
device
was
port
has
connected
SATA
device
is
detected
port
communication
with
device
is
occupant
attached
to
SATA
state
have
following
configured
attached
SATA
device
is
configured
ready
to
use
by
operating
unconfigured
No
device
is
SATA
device
attached
to
SATA
port
was
not
yet
To
figure
run
command
configure
attachment
point
condition
have
following
ok
SATA
port
is
is
ready
failed
SATA
port
It
may
be
disabled
by
It
is
unusable
condition
is
It
may
be
due
to
device
unknown
SATA
port
is
disabled
condition
is
A
is
combination
attachment
point
receptacle
occupant
attachment
point
valid
states
SATA
port
is
enabled
No
device
presence
was
SATA
port
is
enabled
device
presence
was
detected
no
communications
with
device
was
SATA
Port
is
disabled
condition
is
SATA
Port
is
disabled
port
was
disabled
by
system
due
to
SATA
Port
is
enabled
A
device
presence
was
detected
communication
with
device
was
device
is
not
configured
to
be
used
by
device
is
present
is
ready
to
use
by
cfgadm
defines
several
types
operations
besides
listing
These
operations
include
invoking
figuration
state
invoking
hardware
specific
functions
obtaining
configuration
administration
help
messages
function
following
generic
functions
are
defined
SATA
hardware
specific
For
SATA
port
attachment
following
configuration
state
change
operations
are
connect
Enable
SATA
port
establish
communication
with
attached
This
operation
implies
port
disconnect
Unconfigure
attached
is
not
already
disable
SATA
A
quent
command
enables
SATA
port
operation
does
not
bring
device
to
For
SATA
device
attached
to
SATA
port
following
state
change
operations
are
configure
Configure
new
device
use
by
operating
system
is
not
already
This
command
also
implies
connect
unconfigure
Unconfigure
device
connected
to
SATA
port
is
not
already
configure
unconfigure
operations
cannot
be
used
attachment
point
where
port
multiplier
is
Port
multipliers
are
configured
unconfigured
automatically
by
configure
configure
operations
apply
to
all
SATA
devices
connected
to
port
device
Not
SATA
specific
help
can
be
obtained
by
using
help
option
with
any
SATA
attachment
option
works
as
described
When
paired
with
field
contains
following
manufacturer
string
product
string
product
Serial
Number
No
hardware
specific
options
are
currently
Attachment
points
class
SATA
can
be
listed
by
using
select
See
Perform
SATA
supported
by
SATA
If
port
operation
is
not
supported
by
SATA
error
message
is
Perform
hardware
specific
Some
following
commands
used
SATA
ports
SATA
controller
may
affect
any
SATA
devices
that
have
been
as
refers
to
SATA
port
entire
SATA
as
If
operation
plies
unconfiguring
cannot
be
unconfigured
device
contains
mounted
ror
message
is
issued
operation
is
not
An
error
message
will
be
also
issued
SATA
troller
does
not
support
specified
Reset
SATA
device
attached
to
SATA
SATA
port
state
does
not
Reset
SATA
port
specified
by
If
SATA
device
is
attached
to
is
also
This
operation
may
be
also
performed
port
to
which
port
multiplier
is
If
port
multiplier
is
connected
to
SATA
controller
SATA
devices
attached
to
port
multiplier
may
not
be
reset
Reset
SATA
controller
specified
by
controller
number
part
all
attached
devices
all
connected
including
port
multipliers
devices
connected
to
port
device
This
operations
implies
unconfiguring
all
attached
devices
prior
to
Any
newly
enumerated
devices
will
be
left
Force
deactivation
port
when
all
else
This
is
meant
as
emergency
use
with
Force
activation
This
is
meant
emergency
situations
port
which
was
deactivated
to
recover
from
Perform
operation
SATA
This
operation
implies
unconfiguring
all
devices
resetting
SATA
Execute
verbose
following
Transitions
table
reports
state
transitions
resulting
from
operations
hotplugging
current
state
operation
possible
new
state
device
unconfigure
error
no
state
change
configure
error
no
state
change
connect
error
no
state
change
disconnect
device
unplug
no
state
change
unconfigure
error
no
state
change
configure
error
no
state
change
connect
error
no
state
change
disconnect
error
no
state
change
unknown
disk
configure
error
state
change
to
unknown
configure
state
change
to
possible
error
message
unknown
connect
unknown
disconnect
error
no
state
change
failed
any
command
error
no
state
change
other
than
commands
disk
unplug
error
message
configure
unconfigure
error
no
state
change
connect
error
no
state
change
disconnect
disk
unplug
error
message
configure
error
no
state
change
unconfigure
error
device
cannot
be
no
state
connect
error
no
state
change
disconnect
error
device
cannot
be
no
state
Example
Configuring
Disk
following
command
configures
disk
attached
to
SATA
controller
port
cfgadm
configure
This
command
should
be
issued
only
when
there
is
device
connected
to
SATA
Example
Unconfiguring
Disk
following
command
unconfigures
disk
attached
to
SATA
controller
port
cfgadm
unconfigure
device
identifying
string
is
shown
when
attachment
point
receptacle
state
is
occupant
state
is
Example
Encountering
Mounted
File
System
While
Unconfiguring
Disk
following
command
illustrates
encountering
mounted
file
system
while
unconfiguring
cfgadm
unconfigure
system
responds
with
Component
system
is
try
failed
to
Resource
Information
mounted
filesystem
Hardware
specific
library
generic
SATA
hot
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsl
emergency
operation
is
not
supported
ports
with
attached
disks
containing
critical
partitions
such
as
root
deactivate
operation
should
not
be
attempted
such
rect
usage
can
result
system
hang
require
Hotplugging
operations
are
not
supported
by
all
SATA
If
SATA
connectors
are
type
SATA
controller
supports
SATA
device
can
be
hotplugged
any
system
detects
event
establishes
communication
with
device
has
to
be
configured
by
explicit
configure
If
SATA
connectors
are
type
SATA
controller
supports
unplugging
vice
without
unconfiguring
may
result
system
hang
data
If
device
is
unconfigured
receptacle
state
is
not
disconnected
unplugging
device
from
SATA
port
will
result
error
connectors
some
SATA
devices
do
not
conform
to
SATA
hotplug
Performing
hotplug
tions
such
devices
can
cause
damage
to
SATA
controller
SATA
cfgadm
commands
system
board
administration
cfgadm
cfgadm
function
|
unassign
|
cfgadm
cfgadm
function
plugin
provides
dynamic
reconfiguration
functionality
disconnecting
class
sbd
system
It
also
enables
to
connect
disconnect
system
board
from
ning
system
without
having
to
reboot
cfgadm
command
resides
See
plugin
resides
Each
board
slot
appears
as
single
attachment
point
device
Each
component
appears
as
dynamic
tachment
You
can
view
condition
each
states
condition
each
board
slot
by
using
cfgadm
options
perform
differently
depending
form
attachment
points
is
different
depending
See
Platform
Notes
section
more
following
are
names
descriptions
component
failed
component
failed
ok
component
is
unknown
component
has
not
been
following
is
name
description
receptacle
state
connected
component
is
connected
to
board
following
are
names
descriptions
occupant
states
configured
component
is
available
use
by
Solaris
operating
unconfigured
component
is
not
available
use
by
Solaris
operating
following
are
names
descriptions
board
failed
board
failed
ok
board
is
unknown
board
has
not
been
unusable
board
slot
is
Inserting
board
changes
receptacle
state
from
empty
to
Removing
board
changes
receptacle
state
from
disconnected
to
Removing
board
that
is
connected
state
that
is
powered
disconnected
state
crashes
operating
system
can
result
permanent
damage
to
following
are
names
descriptions
receptacle
states
connected
board
is
powered
connected
to
system
You
can
view
components
board
only
after
is
connected
disconnected
board
is
disconnected
from
system
A
board
can
be
disconnected
state
without
ing
powered
board
must
be
powered
off
disconnected
state
before
remove
from
empty
A
board
is
not
occupant
state
disconnected
board
is
always
following
table
contains
names
scriptions
occupant
states
configured
At
least
one
component
board
is
unconfigured
All
components
board
are
Platforms
based
dynamic
system
domains
referred
to
as
domains
this
divide
slots
chassis
into
electrically
isolated
hardware
partitions
Platforms
that
are
not
based
DSDs
assign
all
slots
to
system
A
slot
can
be
empty
can
be
assigned
available
to
any
number
number
slots
available
to
given
domain
is
controlled
by
available
component
list
that
is
maintained
system
ACL
is
not
access
control
list
provided
by
Solaris
operating
A
slot
is
visible
to
domain
only
slot
is
ACL
is
not
assigned
to
another
An
unassigned
slot
is
visible
to
all
domains
that
have
slot
After
slot
has
been
assigned
to
slot
is
no
longer
visible
to
any
other
A
slot
that
is
visible
to
not
must
first
be
assigned
to
domain
before
any
other
state
ing
commands
are
assign
can
be
done
explicitly
using
assign
implicitly
as
part
A
slot
must
be
unassigned
from
domain
before
can
be
used
by
another
unassign
is
always
ther
directly
using
unassign
as
option
to
disconnect
using
Functions
that
change
state
board
slot
component
board
can
be
issued
concurrently
against
any
attachment
Only
one
state
changing
operation
is
permitted
given
A
Y
Busy
field
state
changing
information
indicates
operation
is
following
list
contains
functions
that
change
configure
unconfigure
connect
disconnect
Commands
that
change
availability
board
can
be
issued
concurrently
against
any
attachment
Only
one
availability
change
operation
is
permitted
given
These
functions
also
change
information
string
cfgadm
A
Y
Busy
field
indicates
that
operation
is
following
list
contains
functions
that
change
assign
unassign
Functions
that
change
condition
board
slot
component
board
can
be
issued
concurrently
against
any
attachment
Only
one
condition
change
operation
is
permitted
given
These
functions
also
change
information
string
cfgadm
A
Y
Busy
field
indicates
operation
is
following
list
contains
functions
that
change
poweron
poweroff
test
This
section
contains
description
unconfigure
illustrates
states
source
target
boards
different
stages
during
process
moving
permanent
In
following
code
permanent
memory
board
must
be
moved
to
another
board
board
is
board
is
A
status
change
operation
cannot
be
initiated
board
while
is
marked
as
For
CPU
tion
has
been
removed
from
code
process
is
started
with
following
cfgadm
unconfigure
memory
board
same
address
range
as
permanent
memory
board
must
be
ing
this
source
target
memory
attachment
points
are
marked
as
You
can
display
status
with
following
cfgadm
Type
Receptacle
Occupant
Busy
CPU
connected
configured
y
memory
connected
configured
y
CPU
connected
configured
y
memory
connected
configured
y
After
memory
has
been
deleted
board
is
marked
as
memory
board
remains
is
still
marked
as
as
following
Type
Receptacle
Occupant
Busy
CPU
connected
configured
y
memory
connected
configured
y
CPU
connected
configured
y
memory
connected
unconfigured
n
memory
from
board
is
then
copied
to
board
After
has
been
occupant
state
memory
is
memory
board
becomes
memory
board
becomes
At
this
point
only
board
remains
as
following
Type
Receptacle
Occupant
Busy
CPU
connected
configured
y
memory
connected
unconfigured
n
CPU
connected
configured
n
memory
connected
configured
n
After
entire
process
has
been
memory
board
remains
attachment
points
are
not
as
following
Type
Receptacle
Occupant
Busy
CPU
connected
configured
n
memory
connected
unconfigured
n
CPU
connected
configured
n
memory
connected
configured
n
permanent
memory
has
been
memory
board
has
been
At
this
can
initiate
new
state
changing
operation
You
can
specify
options
that
follow
options
interpreted
by
system
board
All
options
must
be
preceded
by
platform
following
example
contains
general
mat
command
with
command
This
man
page
does
not
include
options
cfgadm
See
tions
those
following
options
are
supported
by
function
Performs
state
change
You
can
use
following
unconfigure
Changes
occupant
state
to
This
function
applies
to
system
board
slots
to
all
components
system
unconfigure
function
removes
CPUs
from
CPU
list
deletes
physical
memory
from
system
memory
If
any
device
is
still
cfgadm
command
fails
reports
failure
to
You
can
retry
command
as
soon
as
device
is
no
longer
If
CPU
is
must
ensure
that
is
off
line
fore
See
unconfigure
function
moves
physical
memory
to
another
system
board
before
deletes
memory
from
board
want
to
Depending
type
memory
being
command
fails
cannot
find
enough
memory
another
board
cannot
find
appropriate
physical
memory
For
permanent
operating
system
must
be
suspended
while
memory
is
moved
memory
controllers
are
If
operating
system
must
be
will
be
prompted
to
ceed
with
You
can
use
options
to
always
answer
yes
no
Moving
memory
can
take
several
minutes
to
depending
amount
memory
system
You
can
monitor
progress
operation
by
issuing
status
command
against
memory
attachment
You
can
also
interrupt
memory
operation
by
stopping
cfgadm
deleted
memory
is
returned
to
system
memory
disconnect
Changes
receptacle
state
to
This
function
applies
only
to
system
board
If
occupant
state
is
disconnect
function
attempts
to
unconfigure
It
then
powers
off
system
At
this
board
can
be
removed
from
This
function
leaves
board
assigned
state
platforms
that
support
dynamic
system
If
specify
disconnect
function
leaves
board
powered
If
specify
disconnect
function
unassigns
board
from
If
unassign
board
from
can
assign
to
another
is
assigned
to
another
is
not
available
to
domain
from
which
is
was
configure
Changes
occupant
state
to
This
function
applies
to
system
board
slots
to
any
nents
system
If
receptacle
state
is
configure
function
attempts
to
connect
It
then
walks
tree
devices
that
is
created
by
connect
attaches
devices
Running
this
function
configures
all
components
except
those
that
have
already
been
For
configure
function
adds
CPUs
to
CPU
For
configure
function
ensures
that
memory
is
initialized
then
adds
memory
to
system
memory
CPUs
memory
are
ready
use
after
configure
function
has
been
completed
For
must
use
mount
ifconfig
commands
before
devices
can
be
See
connect
Changes
receptacle
state
to
This
function
applies
only
to
system
board
If
board
slot
is
not
assigned
to
connect
function
attempts
to
assign
slot
to
powers
tests
then
connects
board
electronically
to
system
bus
probes
After
connect
function
is
completed
can
use
option
to
view
status
components
connect
function
leaves
all
components
unconfigured
assignment
step
applies
only
to
platforms
that
support
dynamic
system
Overrides
software
state
changing
option
never
overrides
fundamental
safety
availability
constraints
hardware
operating
Lists
state
condition
attachment
points
specified
format
controlled
by
options
as
specified
plugin
provides
specific
information
info
field
as
described
format
this
information
might
be
altered
by
parsable
parsable
info
field
is
composed
cpu
cpu
type
displays
following
Where
is
represents
ID
If
more
than
one
is
this
CPU
has
multiple
active
virtual
Where
is
number
represents
speed
CPU
Where
is
number
represents
size
ecache
If
CPU
has
multiple
active
tual
ecache
could
be
shared
among
virtual
divided
between
memory
memory
type
displays
following
as
Where
is
representing
base
physical
Where
is
representing
size
memory
Where
is
representing
size
permanent
memory
unconfigurable
An
operating
system
setting
that
prevents
memory
from
being
board
is
participating
interleaving
with
other
Represents
source
attachment
Represents
target
attachment
Where
is
representing
amount
memory
that
has
already
been
deleted
Where
is
representing
amount
memory
to
be
deleted
io
io
type
displays
following
Represents
physical
path
to
referenced
component
is
board
board
type
displays
following
boolean
If
are
not
then
opposite
assigned
board
is
assigned
to
board
is
powered
same
items
appear
info
field
more
readable
format
parsable
option
is
not
parsable
Returns
information
info
field
as
boolean
name
set
separated
by
space
parsable
option
can
be
used
conjunction
with
See
man
page
more
mation
about
Tests
Before
board
can
be
must
pass
appropriate
level
Use
this
option
always
attempts
to
test
even
has
already
passed
appropriate
level
Testing
is
also
performed
when
connect
state
change
function
is
which
case
test
step
can
be
skipped
board
already
shows
appropriate
level
Thus
option
can
be
used
to
explicitly
quest
that
board
be
function
Performs
You
can
use
following
assign
Assigns
board
to
receptacle
state
must
be
disconnected
board
must
also
be
listed
domain
available
nent
See
Dynamic
System
unassign
Unassigns
board
from
receptacle
state
must
be
disconnected
board
must
also
be
listed
domain
available
nent
See
Dynamic
System
poweron
Powers
system
board
receptacle
state
must
be
poweroff
Powers
system
board
receptacle
state
must
be
following
operands
are
Receptacle
For
Sun
Fire
systems
such
as
Sun
Fire
receptacle
attachment
point
ID
takes
form
SBX
where
X
equals
slot
exact
format
depends
platform
typically
corresponds
to
physical
labelling
See
platform
specific
information
NOTES
Component
component
attachment
point
ID
takes
form
where
equals
one
component
types
described
X
equals
component
ponent
number
is
unit
above
convention
does
not
apply
to
memory
Any
DR
action
memory
attachment
point
affects
all
memory
system
following
examples
show
user
input
system
output
Sun
Fire
User
specifically
ences
to
attachment
points
system
output
might
differ
other
Sun
Fire
such
as
Sun
Fire
midrange
systems
such
as
Refer
to
Platform
Notes
specific
information
about
using
plugin
Fire
Example
Listing
All
System
Board
cfgadm
Type
Receptacle
Occupant
Condition
CPU
connected
configured
ok
cpu
connected
configured
ok
memory
connected
configured
ok
HPCI
connected
configured
ok
io
connected
configured
ok
io
connected
configured
ok
CPU
disconnected
unconfigured
failed
CPU
disconnected
unconfigured
unusable
unknown
empty
unconfigured
unknown
This
example
demonstrates
mapping
following
board
Slot
failed
Slot
is
cannot
hot
plug
board
into
that
Example
Listing
All
CPUs
System
Board
cfgadm
Type
Receptacle
Occupant
Condition
cpu
connected
configured
ok
cpu
connected
configured
ok
cpu
connected
configured
ok
cpu
connected
configured
ok
Example
Displaying
CPU
Information
Field
cfgadm
cpuid
speed
ecache
Mbytes
Example
Displaying
CPU
Information
Field
Parsable
Format
cfgadm
parsable
Example
Displaying
Devices
Board
cfgadm
parsable
assigned
referenced
referenced
Example
Monitoring
Unconfigure
Operation
In
following
memory
sizes
are
displayed
cfgadm
unconfigure
cfgadm
parsable
Example
Assigning
Slot
to
Domain
cfgadm
assign
Example
Unassigning
Slot
from
Domain
cfgadm
unassign
See
description
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
StabilitySee
interface
stability
is
output
stability
is
This
section
contains
information
how
to
monitor
progress
memory
delete
It
also
contains
platform
specific
following
shell
script
can
be
used
to
monitor
progress
memory
delete
cfgadm
unconfigure
This
is
then
printf
exit
fi
eval
then
echo
no
memory
delete
progress
involving
exit
fi
echo
deleting
target
while
true
do
eval
then
echo
KBytes
KBytes
remaining
else
echo
memory
delete
is
done
exit
fi
sleep
done
exit
following
syntax
is
used
to
refer
to
Platform
Notes
attachment
points
Sun
Enterprise
where
board
refers
to
system
component
refers
to
individual
System
boards
can
range
from
to
A
maximum
sixteen
system
boards
are
DR
model
running
Sun
Enterprise
domain
supports
limited
subset
functionality
provided
by
only
supported
operation
is
to
view
status
attachment
points
This
corresponds
to
option
all
associated
Attempting
to
perform
any
other
operation
from
domain
will
result
error
that
states
that
operation
is
not
All
operations
to
add
remove
system
board
must
be
initiated
from
System
Service
following
syntax
is
used
to
refer
to
attachment
points
Sun
Fire
where
board
refers
to
system
board
component
refers
to
individual
Depending
system
boards
can
range
from
through
boards
can
range
from
through
maximum
eighteen
system
boards
are
options
behave
differently
Sun
Fire
system
following
list
describes
system
controller
uses
CPU
to
test
system
boards
by
running
sequenced
by
hpost
To
test
driver
starts
testing
response
to
test
runs
automatically
without
er
driver
unconfigures
CPU
stretch
contiguous
physical
sends
mand
to
system
controller
to
test
system
controller
uses
CPU
memory
to
test
board
from
inside
You
can
only
use
CPUs
from
system
boards
MCPU
to
test
assign
|
unassign
In
Sun
Fire
system
administration
platform
administrator
controls
platform
hardware
through
use
available
component
list
each
This
information
is
maintained
system
Only
platform
administrator
can
modify
available
component
list
domain
administrator
is
only
allowed
to
assign
unassign
board
is
available
component
list
that
platform
administrator
does
not
have
this
can
assign
unassign
board
even
is
not
available
component
list
following
are
names
descriptions
component
cpu
CPU
io
device
memory
Memory
An
operation
memory
component
affects
all
memory
components
References
to
attachment
points
are
slightly
different
Sun
Fire
midrange
servers
such
as
systems
than
Sun
Fire
following
syntax
is
used
to
refer
to
attachment
points
Sun
Fire
systems
other
than
Sun
Fire
where
refers
to
board
refers
to
system
board
component
refers
to
individual
Depending
system
boards
can
range
from
through
boards
can
range
from
through
maximum
six
system
four
boards
are
following
are
names
descriptions
component
cpu
CPU
pci
device
memory
Memory
An
operation
memory
component
affects
all
memory
components
SCSI
hardware
specific
commands
cfgadm
|
function
|
|
SCSI
hardware
specific
library
provides
functionality
SCSI
through
cfgadm
operates
attachment
which
are
locations
system
where
hardware
resources
can
be
dynamically
Refer
to
information
regarding
attachment
For
SCSI
each
SCSI
controller
is
represented
by
attachment
point
device
In
each
SCSI
device
is
represented
by
dynamic
attachment
Attachment
points
are
named
through
Two
types
are
logical
physical
is
based
physical
whereas
logical
is
shorter
more
For
SCSI
logical
is
usually
sponding
disk
controller
For
typical
logical
would
be
SCSI
devices
are
named
relative
to
controller
Thus
disk
device
is
attached
to
controller
can
where
identifies
specific
In
device
identifier
is
derived
from
corresponding
logical
link
device
For
SCSI
tape
drive
logical
could
be
Here
is
logical
SCSI
controller
is
derived
from
logical
link
tape
drive
If
identifier
can
not
be
derived
from
link
unique
identifier
will
be
assigned
to
For
tape
device
has
no
link
can
be
assigned
form
where
is
unique
internally
generated
A
simple
listing
attachment
points
system
will
include
attachment
points
SCSI
controllers
not
SCSI
Use
flag
to
list
option
to
list
SCSI
devices
as
For
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
connected
configured
ok
connected
configured
ok
To
list
SCSI
devices
addition
to
SCSI
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
disk
connected
configured
unknown
tape
connected
configured
unknown
connected
configured
ok
connected
configured
ok
Refer
to
more
information
regarding
listing
attachment
receptacle
occupant
state
attachment
points
SCSI
controller
have
following
empty
not
applicable
disconnected
bus
quiesced
activity
bus
is
connected
bus
active
configured
one
more
devices
bus
is
configured
unconfigured
no
device
bus
is
configured
corresponding
states
individual
SCSI
devices
empty
not
applicable
disconnected
bus
to
which
device
is
attached
is
quiesced
connected
bus
to
which
device
is
attached
is
active
configured
device
is
configured
unconfigured
device
is
not
configured
cfgadm
defines
several
types
operations
besides
listing
operations
include
invoking
uration
state
invoking
hardware
specific
functions
obtaining
configuration
administration
help
messages
function
following
generic
commands
are
defined
SCSI
hardware
specific
For
SCSI
controller
attachment
following
configuration
state
change
operations
are
connect
Unquiesce
SCSI
disconnect
Quiesce
bus
activity
Incorrect
use
this
command
can
cause
system
to
See
configure
Configure
new
devices
SCSI
unconfigure
Unconfigure
all
devices
connected
to
following
generic
commands
are
defined
SCSI
configure
configure
specific
device
unconfigure
unconfigure
specific
device
When
used
with
disconnect
forces
quiesce
SCSI
supported
by
Incorrect
use
this
command
can
cause
system
to
See
SCSI
specific
help
can
be
obtained
by
using
help
option
with
any
SCSI
attachment
No
hardware
specific
options
are
currently
Attachment
points
class
scsi
can
be
listed
by
using
select
Refer
to
man
page
additional
No
test
commands
are
available
Some
following
commands
can
only
be
used
with
SCSI
controllers
some
only
with
SCSI
In
refers
to
SCSI
refers
to
SCSI
following
hardware
specific
functions
are
Add
new
device
to
SCSI
This
command
is
intended
interactive
use
Remove
device
This
command
is
intended
interactive
use
Remove
device
replace
with
another
device
same
This
command
is
intended
interactive
use
Reset
Reset
bus
without
resetting
any
devices
attached
to
Reset
bus
all
devices
locator
Sets
gets
hard
disk
locator
is
provided
by
If
suboption
is
not
state
hard
disk
locator
is
If
no
are
this
function
print
list
current
LED
If
are
this
tion
sets
mode
specific
LED
Example
Configuring
Disk
following
command
configures
disk
attached
to
controller
cfgadm
configure
Example
Unconfiguring
Disk
following
command
unconfigures
disk
attached
to
controller
cfgadm
unconfigure
Example
Adding
New
Device
following
command
adds
new
device
to
controller
cfgadm
system
responds
with
Adding
device
to
SCSI
This
operation
will
suspend
activity
SCSI
bus
Continue
y
system
responds
with
SCSI
bus
quiesced
It
is
now
safe
to
proceed
with
hotplug
Enter
y
operation
is
complete
n
to
abort
y
Example
Replacing
Device
following
command
replaces
device
attached
to
controller
cfgadm
system
responds
with
Replacing
SCSI
This
operation
will
suspend
activity
SCSI
Continue
y
system
responds
with
SCSI
bus
quiesced
It
is
now
safe
to
proceed
with
hotplug
Enter
y
operation
is
complete
n
to
abort
y
Example
Encountering
Mounted
File
System
While
Unconfiguring
Disk
following
command
illustrates
encountering
mounted
file
system
while
unconfiguring
cfgadm
unconfigure
system
responds
with
Component
system
is
try
failed
to
Resource
Information
mounted
filesystem
Example
Display
Value
Locator
Disk
following
command
displays
value
locator
This
example
is
specific
to
SPARC
prise
Server
cfgadm
locator
system
responds
with
Disk
Led
Example
Set
Value
Locator
Disk
following
command
sets
value
locator
This
example
is
specific
to
SPARC
Enterprise
Server
cfgadm
system
does
not
print
anything
library
generic
SCSI
library
generic
SCSI
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsl
disconnect
operation
is
not
supported
controllers
which
control
disks
containing
critical
partitions
such
as
root
disconnect
operation
should
not
be
attempted
such
rect
usage
can
result
system
hang
require
When
controller
is
disconnected
there
is
potential
deadlocks
occurring
disconnect
operation
should
be
used
with
A
controller
should
be
kept
disconnected
state
minimum
period
time
required
to
accomplish
DR
disconnect
command
is
provided
only
to
low
replacement
SCSI
cables
while
system
is
It
should
not
be
used
any
other
only
fix
deadlock
is
to
reboot
Hotplugging
operations
are
not
supported
by
all
SCSI
connectors
some
SCSI
devices
do
not
conform
to
SCSI
hotplug
Performing
hotplug
tions
such
devices
can
cause
damage
to
hardware
SCSI
Refer
to
hardware
manual
tional
commands
cfgadm
|
function
|
|
Secure
Digital
MultiMediaCard
hardware
specific
vides
functionality
through
cfgadm
command
ates
attachment
which
are
locations
system
where
hardware
resources
can
be
dynamically
See
information
attachment
Each
slot
is
represented
by
attachment
point
device
Card
devices
that
are
connected
configured
system
are
shown
as
attachment
point
name
terms
are
used
interchangeably
throughout
this
Attachment
points
are
named
through
All
attachment
points
consist
string
following
X
is
controller
S
is
slot
number
controller
to
identifies
inserted
memory
Y
is
target
In
device
identifier
is
derived
from
corresponding
logical
link
device
Because
only
one
LUN
is
supported
by
component
device
string
will
always
have
number
For
logical
slot
controller
would
be
If
media
card
is
inserted
this
attachment
point
device
is
might
be
string
identifying
device
has
correspondence
to
device
attachment
A
simple
listing
attachment
points
system
includes
all
device
slots
attached
For
Type
Receptacle
Occupant
Condition
sdcard
connected
configured
ok
disk
connected
configured
ok
connected
configured
ok
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
See
more
information
regarding
listing
attachment
receptacle
state
attachment
point
slot
has
following
empty
slot
is
No
device
presence
was
detected
this
disconnected
slot
is
not
device
presence
was
detected
no
communication
with
device
was
slot
has
connected
device
is
detected
slot
device
communication
is
occupant
inserted
state
has
following
configured
attached
device
is
configured
ready
to
use
by
operating
unconfigured
No
device
is
device
inserted
slot
is
not
yet
To
run
command
cfgadm
configure
attachment
point
condition
has
following
ok
slot
is
enabled
ready
failed
slot
It
may
be
disabled
by
It
is
unusable
dition
is
failure
may
be
due
to
device
inserted
unknown
slot
is
disabled
condition
is
cfgadm
command
defines
several
types
operations
besides
listing
These
operations
include
invoking
configuration
state
changes
invoking
hardware
specific
functions
obtaining
configuration
tion
help
messages
For
slot
attachment
following
configuration
state
change
operations
are
connect
Enable
slot
establish
communication
with
attached
This
operation
plies
slot
disconnect
Unconfigure
inserted
device
is
not
already
unconfigured
disable
A
sequent
command
enables
slot
operation
does
not
bring
device
to
following
state
change
operations
are
supported
card
inserted
to
configure
Configure
new
device
use
by
operating
system
is
not
already
This
command
also
implies
connect
unconfigure
Unconfigure
device
inserted
slot
is
not
already
Not
specific
help
can
be
obtained
by
using
help
option
with
any
attachment
option
works
as
described
When
paired
with
field
contains
following
product
model
string
product
revision
number
month
year
manufacture
product
serial
number
No
hardware
specific
options
are
currently
Attachment
points
class
can
be
listed
by
using
select
See
Not
supported
by
Perform
hardware
specific
reset
slot
specified
by
If
device
is
inserted
is
also
Execute
verbose
Example
Configuring
following
command
configures
card
attached
to
controller
slot
It
should
be
issued
only
when
there
is
device
inserted
cfgadm
configure
Example
Unconfiguring
following
command
unconfigures
card
inserted
controller
slot
cfgadm
unconfigure
Example
Encountering
mounted
file
system
while
unconfiguring
following
command
illustrates
encountering
mounted
file
system
while
unconfiguring
cfgadm
unconfigure
system
responds
with
Component
system
is
try
failed
to
Resource
Information
mounted
filesystem
Hardware
specific
library
generic
hot
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsl
Under
normal
media
cards
are
automatically
configured
when
card
is
Most
trators
do
not
find
necessary
to
use
this
command
under
normal
Removing
card
without
first
unconfiguring
may
result
data
loss
device
is
being
written
to
when
being
Devices
that
are
mounted
can
be
safely
removed
any
Devices
that
have
filesystems
other
than
should
always
be
explicitly
unconfigured
before
system
board
administration
function
|
|
|
|
sysctrl
hardware
specific
library
provides
dynamic
tion
functionality
configuring
disconnecting
system
boards
You
can
insert
both
CPU
boards
into
slot
running
system
that
is
configured
Solaris
without
You
can
also
disconnect
remove
both
types
boards
from
running
system
without
System
slots
appear
as
attachment
points
device
one
attachment
point
each
actual
slot
system
If
board
is
not
receptacle
state
is
If
board
is
ready
to
receptacle
state
is
If
board
is
is
connected
to
system
receptacle
state
is
occupant
state
is
unconfigured
when
receptacle
state
is
empty
occupant
state
is
ther
unconfigured
configured
when
receptacle
state
is
In
configured
state
devices
board
are
available
use
by
In
unconfigured
devices
board
are
Inserting
board
changes
receptacle
state
from
empty
to
Removing
board
changes
cle
state
from
disconnected
to
Removing
board
that
is
connected
state
crashes
operating
system
can
result
permanent
damage
to
Refer
to
more
complete
description
following
options
are
function
Perform
state
change
Specify
function
as
configure
configure
Change
occupant
state
to
If
receptacle
state
is
configure
function
first
attempts
to
connect
configure
function
walks
OBP
device
tree
created
as
part
connect
function
creates
Solaris
device
tree
attaching
devices
as
For
configure
adds
CPUs
to
CPU
list
These
are
visible
to
Two
memory
attachment
points
are
lished
Use
to
use
devices
new
To
use
use
psradm
to
new
Use
to
test
configure
memory
connect
Change
receptacle
state
to
Changing
receptacle
state
requires
that
system
bus
be
frozen
while
bus
signals
are
connected
board
bus
is
frozen
by
running
quiesce
operation
which
stops
all
process
activity
suspends
all
Because
quiesce
operation
subsequent
resume
can
be
time
are
not
supported
by
all
is
While
system
bus
is
board
being
connected
is
tested
by
This
operation
takes
short
time
boards
significant
time
boards
due
to
CPU
external
cache
This
does
not
provide
memory
user
is
prompted
confirmation
before
proceeding
with
Use
option
to
override
connect
operation
is
refused
board
is
marked
as
unless
force
enable
boot
is
See
disconnect
Change
receptacle
state
to
If
occupant
state
is
disconnect
function
first
attempts
to
unconfigure
nect
operation
does
not
require
quiesce
operation
operates
board
is
ready
unconfigure
Change
occupant
state
to
Devices
board
are
made
invisible
to
Solaris
during
this
devices
board
are
removed
from
Solaris
device
Any
device
that
is
still
use
stops
unconfigure
process
be
reported
as
unconfigure
operation
must
be
retried
after
device
is
made
For
memory
must
have
been
changed
to
unconfigured
state
prior
to
issuing
board
unconfigure
CPUs
board
are
powered
off
removed
from
Solaris
CPU
CPUs
that
have
processes
bound
to
cannot
be
See
more
information
Force
block
connecting
board
marked
as
See
Platform
Enterprise
Systems
List
Supported
as
described
type
field
can
be
one
disk
info
field
is
set
as
MHz
For
type
following
additional
information
appears
buffered
ble
buffered
ffb|no
ffb
For
disk
type
following
additional
information
appears
|
no
disk}
|
no
disk}
|
Modify
state
Use
this
option
conjunction
with
function
Use
with
connect
to
override
block
connecting
|
Perform
Specify
to
change
driver
state
specified
slot
from
disconnected
to
empty
without
need
physically
removing
board
during
automated
test
Specify
to
change
driver
state
slot
made
to
appear
empty
using
command
to
disconnected
state
as
had
been
Perform
Allows
quiesce
operation
required
board
connect
operations
to
be
execution
this
test
firms
with
current
software
hardware
is
possible
to
quiesce
If
device
process
cannot
be
name
is
printed
error
Any
valid
board
attachment
point
can
be
used
with
this
all
systems
have
given
form
is
Perform
Allows
condition
system
board
attachment
point
to
be
set
testing
policy
logic
state
change
new
setting
is
given
as
number
indicating
one
following
condition
unknown
ok
failing
failed
unusable
following
operand
is
attachment
points
boards
systems
are
published
by
instance
sysctrl
driver
names
attachment
points
are
numbered
from
through
Specify
as
number
tween
indicating
slot
This
form
conforms
to
logical
specification
given
corresponding
physical
are
listed
FILES
Hardware
specific
library
Attachment
Points
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Sun
Enterprise
Systems
Dynamic
Reconfiguration
Guide
Platform
Enterprise
Systems
Refer
to
Sun
Enterprise
Systems
Dynamic
Reconfiguration
Guide
al
details
regarding
dynamic
reconfiguration
system
USB
commands
cfgadm
|
function
|
|
Universal
Serial
Bus
library
provides
functionality
administering
USB
devices
via
cfgadm
operates
attachment
For
details
garding
attachment
refer
to
For
USB
only
attachment
points
supported
are
ports
hubs
attached
to
USB
Attachment
points
are
named
through
attachment
point
IDs
USB
bus
is
are
as
USB
hubs
have
numbered
from
to
All
USB
consist
string
following
where
N
is
Nth
USB
host
controller
A
is
port
root
B
is
port
hub
plugged
into
port
hub
above
C
is
port
hub
plugged
into
port
hub
above
For
first
port
root
hub
USB
controller
only
has
logical
second
port
first
external
hub
plugged
into
first
port
root
hub
first
USB
troller
has
logical
For
is
represents
port
hub
plugged
into
port
hub
plugged
into
port
hub
plugged
into
port
root
hub
first
USB
host
controller
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
ok
unknown
empty
unconfigured
ok
connected
configured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
connected
configured
ok
chips
have
one
EHCI
host
host
controller
number
companion
USB
host
controllers
ther
OHCI
UHCI
host
When
device
has
been
plugged
shows
up
EHCI
logical
ports
which
might
not
have
to
mapping
to
external
physical
port
numbers
When
device
is
plugged
EHCI
host
controller
reroutes
device
to
companion
host
controller
device
shows
up
logical
port
mapping
logical
port
numbers
to
physical
port
numbers
can
get
quite
For
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
unknown
connected
configured
ok
connected
configured
ok
unknown
empty
unconfigured
ok
connected
configured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
connected
configured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
connected
configured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
In
this
example
is
onboard
USB
host
are
companion
OHCI
host
controllers
is
EHCI
host
following
table
shows
somewhat
confusing
routing
this
logical
port
number
physical
port
number
internal
port
external
port
external
port
internal
port
external
port
internal
port
internal
port
external
port
external
port
external
port
exact
routing
can
often
only
be
determined
by
receptacle
states
attachment
points
USB
port
have
following
connected
USB
port
is
powered
A
USB
device
is
plugged
to
device
is
logically
connected
to
USB
disconnected
USB
port
is
powered
A
USB
device
is
plugged
into
device
has
been
logically
nected
from
USB
bus
cfgadm
disconnect
empty
USB
port
is
powered
no
device
is
plugged
to
occupant
states
devices
USB
port
attachment
points
USB
port
have
following
configured
USB
device
USB
port
is
configured
usable
by
unconfigured
USB
device
USB
port
was
explicitly
using
cfgadm
was
not
successfully
figured
use
with
having
no
driver
device
attachment
point
conditions
ok
Normal
state
ready
failing
Not
failed
Not
unusable
user
has
physically
removed
device
while
application
had
device
open
might
be
outstanding
Users
need
to
reinsert
same
physical
device
close
application
properly
before
removing
device
port
cannot
configure
other
inserted
devices
until
this
is
If
original
device
cannot
be
reinserted
into
see
instructions
clearing
this
attachment
point
unknown
Not
A
USB
device
can
be
hotplugged
hotunplugged
any
system
detects
event
takes
priate
It
is
not
necessary
to
transition
receptacle
to
disconnected
state
before
removing
device
from
is
not
recommended
to
devices
currently
use
as
removable
disks
currently
opened
by
volume
manager
some
other
cfgadm
defines
several
types
These
operations
include
invoking
configuration
state
changes
voking
functions
obtaining
configuration
administration
help
messages
If
any
these
operations
device
attachment
point
might
not
be
expected
Use
cfgadm
command
to
display
current
All
other
options
have
same
meaning
as
defined
following
options
are
function
following
generic
commands
are
defined
USB
hardware
specific
following
configuration
state
change
operations
are
configure
If
there
is
USB
device
plugged
into
this
command
attempts
to
configure
set
everything
up
that
is
usable
by
This
command
does
implied
connect
This
command
accomplishes
returns
error
device
that
port
is
already
After
successful
execution
this
device
is
ready
use
under
disconnect
Performs
unconfigure
is
not
already
then
transitions
receptacle
to
disconnected
even
though
device
is
still
be
plugged
into
Issuing
cfgadm
cally
hotplugging
brings
device
back
to
connected
receptacle
to
configured
pant
assuming
driver
can
be
found
there
are
no
problems
enumerating
configuring
unconfigure
Makes
device
plugged
into
port
unusable
by
Solaris
If
cfgadm
reports
this
cupant
state
as
Issuing
configure
to
brings
occupant
back
to
ured
as
physically
hotplugging
device
Not
USB
specific
help
can
be
obtained
by
using
help
option
with
any
USB
attachment
option
works
as
described
When
paired
with
Information
field
contains
following
manufacturer
string
product
string
total
number
configurations
device
supports
rent
configuration
setting
decimal
not
configuration
configuration
string
scriptor
current
configuration
See
Universal
Serial
Bus
specification
description
these
Hardware
options
are
only
supported
See
description
that
command
below
explanation
options
Attachment
points
class
USB
can
be
listed
by
using
select
See
following
functions
are
This
command
requires
mandatory
config
value
to
be
specified
using
Sets
USB
configuration
USB
device
to
configuration
index
device
is
set
to
this
configuration
henceforth
this
setting
persists
across
Valid
values
n
range
from
to
device
is
reset
by
disconnect
followed
by
configure
causes
device
to
be
configured
to
new
configuration
If
any
these
steps
configuration
file
device
are
restored
to
previous
state
error
sage
is
Performs
software
reset
This
is
equivalent
removing
device
inserting
back
port
hub
is
power
cycled
hub
supports
power
cycling
individual
If
connected
device
is
this
function
has
effect
resetting
that
hub
any
devices
down
tree
which
is
If
any
these
steps
device
is
restored
to
previous
state
error
message
is
State
attachment
points
state
versus
Valid
no
device
connected
logically
devinfo
node
device
physically
connected
logically
devinfo
node
present
available
table
below
clarifies
state
transitions
resulting
from
actions
current
state
operation
new
state
device
plugged
enumeration
device
cfgadm
cfgadm
cfgadm
device
plugged
device
cfgadm
cfgadm
reenumeration
cfgadm
device
plugged
device
cfgadm
cfgadm
reenumeration
cfgadm
device
plugged
device
with
ap
condition
device
was
open
when
removed
cfgadm
cfgadm
cfgadm
Example
Listing
Status
All
USB
Devices
following
command
lists
status
all
USB
devices
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
ok
unknown
empty
unconfigured
ok
connected
configured
ok
unknown
empty
unconfigured
ok
unknown
empty
unconfigured
ok
connected
configured
ok
Notice
that
cfgadm
treats
device
as
single
cannot
currently
control
individual
Example
Listing
Status
Port
with
No
Device
Plugged
In
following
command
lists
status
port
with
no
device
plugged
cfgadm
Type
Receptacle
Occupant
Condition
unknown
empty
unconfigured
ok
Example
Listing
Status
Same
Port
with
Device
Plugged
In
following
command
lists
status
same
port
after
physically
plugging
device
that
configures
without
cfgadm
Type
Receptacle
Occupant
Condition
connected
configured
ok
Example
Unconfiguring
Existing
USB
Device
following
command
unconfigures
USB
device
attached
to
then
displays
status
cfgadm
unconfigure
Unconfigure
This
operation
suspends
activity
USB
device
Continue
y
cfgadm
Type
Receptacle
Occupant
Condition
unknown
connected
unconfigured
ok
Example
Unconfiguring
Logically
Disconnecting
Existing
USB
Device
following
command
unconfigures
logically
disconnects
USB
device
attached
to
cfgadm
disconnect
Disconnect
This
operation
suspends
activity
USB
device
Continue
y
cfgadm
Type
Receptacle
Occupant
Condition
unknown
disconnected
unconfigured
ok
A
disconnect
implies
that
cfgadm
does
unconfigure
receptacle
status
now
shows
even
though
device
is
still
physically
In
this
physical
hotplug
using
cfgadm
configure
brings
back
Example
Configuring
Previously
Unconfigured
USB
Device
following
command
configures
USB
device
that
was
previously
attached
to
example
cfgadm
configure
cfgadm
Type
Receptacle
Occupant
Condition
unknown
connected
configured
ok
Example
Resetting
USB
Device
following
command
resets
USB
cfgadm
Reset
This
operation
suspends
activity
USB
device
Continue
y
Example
Displaying
Detailed
Information
About
USB
Device
following
command
displays
detailed
information
about
USB
This
device
shows
following
specific
information
Manufacturer
Iomega
Product
USB
Zip
Number
configurations
tion
currently
Configuration
string
descriptor
configuration
Default
cfgadm
Receptacle
Occupant
Condition
Information
When
Type
Busy
connected
configured
ok
Zip
Default
cfgadm
Information
Zip
Default
Example
Displaying
Detailed
Information
About
All
USB
Devices
following
command
displays
detailed
information
about
all
USB
devices
cfgadm
Information
cfg
str
cfg
str
Analog
Modem
Zip
Default
YEAR
cfg
str
Lines
containing
only
are
empty
These
can
be
filtered
This
example
only
lists
USB
with
connected
information
about
those
cfgadm
|
grep
Mfg
cfg
str
cfg
str
Analog
Modem
Zip
Default
YEAR
cfg
str
Example
Listing
Information
About
USB
Device
following
example
lists
information
about
USB
Notice
NConfigs
configurations
available
this
device
are
to
cfgadm
Information
Analog
Example
Setting
Current
Configuration
USB
Device
following
example
sets
current
configuration
USB
cfgadm
Setting
to
USB
configuration
This
operation
suspends
activity
USB
device
Continue
y
USB
configuration
changed
device
path
should
be
checked
to
ensure
that
right
instance
device
is
being
referred
case
where
multiple
devices
exact
same
type
are
same
This
information
is
available
Hardware
specific
library
generic
USB
device
administration
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsl
Universal
Serial
Bus
Specification
can
not
change
configuration
any
USB
device
currently
opened
by
any
These
operations
also
fail
hub
device
hierarchy
is
opened
by
See
unconfiguring
USB
device
that
is
currently
Only
can
execute
any
functions
attachment
one
need
not
be
to
list
attachment
cfgetospeed
get
input
output
baud
rate
struct
termios
struct
termios
function
extracts
input
baud
rate
from
termios
structure
to
which
argument
function
extracts
output
baud
rate
from
termios
structure
to
which
ment
These
functions
returns
exactly
value
termios
data
without
Upon
successful
returns
value
type
representing
input
baud
Upon
successful
returns
value
type
representing
output
baud
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
cfsadmin
administer
disk
space
used
caching
file
systems
with
Cache
cfsadmin
cfsadmin
|
all}
cfsadmin
cfsadmin
|
all
cfsadmin
cfsadmin
command
provides
following
cache
creation
deletion
cached
file
systems
listing
cache
contents
statistics
resource
parameter
adjustment
when
file
system
is
You
must
always
supply
option
For
each
form
command
except
must
specify
cache
that
directory
under
which
cache
is
actually
A
path
name
front
file
system
fies
cache
For
form
must
specify
mount
You
can
specify
cache
ID
when
mount
file
system
with
can
let
system
generate
one
option
includes
cache
ID
listing
You
must
know
cache
ID
to
delete
cached
file
following
options
are
Create
cache
under
directory
specified
by
This
directory
must
not
exist
prior
to
cache
{
|
all
}
Remove
file
system
whose
cache
ID
specify
release
remove
all
file
systems
cache
by
specifying
After
deleting
file
system
from
must
run
command
to
rect
resource
counts
As
indicated
by
syntax
must
supply
addition
to
List
file
systems
stored
specified
as
well
as
statistics
about
Each
cached
file
system
is
listed
by
cache
statistics
document
resource
utilization
cache
resource
{
}
|
all
Request
consistency
check
specified
file
system
all
cachefs
mounted
file
option
only
works
cache
file
system
was
mounted
with
demandconst
enabled
Each
file
specified
cache
file
system
is
checked
consistency
with
corresponding
file
back
file
Note
that
consistency
check
is
performed
file
by
file
as
files
are
If
no
files
are
no
checks
are
Use
this
option
does
not
result
sudden
consistency
As
indicated
by
syntax
must
supply
one
more
mount
Update
resource
parameters
specified
cache
Parameter
values
can
only
be
To
decrease
must
remove
cache
recreate
All
file
systems
cache
directory
must
be
unmounted
when
use
this
Changes
take
effect
next
time
mount
any
file
system
specified
cache
option
with
no
option
sets
all
parameters
to
default
You
can
specify
following
CacheFS
resource
parameters
as
arguments
to
Separate
multiple
eters
with
Maximum
amount
storage
space
that
CacheFS
can
expressed
as
percentage
total
ber
blocks
front
file
If
CacheFS
does
not
have
exclusive
use
front
file
there
is
no
guarantee
that
all
space
maxblocks
parameter
allows
is
default
is
Minimum
amount
storage
expressed
as
percentage
total
number
blocks
front
file
that
CacheFS
is
always
allowed
to
use
without
limitation
by
internal
control
If
CacheFS
does
not
have
exclusive
use
front
file
there
is
no
guarantee
that
all
space
minblocks
parameter
attempts
to
reserve
is
default
is
A
percentage
total
blocks
front
file
system
beyond
which
CacheFS
cannot
claim
sources
once
block
usage
has
reached
level
specified
by
default
is
Maximum
number
files
that
CacheFS
can
expressed
as
percentage
total
number
inodes
front
file
If
CacheFS
does
not
have
exclusive
use
front
file
there
is
no
guarantee
that
all
inodes
maxfiles
parameter
allows
is
default
is
Minimum
number
expressed
as
percentage
total
number
inodes
front
file
that
CacheFS
is
always
allowed
to
use
without
limitation
by
internal
control
If
CacheFS
does
not
have
exclusive
use
front
file
there
is
no
guarantee
that
all
inodes
minfiles
parameter
tempts
to
reserve
is
default
is
A
percentage
total
inodes
front
file
system
beyond
which
CacheFS
cannot
claim
inodes
once
usage
has
reached
level
specified
by
default
is
Largest
file
expressed
that
CacheFS
is
allowed
to
default
is
You
cannot
decrease
block
inode
allotment
To
decrease
size
must
remove
create
again
with
different
Currently
maxfilesize
is
ignored
by
setting
has
no
directory
under
which
cache
is
actually
directory
where
CacheFS
is
See
description
behavior
cfsadmin
when
encountering
files
greater
than
equal
to
Gbyte
Example
Creating
Cache
Directory
following
example
creates
cache
directory
named
cfsadmin
Example
Creating
Cache
following
example
creates
cache
named
that
can
claim
maximum
percent
blocks
front
file
can
use
percent
front
file
system
blocks
without
interference
by
CacheFS
internal
control
has
threshold
value
threshold
value
indicates
that
after
CacheFS
reaches
guaranteed
cannot
claim
more
space
percent
blocks
front
file
system
are
already
cfsadmin
Example
Changing
maxfilesize
Parameter
following
example
changes
maxfilesize
parameter
cache
directory
to
cfsadmin
Example
Listing
Contents
Cache
Directory
following
example
lists
contents
cache
directory
named
provides
statistics
about
resource
cfsadmin
Example
Removing
Cached
File
System
following
example
removes
cached
file
system
with
cache
ID
from
cache
directory
frees
resources
cache
ID
is
part
information
returned
by
cfsadmin
cfsadmin
Example
Removing
All
Cached
File
Systems
following
example
removes
all
cached
file
systems
from
cache
directory
cfsadmin
all
Example
Checking
Consistency
File
Systems
following
example
checks
consistency
all
file
systems
mounted
with
demandconst
No
errors
are
reported
no
demandconst
file
systems
were
cfsadmin
all
following
exit
values
are
Successful
An
error
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
cfsetospeed
set
input
output
baud
rate
int
termios
int
termios
function
sets
input
baud
rate
stored
structure
pointed
to
by
to
function
sets
output
baud
rate
stored
structure
pointed
to
by
to
There
is
no
effect
baud
rates
set
hardware
until
subsequent
successful
call
to
same
termios
Upon
successful
return
Otherwise
is
errno
may
be
set
to
indicate
functions
may
fail
EINVAL
speed
value
is
not
valid
baud
EINVAL
value
speed
is
outside
range
possible
speed
values
as
specified
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
cgsix
accelerated
color
frame
buffer
cgsix
is
graphics
accelerator
designed
to
enhance
vector
polygon
drawing
It
has
color
frame
buffer
provides
standard
frame
buffer
interface
as
defined
In
cgsix
supports
following
defined
FBIOGXINFO
Returns
information
about
See
definition
more
cgsix
has
registers
memory
that
may
be
mapped
with
using
offsets
defined
charmap
character
set
description
file
A
character
set
description
file
charmap
defines
characteristics
coded
character
Other
information
about
coded
character
set
may
also
be
Coded
character
set
character
values
are
defined
using
symbolic
acter
names
followed
by
character
encoding
character
set
description
file
capability
to
describe
character
set
attributes
as
collation
der
character
independent
character
set
using
only
characters
portable
ter
This
makes
possible
to
create
generic
source
files
all
codesets
that
share
portable
acter
Standardized
symbolic
names
all
characters
portable
character
making
possible
to
refer
to
any
such
character
regardless
Each
symbolic
name
is
included
file
is
mapped
to
unique
encoding
value
those
symbolic
names
that
are
shown
with
identical
If
control
characters
commonly
associated
with
symbolic
names
following
table
are
supported
by
symbolic
names
corresponding
encoding
values
are
included
Some
encodings
associated
with
symbolic
names
this
table
may
be
same
as
characters
portable
character
set
following
declarations
can
precede
character
Each
must
consist
symbol
shown
lowing
starting
column
including
surrounding
followed
by
one
more
blank
lowed
by
value
to
be
assigned
to
name
coded
character
set
which
character
set
description
file
is
maximum
number
bytes
This
defaults
to
An
unsigned
positive
integer
value
that
defines
minimum
number
bytes
character
encoded
character
escape
character
used
to
indicate
that
characters
following
will
be
interpreted
special
as
defined
later
this
This
defaults
to
backslash
which
is
character
glyph
used
all
lowing
text
unless
otherwise
character
that
when
placed
column
charmap
is
used
to
indicate
that
line
is
to
be
default
character
is
number
sign
character
set
mapping
definitions
will
be
all
lines
immediately
following
identifier
line
containing
string
CHARMAP
starting
column
preceding
trailer
line
containing
string
END
CHARMAP
starting
column
Empty
lines
lines
containing
first
column
will
be
Each
comment
line
character
set
mapping
that
between
CHARMAP
END
CHARMAP
lines
must
be
two
In
first
line
character
set
mapping
definition
defines
single
symbolic
name
ing
A
character
following
escape
character
is
interpreted
as
sequence
represents
symbolic
name
enclosed
between
angle
In
second
line
character
set
mapping
definition
defines
range
one
more
symbolic
In
this
symbolic
names
must
consist
zero
more
followed
by
integer
formed
by
one
more
decimal
characters
preceding
integer
must
be
identical
two
symbolic
integer
formed
by
digits
second
symbolic
name
must
be
equal
to
greater
than
integer
formed
by
digits
first
This
is
interpreted
as
series
symbolic
names
formed
from
common
part
each
integers
between
first
second
As
is
interpreted
as
symbolic
names
that
A
character
set
mapping
definition
line
must
exist
all
symbolic
names
must
define
coded
character
value
that
corresponds
to
character
glyph
indicated
coded
character
value
that
corresponds
with
control
character
symbolic
If
control
characters
commonly
associated
with
symbolic
names
are
ported
by
symbolic
name
corresponding
encoding
value
must
be
included
Additional
unique
symbolic
names
may
be
A
coded
character
value
can
be
represented
by
more
than
one
symbolic
encoding
part
is
expressed
as
one
character
more
concatenated
octal
hexadecimal
constants
following
byte
byte
byte
Decimal
constants
must
be
represented
by
two
three
decimal
preceded
by
escape
character
letter
Hexadecimal
constants
must
be
represented
by
two
mal
preceded
by
escape
character
letter
Octal
stants
must
be
represented
by
two
three
octal
preceded
by
escape
In
portable
charmap
each
constant
must
represent
Implementations
supporting
other
byte
sizes
may
allow
constants
to
represent
values
larger
than
those
that
can
be
represented
to
allow
additional
digits
When
constants
are
concatenated
character
must
be
same
interpreted
byte
order
from
first
to
last
with
least
significant
byte
character
specified
by
last
In
lines
defining
ranges
symbolic
encoded
value
is
value
first
symbolic
name
range
symbolic
name
preceding
Subsequent
symbolic
names
defined
by
range
will
have
encoding
ues
increasing
Bytes
are
treated
as
unsigned
octets
carry
is
propagated
between
bytes
as
necessary
to
represent
this
causes
null
byte
second
subsequent
bytes
such
declaration
should
not
be
For
line
is
interpreted
expanded
declaration
symbol
above
example
is
invalid
tains
null
byte
second
byte
comment
is
following
declarations
can
follow
character
set
mapping
definitions
Each
consists
keyword
shown
following
starting
column
followed
by
to
be
associated
to
as
defined
WIDTH
A
integer
value
defining
column
width
printable
character
coded
character
set
mapping
Coded
character
set
character
values
are
defined
using
symbolic
character
names
followed
by
column
width
Defining
character
with
more
than
one
WIDTH
produces
undefined
END
WIDTH
keyword
is
used
to
terminate
WIDTH
Specifying
width
character
WIDTH
declaration
produces
undefined
A
integer
value
defining
default
column
width
any
printable
character
not
listed
by
one
WIDTH
If
no
keyword
is
included
default
character
width
is
After
syntax
width
definition
would
WIDTH
END
WIDTH
In
this
numerical
code
point
values
represented
by
symbols
are
assigned
width
code
point
values
to
that
are
also
assigned
width
Using
would
have
required
fewer
alternative
was
shown
to
demonstrate
keyword
could
have
been
added
as
chat
automated
conversational
exchange
tool
chat
script
chat
program
implements
conversational
exchange
between
computer
any
serial
cluding
not
limited
ISDN
remote
peer
establishing
connection
between
Protocol
daemon
remote
pppd
chat
command
supports
following
Read
chat
script
from
chat
This
option
is
mutually
exclusive
with
chat
script
You
must
have
read
access
to
use
Multiple
lines
are
permitted
Use
space
horizontal
tab
characters
to
separate
Set
timeout
expected
string
to
be
If
string
is
not
received
within
time
reply
string
is
not
If
string
can
be
no
alternate
reply
strings
chat
script
A
failed
script
will
cause
chat
program
to
terminate
with
error
Set
file
output
report
If
use
keyword
resulting
strings
are
written
to
this
If
option
is
not
used
use
REPORT
stderr
file
is
used
report
Start
with
echo
option
turned
You
turn
echo
off
specific
points
chat
script
using
ECHO
When
echoing
is
all
output
from
modem
is
echoed
to
Enables
environment
variable
substitution
within
chat
scripts
using
standard
Request
that
chat
script
execute
verbose
chat
program
logs
execution
state
chat
script
as
well
as
all
text
received
from
modem
output
strings
sent
to
default
is
to
log
through
with
facility
logging
method
is
alterable
using
Request
that
chat
script
be
executed
stderr
verbose
chat
program
logs
all
text
received
from
modem
output
strings
sent
to
modem
to
stderr
is
usually
local
console
station
running
chat
pppd
Use
Log
messages
from
error
messages
are
sent
to
Do
not
use
By
error
messages
are
set
to
This
option
prevents
log
messages
from
error
messages
from
being
sent
to
Pass
arbitrary
string
telephone
that
will
be
substituted
stitution
metacharacter
send
number
Pass
second
string
telephone
that
will
be
substituted
tution
metacharacter
send
This
is
useful
when
dialing
ISDN
terminal
adapter
that
requires
two
script
If
script
is
not
specified
file
with
script
is
included
as
parameters
to
chat
chat
script
defines
A
script
consists
one
more
pairs
strings
separated
by
with
optional
string
separated
by
dash
following
ppp
example
indicates
that
chat
program
should
expect
string
If
fails
to
receive
login
prompt
within
time
interval
sends
break
sequence
to
remote
then
expects
string
If
first
is
break
sequence
is
not
Upon
receiving
login
chat
program
sends
string
then
expects
prompt
When
password
prompt
is
sends
password
A
carriage
return
is
normally
sent
following
reply
It
is
not
expected
string
unless
is
specifically
requested
by
using
character
expect
sequence
should
contain
only
what
is
needed
to
identify
received
Because
stored
disk
should
not
contain
variable
Generally
is
not
acceptable
to
look
time
network
fication
other
variable
pieces
data
as
expect
To
correct
characters
that
are
corrupted
during
initial
look
string
rather
than
leading
character
may
be
received
creating
problems
finding
For
this
scripts
look
rather
than
rather
than
An
example
simple
script
ppp
example
can
be
intrepreted
expect
send
expect
send
When
login
to
remote
peer
is
simple
scripts
are
At
should
include
quences
case
original
string
is
not
For
consider
following
ppp
This
script
is
more
effective
than
simple
one
used
string
looks
same
login
one
is
not
single
return
sequence
is
sent
then
script
looks
If
line
noise
obscures
first
login
send
empty
line
to
generate
login
prompt
Comments
can
be
embedded
chat
Comment
lines
are
ignored
by
chat
A
comment
starts
with
hash
character
column
If
character
is
expected
as
first
character
expect
quote
expect
If
want
to
wait
prompt
that
starts
with
write
something
like
Now
wait
prompt
send
logout
string
logout
If
string
to
send
begins
with
sign
remainder
string
is
interpreted
as
name
file
that
contains
If
last
character
data
read
is
is
file
can
be
named
pipe
instead
regular
This
enables
chat
to
communicate
with
another
program
to
prompt
user
receive
password
typed
Many
modems
report
status
call
as
These
status
strings
are
often
If
modem
fails
to
connect
to
can
terminate
Abort
strings
may
be
specified
script
using
ABORT
For
ABORT
BUSY
ABORT
ATZ
OK
CONNECT
This
sequence
expects
nothing
sends
string
expected
response
is
string
When
OK
is
string
dials
expected
string
is
If
CONNECT
is
remainder
script
is
When
modem
finds
busy
sends
string
causing
string
to
match
abort
character
script
fails
found
match
to
abort
If
NO
CARRIER
string
is
aborts
same
sequence
clears
previously
set
ABORT
ABORT
strings
are
kept
array
termined
reclaims
space
cleared
enabling
new
strings
to
use
that
SAY
string
enables
script
to
send
strings
to
user
terminal
via
standard
If
chat
is
being
run
by
pd
pppd
is
running
as
daemon
from
controlling
standard
error
is
normally
redirected
to
SAY
strings
must
be
enclosed
single
double
If
carriage
return
line
feed
are
required
must
explicitly
add
to
SAY
string
can
provide
progress
messages
to
users
even
with
For
add
line
similar
to
following
to
ABORT
BUSY
ECHO
OFF
SAY
TIMEOUT
SAY
up
to
minutes
connection
CONNECT
SAY
now
logging
account
pass
SAY
OK
This
sequence
hides
script
detail
while
presenting
SAY
string
to
In
this
will
Dialing
Waiting
up
to
minutes
now
logging
Logged
OK
REPORT
is
similar
to
ABORT
With
strings
all
characters
to
next
control
character
as
carriage
are
written
to
report
REPORT
strings
can
be
used
to
isolate
transmission
rate
from
CONNECT
string
return
value
to
chat
Analysis
REPORT
string
logic
occurs
conjunction
with
other
string
such
as
looking
expect
possible
to
use
same
string
REPORT
ABORT
probably
not
Report
strings
may
be
specified
script
using
REPORT
For
REPORT
CONNECT
ABORT
BUSY
CONNECT
account
above
sequence
expects
then
sends
string
to
dial
expected
string
is
If
CONNECT
is
remainder
script
is
In
program
writes
string
CONNECT
to
report
file
by
addition
to
any
characters
that
clears
previously
set
REPORT
REPORT
strings
are
kept
array
reclaims
space
cleared
entries
that
new
strings
can
use
that
ECHO
determines
modem
output
is
echoed
to
This
option
may
be
set
with
can
also
be
controlled
by
ECHO
pair
ECHO
ON
enables
ECHO
OFF
disables
With
can
select
which
parts
conversation
should
be
In
following
ABORT
ABORT
ECHO
ON
CONNECT
account
All
output
resulting
from
modem
configuration
dialing
is
not
output
is
echoed
beginning
with
CONNECT
HANGUP
option
determines
modem
hangup
is
considered
as
HANGUP
is
useful
dialing
tems
that
hang
up
call
system
HANGUP
can
be
ON
When
HANGUP
is
set
to
OFF
modem
hangs
up
following
first
stage
logging
to
callback
chat
continues
running
script
waiting
incoming
call
second
stage
login
When
incoming
call
is
use
HANGUP
ON
string
to
reinstall
normal
hang
up
signal
An
example
simple
script
ABORT
CONNECT
HANGUP
OFF
ABORT
TIMEOUT
CONNECT
HANGUP
ON
ABORT
initial
timeout
value
is
Use
parameter
to
change
intial
timeout
To
change
timeout
value
next
expect
following
example
can
be
OK
CONNECT
TIMEOUT
username
TIMEOUT
example
changes
timeout
to
ten
seconds
when
expects
timeout
is
changed
to
five
seconds
when
looks
password
Once
timeout
value
remains
effect
until
is
changed
EOT
special
reply
string
instructs
chat
program
to
send
EOT
character
to
This
is
equivalent
to
using
as
reply
EOT
string
normally
indicates
character
A
return
character
is
not
sent
following
EOT
sequence
can
embedded
into
send
string
using
sequence
BREAK
special
reply
string
sends
break
break
is
special
transmitter
Many
UNIX
tems
handle
break
by
cycling
through
available
bit
sending
break
is
often
needed
when
remote
system
does
not
support
BREAK
is
equivalent
to
using
as
reply
You
embed
break
sequence
into
send
string
using
Expect
reply
strings
can
contain
escape
Reply
strings
accept
all
escape
while
expect
strings
accept
most
A
list
escape
sequences
is
presented
Sequences
that
are
not
accepted
by
pect
strings
are
Expects
sends
null
If
send
null
chat
sends
return
If
expect
null
chat
proceeds
to
reply
string
without
This
sequence
can
be
pair
apostrophes
quote
mark
Represents
backspace
Suppresses
newline
end
reply
This
is
only
method
to
send
string
without
trailing
turn
This
sequence
must
be
end
send
For
sequence
will
simply
send
characters
valid
Delay
one
program
uses
which
delays
to
maximum
one
valid
Insert
valid
Send
newline
linefeed
Send
null
same
sequence
may
be
represented
by
valid
Pause
valid
Suppress
writing
string
to
string
is
written
to
log
valid
Send
expect
carriage
Represents
space
character
Can
be
used
when
is
not
desirable
to
quote
strings
which
contains
sequence
are
Send
expect
tab
Send
phone
number
string
as
specified
with
valid
Send
phone
number
string
as
specified
with
valid
Send
expect
backslash
Collapse
octal
digits
into
single
ASCII
character
send
that
is
not
valid
pect
Substitute
sequence
with
control
character
represented
by
For
character
is
shown
as
characters
are
not
valid
Environment
variables
are
available
within
chat
scripts
option
is
specified
command
metacharacter
introduces
name
environment
variable
to
If
substition
fails
quested
environment
variable
is
not
nothing
is
replaced
chat
program
terminates
with
following
completion
Normal
program
Indicates
that
script
was
executed
without
error
to
normal
One
more
parameters
are
invalid
expect
string
was
too
large
internal
Indicates
that
program
was
not
properly
An
error
occurred
during
execution
This
may
be
due
to
read
write
operation
failing
chat
receiving
signal
such
as
A
timeout
event
occurred
when
there
was
expect
string
without
having
This
indicates
that
may
not
have
programmed
script
correctly
condition
that
unexpected
event
occurred
pected
string
could
not
be
first
string
marked
as
ABORT
condition
second
string
marked
as
ABORT
condition
third
string
marked
as
ABORT
condition
fourth
string
marked
as
ABORT
condition
other
termination
codes
are
also
strings
marked
as
ABORT
To
determine
which
event
terminated
use
termination
It
is
possible
to
decide
string
was
received
from
modem
versus
While
first
event
may
be
second
probably
will
not
succeed
during
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
pppdu
Interface
StabilityEvolving
Additional
information
chat
scripts
are
available
with
UUCP
chat
script
format
was
taken
from
scripts
used
by
uucico
fchdir
change
working
directory
int
char
int
functions
cause
directory
pointed
to
by
path
fildes
to
become
current
working
starting
point
path
searches
path
names
not
beginning
with
path
argument
points
to
path
name
fildes
argument
is
open
file
descriptor
For
directory
to
become
current
process
must
have
execute
access
to
Upon
successful
is
is
current
working
directory
is
errno
is
set
to
indicate
function
will
fail
EACCES
Search
permission
is
denied
any
component
path
EFAULT
path
argument
points
to
illegal
EINTR
A
signal
was
caught
during
execution
EIO
An
error
occurred
while
reading
from
writing
to
file
ELOOP
Too
many
symbolic
links
were
encountered
translating
ENAMETOOLONG
length
path
argument
exceeds
length
path
component
ceeds
while
is
ENOENT
Either
component
path
prefix
directory
named
by
path
does
not
exist
is
null
ENOLINK
path
argument
points
to
remote
machine
link
to
that
machine
is
no
longer
ENOTDIR
A
component
path
name
is
not
function
will
fail
EACCES
Search
permission
is
denied
EBADF
fildes
argument
is
not
open
file
EINTR
A
signal
was
caught
during
execution
EIO
An
error
occurred
while
reading
from
writing
to
file
ENOLINK
fildes
argument
points
to
remote
machine
link
to
that
machine
is
no
longer
ENOTDIR
open
file
descriptor
fildes
does
not
refer
to
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
check
sendmail
can
determine
host
name
script
is
migration
aid
This
script
tries
to
determine
local
qualified
host
name
manner
similar
to
If
is
able
to
determine
FQHN
local
reports
reports
how
to
reconfigure
system
that
FQHN
can
be
properly
Host
name
database
Name
service
switch
configuration
file
Configuration
file
name
server
routines
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wsndmu
Interface
StabilityEvolving
checknr
check
nroff
troff
input
report
possible
errors
checknr
checknr
checks
list
input
files
certain
kinds
errors
involving
mismatched
opening
closing
delimiters
unknown
If
no
files
are
checknr
checks
standard
Delimiters
checked
Font
changes
using
Size
changes
using
Macros
that
come
open
close
macros
which
must
always
come
checknr
knows
about
macro
checknr
is
intended
to
be
used
documents
that
are
prepared
with
checknr
It
expects
certain
document
writing
style
that
each
must
be
terminated
with
each
must
be
terminated
with
While
will
work
to
directly
go
into
next
font
explicitly
specify
original
font
point
many
existing
documents
actually
do
such
practice
will
produce
complaints
from
Since
is
bly
better
to
use
forms
should
think
this
as
contribution
to
document
tion
Ignore
font
Ignore
size
Add
pairs
macros
to
pairs
macros
are
assumed
to
be
those
as
that
should
be
checked
option
must
be
followed
by
groups
six
each
group
defining
pair
six
characters
are
first
macro
another
second
macro
For
to
define
pair
use
Define
commands
which
checknr
would
otherwise
complain
about
as
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wdoc
There
is
no
way
to
define
macro
name
using
check
permissions
mail
rerouting
files
script
is
intended
as
migration
aid
It
checks
file
all
configured
alias
checks
alias
files
It
also
checks
certain
For
each
file
that
verifies
that
none
parent
directories
are
If
any
directories
are
overly
is
Otherwise
reports
that
no
unsafe
directories
were
As
to
which
files
are
depends
arguments
included
command
If
no
argument
is
current
home
directory
is
checked
presence
If
any
arguments
are
are
assumed
to
be
valid
home
directory
each
one
is
If
special
argument
ALL
is
passwd
entry
file
is
all
password
entries
that
can
be
obtained
through
switch
file
are
In
large
this
can
be
following
operands
are
login
Where
login
is
valid
user
checks
home
directory
ALL
Checks
home
directory
all
Defines
environment
sendmail
Ascii
mail
aliases
file
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wsndmu
Interface
StabilityEvolving
wchgat
change
rendition
characters
window
cc
int
short
const
void
int
int
int
short
const
void
int
int
int
int
short
const
void
int
int
short
const
void
These
functions
change
renditions
next
n
characters
current
specified
window
ing
characters
current
specified
n
is
beginning
current
specified
cursor
attributes
colors
are
specified
by
attr
color
as
These
function
update
cursor
nor
perform
A
value
n
that
is
greater
than
remaining
characters
line
is
not
opts
argument
is
reserved
definition
future
application
must
provide
null
pointer
n
Is
number
characters
whose
rendition
is
to
be
attr
Is
set
attributes
to
be
assigned
to
color
Is
new
color
pair
to
be
assigned
to
opts
Is
reserved
future
this
must
be
null
y
Is
y
coordinate
starting
position
x
Is
x
coordinate
starting
position
changed
win
Is
pointer
to
window
which
rendition
characters
is
to
be
Upon
successful
these
functions
returned
return
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
chgrp
change
file
group
ownership
chgrp
group
chgrp
groupsid
chgrp
|
|
group
chgrp
|
|
groupsid
chgrp
utility
will
set
group
ID
file
named
by
each
file
operand
to
group
ID
specified
by
group
For
each
file
will
perform
actions
equivalent
to
called
with
following
file
operand
will
be
used
as
path
user
ID
file
will
be
used
as
owner
specified
group
ID
will
be
used
as
group
Unless
chgrp
is
invoked
by
process
with
appropriate
bits
regular
file
will
be
cleared
upon
successful
bits
other
file
types
may
be
operating
system
has
configuration
option
to
restrict
ownership
When
this
option
is
owner
file
may
change
group
file
only
to
group
to
which
owner
Only
can
arbitrarily
change
owner
whether
not
this
option
is
To
set
this
configuration
include
following
line
set
rstchown
To
disable
this
include
following
line
set
rstchown
is
enabled
by
See
following
options
are
Does
not
report
If
file
is
symbolic
this
option
changes
group
symbolic
Without
this
group
file
referenced
by
symbolic
link
is
If
file
specified
command
line
is
symbolic
link
referencing
file
type
this
option
changes
group
directory
referenced
by
symbolic
link
all
files
file
hierarchy
below
If
symbolic
link
is
encountered
when
traversing
file
group
target
file
is
no
recursion
takes
If
file
is
symbolic
this
option
changes
group
file
referenced
by
symbolic
If
file
specified
command
encountered
during
traversal
file
is
symbolic
link
ing
file
type
then
this
option
changes
group
directory
referenced
by
symbolic
link
all
files
file
hierarchy
below
If
file
specified
command
line
encountered
during
traversal
file
hierarchy
is
symbolic
this
option
changes
group
symbolic
This
option
does
not
follow
symbolic
link
to
any
other
part
file
specified
group
is
Windows
This
option
requires
file
system
that
supports
storing
such
as
Specifying
more
than
one
options
is
not
considered
last
option
specified
determines
behavior
chgrp
descends
through
any
setting
specified
group
ID
as
When
symbolic
link
is
group
target
file
is
unless
option
is
no
recursion
takes
unless
option
is
chgrp
descends
through
any
setting
specified
group
ID
as
When
symbolic
link
is
group
target
file
is
unless
option
is
Unless
option
is
option
is
used
as
default
following
operands
are
group
A
group
name
from
group
database
numeric
group
Either
specifies
group
ID
to
be
given
to
each
file
named
by
one
file
If
numeric
group
operand
exists
group
database
as
group
group
ID
number
associated
with
that
group
name
is
used
as
group
file
A
path
name
file
whose
group
ID
is
to
be
See
description
behavior
chgrp
when
encountering
files
greater
than
equal
to
Gbyte
See
descriptions
following
environment
variables
that
affect
execution
following
exit
values
are
utility
executed
successfully
all
requested
changes
were
An
error
group
file
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
See
Interface
StabilityCommitted
StandardSee
ATTRIBUTE
TYPEATTRIBUTE
VALUE
See
Interface
StabilityCommitted
StandardSee
chgrp
is
except
group
chkey
change
secure
RPC
key
pair
chkey
nisplus
|
nis
|
files
|
chkey
is
used
to
change
secure
RPC
public
key
secret
key
chkey
prompts
old
password
verifies
that
is
correct
by
decrypting
secret
If
user
has
not
already
used
to
decrypt
store
secret
key
with
chkey
registers
secret
key
with
local
If
password
does
not
match
login
chkey
prompts
login
chkey
uses
login
password
to
encrypt
secret
cryptographic
chkey
can
also
crypt
other
keys
authentication
mechanisms
configured
using
chkey
ensures
that
login
password
are
kept
thus
enabling
password
See
key
pair
can
be
stored
file
NIS
publickey
If
new
secret
key
is
will
be
registered
with
local
only
can
store
keys
other
than
Keys
specific
mechanisms
can
be
changed
reencrypted
using
option
followed
by
authentication
mechanism
Multiple
options
can
be
used
to
change
one
more
only
mechanisms
ured
using
can
be
changed
with
If
source
publickey
is
not
specified
with
chkey
consults
publickey
entry
name
service
switch
configuration
See
If
publickey
entry
specifies
one
only
one
then
chkey
will
change
key
specified
name
multiple
name
services
are
chkey
can
not
decide
which
source
to
update
will
display
error
user
should
specify
source
itly
with
Non
root
users
are
not
allowed
to
change
key
pair
files
following
options
are
existing
secret
key
with
login
nisplus
Update
nis
Update
NIS
files
Update
files
ldap
Update
LDAP
Changes
secret
key
specified
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
might
not
be
supported
future
releases
Solaris
operating
Tools
to
aid
migration
from
to
LDAP
are
available
current
Solaris
For
more
visit
chmod
change
permissions
mode
file
chmod
chmod
chmod
chmod
chmod
utility
changes
assigns
mode
chmod
can
also
be
used
to
modify
Access
Control
Lists
files
to
modify
boolean
system
attributes
regular
opaque
extended
attribute
An
absolute
mode
command
line
has
following
chmod
file
where
is
specified
using
octal
numbers
nnnn
defined
as
n
number
from
to
An
absolute
mode
is
constructed
from
OR
any
following
Set
user
ID
Set
group
ID
execution
is
Enable
mandatory
locking
is
For
files
are
created
with
BSD
semantics
propagation
group
With
this
files
directories
created
directory
inherit
group
ID
rather
than
current
For
bit
can
only
be
set
cleared
by
using
symbolic
Turn
sticky
See
Allow
read
by
Allow
write
by
Allow
execute
by
Allow
execute
by
Allow
read
by
Allow
write
by
Allow
execute
by
Allow
execute
by
Allow
read
by
Allow
write
by
Allow
execute
by
Allow
execute
by
For
setgid
bit
cannot
be
set
absolute
must
be
set
symbolic
mode
using
A
symbolic
mode
command
line
has
following
chmod
file
where
is
list
no
intervening
white
symbolic
mode
expressions
operator
Operations
are
performed
order
Multiple
permissions
letters
following
single
operator
cause
responding
operations
to
be
performed
who
zero
more
characters
specifying
whose
permissions
are
to
be
changed
u
permissions
g
permissions
o
permissions
all
permissions
If
who
is
defaults
to
setting
file
mode
creation
mask
umask
more
is
taken
into
When
who
is
chmod
does
not
override
restrictions
user
operator
signifying
how
permissions
are
to
be
Add
If
permissions
are
nothing
is
If
who
is
add
file
mode
bits
represented
by
except
those
with
corresponding
bits
file
mode
creation
If
who
is
add
file
mode
bits
represented
by
Take
away
If
permissions
are
do
If
who
is
clear
file
mode
bits
represented
by
except
those
with
corresponding
bits
file
mode
creation
If
who
is
clear
file
mode
bits
represented
by
Assign
permissions
If
who
is
clear
all
file
mode
who
is
clear
file
mode
bits
represented
by
If
permissions
are
do
nothing
If
who
is
add
file
mode
bits
represented
by
except
those
with
corresponding
bits
file
mode
creation
If
who
is
add
file
mode
bits
represented
by
Unlike
other
symbolic
has
absolute
effect
that
resets
all
other
bits
represented
by
ting
permissions
is
useful
only
with
to
take
away
all
permission
any
compatible
combination
following
l
mandatory
locking
r
read
permission
s
user
group
t
sticky
bit
w
write
permission
x
execute
permission
X
execute
permission
file
is
directory
there
is
execute
permission
one
other
user
classes
indicate
that
permission
is
to
be
taken
from
current
group
other
mode
Permissions
to
file
can
vary
depending
user
identification
number
group
identification
number
Permissions
are
described
three
sequences
each
having
three
UserGroupOther
rwxrwxrwx
This
example
others
all
have
permission
to
execute
given
demonstrates
two
categories
granting
access
class
permissions
letter
s
is
only
meaningful
with
u
t
only
works
with
Mandatory
file
record
locking
refers
to
ability
to
have
reading
writing
permissions
locked
while
program
is
accessing
that
In
directory
which
has
bit
set
as
output
files
subdirectories
are
created
with
parent
that
current
It
is
not
possible
to
permit
group
execution
enable
file
to
be
locked
execution
same
In
is
not
possible
to
turn
bit
enable
file
to
be
locked
execution
same
lowing
are
invalid
elicit
error
chmod
file
chmod
file
Only
owner
file
directory
can
change
that
Only
er
can
set
sticky
bit
If
are
not
chmod
masks
does
not
turn
In
order
to
turn
own
group
ID
must
correspond
to
group
execution
must
be
An
ACL
Operation
command
line
has
following
chmod
file
chmod
file
chmod
file
Where
is
list
no
intervening
white
ACL
specification
Prepends
access
control
entries
specified
to
beginning
Depending
file
ACL
can
be
reordered
when
applied
to
If
number
is
specified
then
new
ACEs
are
inserted
before
specified
Removes
all
ACEs
current
ACL
file
replaces
current
ACL
with
new
ACL
that
represents
only
rent
mode
Removes
ACE
specified
by
index
Removes
ACEs
specified
by
exist
current
Replaces
files
entire
ACL
with
Replaces
ACEs
starting
specific
index
number
current
ACL
If
tiple
ACEs
are
then
each
subsequent
ACE
replaces
corresponding
ACE
rent
ACL
Specification
supported
by
ACLs
supported
by
are
specified
as
colon
separated
fields
File
owner
Permissions
specific
File
group
owner
Permissions
specific
Permissions
user
other
than
file
owner
members
file
group
ACL
mask
entry
specifies
maximum
permissions
allowed
user
than
that
Default
file
owner
Default
permissions
specific
Default
file
group
owner
Default
permissions
specific
Default
permissions
user
other
than
file
owner
members
file
group
Default
ACL
above
specification
allows
ACLs
to
be
specified
such
ACL
Specification
supported
by
ACLs
provide
richer
ACL
They
provide
both
allow
deny
finer
grained
enhanced
inheritance
ACLs
are
specified
as
colon
separated
fields
Permissions
file
Permissions
file
group
Permissions
including
file
owner
group
Permissions
specific
Permissions
specific
user
is
specified
by
Permissions
specific
Permissions
specific
group
is
specified
by
Permissions
specific
matter
is
user
Permissions
can
be
specified
three
different
chmod
ACL
verbose
format
uses
words
to
indicate
that
permissions
are
separated
with
forward
slash
Compact
format
uses
permission
letters
positional
format
uses
permission
letters
hyphen
to
identify
no
permissions
verbose
mode
abbreviated
form
parentheses
compact
positional
mode
are
described
as
Permission
to
read
data
Permission
to
list
contents
Permission
to
modify
anywhere
offset
Permission
to
add
new
file
to
ability
to
modify
only
starting
this
permission
is
not
Permission
to
create
subdirectory
to
Ability
to
read
extended
attributes
Ability
to
create
extended
attributes
write
to
extended
attribute
execute
Permission
to
execute
ability
to
read
basic
attributes
Permission
to
change
times
associated
with
file
directory
to
arbitrary
delete
Permission
to
delete
Permission
to
delete
file
within
Permission
to
read
ACL
Permission
to
write
ACL
Permission
to
change
owner
synchronize
Permission
to
access
file
locally
server
with
synchronize
reads
this
permission
is
not
Using
compact
ACL
permissions
are
specified
by
using
unique
letters
to
indicate
Using
positional
ACL
permissions
are
specified
as
positional
arguments
similar
to
ls
hyphen
which
indicates
that
no
permission
is
granted
that
can
be
omitted
only
required
letters
have
to
be
letters
above
are
listed
order
would
be
specified
positional
Permissions
can
be
specified
with
these
letters
following
hyphens
can
be
removed
to
compact
string
as
rwxD
Several
special
permission
sets
aliases
are
also
following
permission
sets
are
used
same
way
that
verbose
permissions
are
All
All
permissions
except
optional
inheritance
flags
can
be
specified
three
first
format
uses
words
to
indicate
ous
inheritance
flags
separated
with
forward
slash
Inherit
to
all
newly
created
Inherit
to
all
newly
created
When
placed
do
not
apply
to
only
to
newly
created
files
This
flag
requires
that
is
also
Indicates
that
ACL
entries
should
be
inherited
to
objects
inheritance
should
stop
after
descending
one
This
flag
is
dependent
upon
also
being
inheritance
flags
listed
can
also
be
specified
compact
format
as
positional
arguments
similar
to
ls
A
hyphen
character
indicates
that
inheritance
flag
that
position
is
not
specified
positional
ACL
inheritance
flags
can
be
specified
with
these
letters
any
following
equivalent
fdn
With
this
inheritance
ACL
entry
can
be
specified
such
An
attribute
operation
command
line
has
following
chmod
file
where
is
character
S
followed
by
list
one
more
Each
is
An
operator
is
one
Each
attribute
specified
by
associated
is
adjusted
to
match
value
specified
by
Each
attribute
specified
by
associated
is
adjusted
to
match
inverse
value
specified
by
Each
attribute
specified
by
associated
is
adjusted
to
match
value
specified
by
Any
boolean
extended
system
attributes
associated
with
current
file
that
are
not
specified
by
is
If
operator
is
not
specified
chmod
behaves
as
had
been
An
takes
one
following
Set
all
boolean
extended
system
attributes
associated
with
current
Set
each
boolean
extended
system
attribute
identified
by
Set
each
boolean
extended
system
attribute
identified
by
A
is
list
zero
more
adjacent
attribute
abbreviation
characters
from
list
Attribute
Names
Abbreviation
Characters
later
this
An
arbitrary
number
hyphen
characters
can
be
cluded
These
are
A
is
attribute
name
from
list
Attribute
Names
Abbreviation
Characters
later
this
immediately
preceded
by
If
attribute
name
is
used
without
attribute
is
otherwise
attribute
is
A
is
zero
more
Multiple
operations
specified
file
are
accumulated
are
all
set
file
operand
as
single
attribute
setting
If
attribute
is
specified
more
than
once
last
specified
operation
is
following
is
list
Attribute
Names
Abbreviation
Attribute
Name
Abbreviation
Character
hidden
H
system
S
readonly
R
archive
A
nounlink
u
immutable
i
appendonly
nodump
d
q
m
following
options
are
chmod
does
not
complain
fails
to
change
mode
Recursively
descend
through
directory
setting
mode
each
When
symbolic
links
are
mode
target
file
is
no
recursion
takes
Perform
attribute
operation
named
extended
attribute
file
each
file
operand
instead
file
operand
If
multiple
operations
are
attribute
specification
mode
is
applied
to
each
named
attribute
A
named
attribute
carries
meaning
to
is
considered
to
mean
all
extended
attribute
files
associated
with
file
This
does
not
refer
to
special
files
A
named
attribute
carries
special
meaning
to
is
considered
to
mean
file
operand
This
lows
single
to
apply
attribute
specification
mode
to
specified
named
attribute
file
file
operand
file
operand
following
operands
are
Represents
change
to
be
made
to
file
mode
bits
each
file
named
by
one
file
See
Absolute
Mode
Symbolic
Mode
DESCRIPTION
section
this
manual
page
more
Represents
modification
to
be
performed
See
ACL
Operation
DESCRIPTION
section
more
is
one
Represents
modification
to
performed
See
Attribute
Operation
DESCRIPTION
section
this
manual
page
more
file
A
path
name
file
whose
file
mode
bits
are
to
be
See
description
behavior
chmod
when
encountering
files
greater
than
equal
to
Gbyte
Example
Denying
execute
Permission
following
example
denies
execute
permission
to
chmod
file
Example
Allowing
Permission
following
example
allows
only
read
permission
to
chmod
file
Example
Making
File
readable
writable
following
example
makes
file
readable
writable
by
group
chmod
file
chmod
file
Example
Locking
File
From
Access
following
example
locks
file
from
chmod
file
Example
Granting
set
Permission
File
following
example
grants
everyone
execute
permissions
turns
set
chmod
file
chmod
file
Example
Prepending
New
ACL
Entry
ZFS
File
following
example
prepends
new
ACL
entry
ZFS
display
current
ls
marks
staff
Oct
Issue
following
chmod
Display
new
ls
marks
staff
Oct
Example
Prepending
New
ACL
Entry
UFS
File
following
example
prepends
new
ACL
entry
UFS
display
current
ls
marks
staff
Oct
Issue
following
chmod
Display
new
ls
marks
staff
Oct
Example
Inserting
ACL
Entry
Specific
Position
ZFS
file
following
example
inserts
ACL
entry
specific
position
ZFS
file
It
also
illustrates
pact
ACL
display
ACL
to
pick
location
to
insert
new
ls
root
root
Oct
insert
new
entry
location
This
causes
entries
that
are
currently
position
to
be
pushed
Issue
following
chmod
Display
new
ls
root
staff
Feb
Example
Inserting
ACL
Specific
Position
UFS
File
file
system
reorders
ACLs
when
are
stored
file
following
example
illustrates
this
ls
root
root
Sep
insert
entry
index
position
command
file
system
reorders
chmod
ls
root
root
Sep
Rather
than
inserting
ACL
entry
position
as
actually
ends
up
position
Example
Removing
ACL
Entry
ZFS
File
following
example
removes
lp
entry
from
ls
marks
staff
Oct
chmod
ls
marks
staff
Oct
Example
Removing
ACL
UFS
File
following
example
removes
lp
entry
from
ls
marks
staff
Oct
chmod
ls
marks
staff
Oct
Example
Removing
Specific
ACL
Entry
by
Index
Number
ZFS
File
Consider
following
ls
file
Remove
second
user
entry
chmod
file
ls
file
Example
Removing
Specific
ACL
Entry
UFS
File
following
example
removes
lp
entry
by
index
number
from
following
ls
root
root
Sep
chmod
ls
root
root
Sep
Example
Removing
All
ACLs
From
File
following
command
works
with
Consider
following
ls
marks
staff
Oct
existing
ACL
is
effectively
removed
is
replaced
with
ACL
that
represents
permission
bits
chmod
ls
marks
staff
Oct
Example
Replacing
Entire
ACL
Entry
ZFS
File
Use
following
chmod
syntax
want
to
replace
ACL
chmod
ls
marks
staff
Oct
Example
Replacing
Entire
ACL
UFS
File
This
operation
is
little
more
replacement
ACL
needs
necessary
entries
to
represent
file
file
group
mask
any
additional
entries
wish
to
chmod
ls
root
root
Oct
Example
Replacing
Specific
Entry
ZFS
File
Consider
following
ls
marks
staff
Oct
change
allow
access
to
deny
user
chmod
ls
marks
staff
Aug
Example
Replacing
Specific
ACL
UFS
File
Consider
following
ls
marks
staff
Oct
change
permission
lp
from
rwx
to
chmod
ls
file
marks
staff
Oct
Example
Setting
ACL
Inheritance
Flags
ZFS
File
You
can
only
set
inheritance
flags
ZFS
When
setting
ACLs
several
inheritance
flags
can
be
optionally
Suppose
have
ACL
entry
user
lp
that
want
to
be
inherited
to
newly
created
files
need
to
create
inheritable
ACL
entry
chmod
ls
marks
staff
Aug
lp
entry
is
inherited
to
newly
created
files
directory
touch
ls
marks
staff
Oct
user
lp
entry
is
inherited
to
newly
created
Multiple
combinations
inheritance
flags
can
be
For
wanted
lp
entry
to
also
be
inherited
to
then
following
command
can
be
chmod
Example
Replacing
System
Attributes
ZFS
File
following
examples
replace
system
attributes
ZFS
chmod
nounlink}
chmod
chmod
chmod
chmod
Assuming
appropriate
this
results
following
system
attributes
being
Assuming
appropriate
following
system
attributes
are
Example
Clearing
All
System
Attributes
ZFS
File
following
examples
clears
all
system
attributes
ZFS
chmod
chmod
Assuming
appropriate
all
boolean
system
attributes
are
cleared
Example
Setting
System
Attribute
Named
Attribute
File
ZFS
File
following
example
sets
system
attribute
named
attribute
file
ZFS
not
file
chmod
myattr
This
results
hidden
system
attribute
being
set
named
attribute
file
myattr
not
file
Example
Setting
System
Attribute
All
Named
Attribute
File
ZFS
File
following
example
sets
system
attribute
all
named
attribute
files
ZFS
not
file
chmod
Example
Setting
System
Attribute
All
Named
Attribute
Files
ZFS
File
following
example
sets
system
attribute
all
named
attribute
files
ZFS
as
well
as
file
chmod
This
results
hidden
system
attribute
being
set
all
named
attribute
files
as
well
as
file
Example
Recursively
Descending
Through
Directory
Hierarchy
following
example
recursively
descends
through
directory
sets
all
system
attributes
all
named
attribute
ZFS
file
as
well
as
directory
chmod
This
results
hidden
system
attribute
being
set
all
named
attribute
files
all
regular
files
directories
within
directory
hierarchy
as
well
as
Example
Setting
hidden
system
System
Attributes
ZFS
File
following
examples
set
hidden
system
system
attributes
ZFS
chmod
chmod
chmod
chmod
chmod
chmod
Example
Clearing
All
System
Attributes
ZFS
File
following
example
clears
all
system
attributes
ZFS
chmod
chmod
In
following
two
last
attribute
operation
specified
takes
In
this
replacement
attribute
name
list
clears
all
system
attributes
chmod
In
this
clear
attributes
operation
clears
all
system
attributes
chmod
Example
Setting
Values
All
Boolean
System
Attributes
File
following
example
sets
values
all
boolean
system
attributes
file
to
same
as
boolean
system
attributes
another
chmod
Assuming
appropriate
privileges
that
have
same
supported
system
all
system
tributes
that
are
set
are
also
set
All
system
attributes
that
are
cleared
are
also
cleared
See
descriptions
following
environment
variables
that
affect
execution
following
exit
values
are
Successful
An
error
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
CSIEnabled
Interface
StabilityCommitted
Absolute
changes
do
not
work
bit
You
must
use
chmod
permits
to
produce
useless
modes
long
as
are
not
illegal
making
text
file
chmod
does
not
check
file
type
to
see
mandatory
locking
is
If
filesystem
is
mounted
with
nosuid
setuid
execution
is
not
If
use
chmod
to
change
file
group
owner
permissions
file
with
ACL
both
file
group
owner
permissions
ACL
mask
are
changed
to
new
Be
aware
that
new
ACL
mask
permissions
can
change
effective
permissions
additional
users
groups
who
have
ACL
entries
Use
to
make
sure
appropriate
permissions
are
set
all
ACL
fchmod
change
access
permission
mode
file
int
char
int
functions
set
access
permission
portion
mode
file
whose
name
is
given
by
path
referenced
by
open
file
descriptor
fildes
to
bit
pattern
contained
Access
permission
bits
are
interpreted
as
user
ID
Set
group
ID
execution
is
Enable
mandatory
locking
is
T}
execute
by
by
by
Execute
by
T}
execute
by
by
by
by
execute
by
by
by
by
Modes
are
constructed
by
bitwise
OR
operation
access
permission
effective
user
ID
process
must
match
owner
file
process
must
have
appropriate
lege
to
change
mode
If
process
is
not
privileged
process
file
is
not
mode
bit
text
image
is
If
process
is
privileged
nor
group
is
member
supplementary
group
effective
group
ID
process
does
not
match
group
ID
mode
bit
group
ID
is
If
directory
is
writable
has
sticky
files
within
that
directory
can
be
removed
renamed
only
one
more
following
is
true
user
owns
file
user
owns
directory
file
is
writable
by
user
user
is
privileged
user
If
regular
file
is
not
executable
has
file
is
assumed
to
be
swap
In
this
page
cache
will
not
be
used
to
hold
If
bit
is
set
any
other
results
are
If
directory
has
set
group
ID
bit
given
file
created
within
that
directory
will
have
same
group
ID
as
newly
created
group
ID
will
be
set
to
effective
group
ID
creating
If
mode
bit
group
ID
is
set
mode
bit
search
by
is
not
mandatory
locking
will
exist
regular
possibly
affecting
future
calls
to
this
If
fildes
references
shared
memory
need
only
affect
file
permission
If
fildes
refers
to
does
not
fail
no
action
is
If
fildes
refers
to
stream
that
is
attached
to
object
file
system
name
space
with
call
performs
no
action
returns
Upon
successful
mark
update
field
Upon
successful
is
is
file
mode
is
errno
is
set
to
indicate
functions
will
fail
EIO
An
error
occurred
while
reading
from
writing
to
file
EPERM
effective
user
ID
does
not
match
owner
file
process
does
not
have
appropriate
privilege
overrides
constraints
ownership
when
changing
permissions
privilege
overrides
constraints
ownership
when
adding
setuid
setgid
bits
to
executable
file
When
adding
setuid
bit
to
root
owned
additional
restrictions
See
function
will
fail
EACCES
Search
permission
is
denied
component
path
prefix
privilege
overrides
file
permissions
restrictions
that
EFAULT
path
argument
points
to
illegal
ELOOP
A
loop
exists
symbolic
links
encountered
during
resolution
path
ENAMETOOLONG
length
path
argument
exceeds
length
path
component
ceeds
while
is
ENOENT
Either
component
path
prefix
file
referred
to
by
path
does
not
exist
is
null
ENOLINK
fildes
argument
points
to
remote
machine
link
to
that
machine
is
no
longer
ENOTDIR
A
component
prefix
path
is
not
EROFS
file
referred
to
by
path
resides
file
function
will
fail
EBADF
fildes
argument
is
not
open
file
descriptor
ENOLINK
path
argument
points
to
remote
machine
link
to
that
machine
is
no
longer
EROFS
file
referred
to
by
fildes
resides
file
functions
may
fail
EINTR
A
signal
was
caught
during
execution
EINVAL
value
mode
argument
is
function
may
fail
ELOOP
More
than
symbolic
links
were
encountered
during
resolution
path
ENAMETOOLONG
As
result
encountering
symbolic
link
resolution
thepath
length
substituted
pathname
strings
exceeds
function
may
fail
EINVAL
fildes
argument
refers
to
pipe
system
disallows
execution
this
function
Example
Set
Read
Permissions
Others
following
example
sets
read
permissions
const
char
Example
Set
Execute
Permissions
Owner
Only
following
example
sets
execute
permissions
no
permissions
group
const
char
Example
Set
Different
Permissions
Other
following
example
sets
owner
permissions
CHANGEFILE
to
group
permissions
to
read
other
permissions
to
CHANGEFILE
Example
Set
Checking
File
Permissions
following
example
sets
file
permission
bits
file
named
then
calls
function
to
verify
int
struct
stat
buffer
status
If
is
used
to
change
file
group
owner
permissions
file
with
ACL
only
ACL
mask
is
set
to
new
permissions
group
owner
permission
bits
mode
field
fined
are
A
ACL
entry
is
one
whose
meaning
cannot
be
represented
mode
field
new
ACL
mask
permissions
might
change
effective
permissions
additional
users
groups
that
have
ACL
entries
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
Programming
Interfaces
Guide
Guide
chown
change
owner
chown
changes
owner
filenames
to
owner
can
be
decimal
user
ID
login
name
found
password
An
optional
group
can
also
be
group
can
be
decimal
group
ID
group
name
found
GID
In
default
only
machine
where
file
is
physically
located
can
change
system
configuration
option
privileges
also
affect
who
can
change
ownership
See
following
options
are
Do
not
report
Recursively
descend
into
directories
setting
ownership
all
files
each
directory
When
bolic
links
are
ownership
is
are
not
See
description
behavior
chown
when
encountering
files
greater
than
equal
to
Gbyte
Password
file
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wscpu
chown
change
file
ownership
|
|
|
|
|
|
|
|
chown
chown
utility
sets
user
ID
file
named
by
each
file
to
user
ID
specified
by
sets
group
ID
to
that
specified
by
If
chown
is
invoked
by
other
than
bit
is
Only
owner
file
can
change
owner
that
operating
system
has
configuration
option
to
restrict
ownership
When
this
option
is
effect
owner
file
is
prevented
from
changing
owner
ID
Only
can
arbitrarily
change
owner
IDs
whether
not
this
option
is
To
set
this
configuration
include
following
line
set
rstchown
To
disable
this
include
following
line
set
rstchown
is
enabled
by
See
chown
is
associated
with
It
is
invoked
when
chown
is
executed
without
pathname
prefix
pathname
search
finds
chown
changes
ownership
each
file
to
owner
can
be
specified
as
user
name
numeric
user
group
ownership
each
file
can
also
be
changed
to
group
by
appending
to
user
following
options
are
Does
not
report
If
file
is
symbolic
this
option
changes
owner
symbolic
Without
this
owner
file
referenced
by
symbolic
link
is
If
file
specified
command
line
is
symbolic
link
referencing
file
type
this
option
changes
owner
directory
referenced
by
symbolic
link
all
files
file
hierarchy
below
If
symbolic
link
is
encountered
when
traversing
file
owner
target
file
is
no
sion
takes
If
file
is
symbolic
this
option
changes
owner
file
referenced
by
symbolic
If
file
specified
command
encountered
during
traversal
file
is
symbolic
link
ing
file
type
then
this
option
changes
owner
directory
referenced
by
symbolic
link
all
files
file
hierarchy
below
If
file
specified
command
line
encountered
during
traversal
file
hierarchy
is
symbolic
this
option
changes
owner
symbolic
This
option
does
not
follow
symbolic
link
to
any
other
part
file
owner
group
arguments
are
Windows
SID
This
option
requires
file
system
that
supports
ing
such
as
Specifying
more
than
one
options
is
not
considered
last
option
specified
determines
behavior
following
options
are
chown
descends
through
any
setting
specified
ownership
ID
as
When
symbolic
link
is
owner
target
file
is
unless
option
is
no
recursion
takes
unless
option
is
following
options
are
chown
descends
through
any
setting
specified
ownership
ID
as
When
symbolic
link
is
owner
target
file
is
unless
option
is
Unless
option
is
option
is
used
as
default
following
options
are
supported
by
chown
Describe
only
files
whose
ownership
actually
|
silent
Do
not
report
files
whose
ownership
fails
to
|
h
Change
ownership
symbolic
links
systems
that
support
this
Interpret
first
operand
as
file
that
contains
map
Ownership
files
matching
from
part
any
pair
is
changed
to
corresponding
to
part
process
stops
first
match
each
Unmatched
files
are
silently
Show
actions
do
not
Omit
explicit
ownership
operand
use
ownership
file
Describe
changed
permissions
all
Follow
symbolic
links
command
Otherwise
do
not
follow
symbolic
links
when
traversing
|
follow
Follow
symbolic
links
when
traversing
|
nofollow
Do
not
follow
symbolic
links
when
traversing
Recursively
change
ownership
directories
Canonicalize
output
following
operands
are
A
user
ID
optional
group
ID
to
be
assigned
to
owner
portion
this
operand
must
be
user
name
from
user
database
numeric
user
Either
specifies
user
ID
to
be
given
to
each
file
named
by
If
numeric
owner
exists
user
database
as
user
user
ID
number
associated
with
that
user
name
is
used
as
user
group
portion
this
operand
is
must
be
group
name
from
group
database
numeric
group
Either
specifies
group
ID
to
be
given
to
each
If
numeric
group
operand
exists
group
database
as
group
group
ID
number
associated
with
that
group
name
is
used
as
group
file
A
path
name
file
whose
user
ID
is
to
be
See
description
behavior
chown
when
encountering
files
greater
than
equal
to
Gbyte
Example
Changing
Ownership
All
Files
Hierarchy
following
command
changes
ownership
all
files
including
symbolic
not
targets
chown
See
descriptions
following
environment
variables
that
affect
execution
following
exit
values
are
utility
executed
successfully
all
requested
changes
were
An
error
System
password
file
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
See
Interface
StabilityCommitted
StandardSee
ATTRIBUTE
TYPEATTRIBUTE
VALUE
See
Interface
StabilityCommitted
StandardSee
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Interface
StabilitySee
binding
to
is
interfaces
are
chown
is
except
owner
group
fchownat
change
owner
group
file
int
char
int
char
int
int
const
char
int
function
sets
owner
ID
group
ID
file
specified
by
path
referenced
by
open
file
scriptor
fildes
to
owner
group
If
owner
group
is
specified
as
does
not
change
corresponding
ID
function
sets
owner
ID
group
ID
named
file
same
manner
as
unless
named
file
is
symbolic
In
this
changes
ownership
symbolic
link
file
while
changes
ownership
file
directory
to
which
symbolic
link
function
sets
owner
ID
group
ID
named
file
same
manner
as
path
argument
is
path
is
resolved
relative
to
fildes
argument
rather
than
current
working
If
fildes
argument
has
special
value
path
resolution
reverts
back
to
rent
working
directory
If
flag
argument
is
set
to
function
behaves
like
with
spect
to
symbolic
If
path
argument
is
fildes
argument
is
If
path
argument
is
null
function
behaves
like
If
is
invoked
by
process
that
does
not
have
asserted
effective
bits
file
are
cleared
Additional
restrictions
apply
when
changing
ownership
to
uid
operating
system
defines
several
privileges
to
override
restrictions
family
When
privilege
is
asserted
effective
set
current
there
are
no
restrictions
except
special
circumstances
changing
ownership
to
from
uid
When
privilege
is
ownership
changes
are
restricted
to
files
which
ownership
matches
effective
user
ID
current
If
privilege
is
asserted
effective
set
calling
ownership
changes
are
limited
to
changes
group
file
to
list
supplementary
group
IDs
effective
group
operating
system
provides
configuration
to
control
default
behavior
processes
behavior
NFS
If
is
not
privilege
is
asserted
inheritable
set
all
processes
unless
overridden
by
To
set
this
configuration
include
following
line
set
rstchown
To
disable
this
include
following
line
set
rstchown
See
Upon
successful
mark
update
field
Upon
successful
is
is
owner
group
named
file
remain
errno
is
set
to
indicate
All
these
functions
will
fail
EPERM
effective
user
ID
does
not
match
owner
file
privilege
is
not
asserted
effective
set
calling
privilege
is
not
serted
effective
set
calling
functions
will
fail
EACCES
Search
permission
is
denied
component
path
prefix
EFAULT
path
argument
points
to
illegal
address
file
descriptor
has
value
EINTR
A
signal
was
caught
during
execution
EINVAL
group
owner
argument
is
out
EIO
An
error
occurred
while
reading
from
writing
to
file
ELOOP
Too
many
symbolic
links
were
encountered
translating
ENAMETOOLONG
length
path
argument
exceeds
length
path
component
exceeds
while
is
ENOLINK
path
argument
points
to
remote
machine
link
to
that
machine
is
no
longer
ENOENT
Either
component
path
prefix
file
referred
to
by
path
does
not
exist
is
null
ENOTDIR
A
component
path
prefix
path
is
not
path
supplied
to
is
relative
file
descriptor
provided
does
not
refer
to
valid
EROFS
named
file
resides
file
functions
will
fail
EBADF
For
fildes
argument
is
not
open
file
descriptor
For
path
argument
is
not
absolute
fildes
argument
is
not
open
file
EIO
An
error
occurred
while
reading
from
writing
to
file
EINTR
A
signal
was
caught
during
execution
ENOLINK
fildes
argument
points
to
remote
machine
link
to
that
machine
is
no
longer
EINVAL
group
owner
argument
is
out
EROFS
named
file
referred
to
by
fildes
resides
file
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
See
functions
are
function
is
functions
are
chpoll
poll
entry
point
character
driver
int
short
int
short
struct
pollhead
This
entry
point
is
Architecture
independent
level
dev
device
number
device
to
be
events
events
that
may
Valid
events
POLLIN
Data
other
than
high
priority
data
may
be
read
without
POLLOUT
Normal
data
may
be
written
without
POLLPRI
High
priority
data
may
be
received
without
POLLHUP
A
device
hangup
has
POLLERR
An
error
has
occurred
POLLRDNORM
Normal
data
band
may
be
read
without
POLLRDBAND
Data
from
priority
band
may
be
read
without
blocking
POLLWRNORM
same
as
POLLWRBAND
Priority
data
band
may
be
anyyet
A
flag
that
is
any
other
file
descriptors
pollfd
array
have
events
tem
call
takes
pointer
to
array
pollfd
structures
as
one
See
reference
page
more
reventsp
A
pointer
to
bitmask
returned
events
phpp
A
pointer
to
pointer
to
pollhead
entry
point
routine
is
used
by
character
device
drivers
that
wish
to
support
driver
must
implement
polling
discipline
following
rules
must
be
followed
when
implementing
polling
Implement
following
algorithm
when
entry
point
is
{
}
else
{
}
return
Allocate
instance
pollhead
This
instance
may
be
tied
to
data
structure
defined
by
pollhead
structure
should
be
treated
as
by
Initialize
pollhead
ture
by
filling
with
size
this
structure
is
guaranteed
to
remain
same
across
Call
function
with
events
listed
above
whenever
pollable
events
which
driver
should
monitor
This
function
can
be
called
with
multiple
events
one
can
be
called
regardless
whether
not
entry
is
should
be
called
every
time
driver
detects
pollable
driver
must
not
hold
any
mutex
across
call
to
that
is
acquired
entry
deadlock
may
should
return
appropriate
error
Writing
Device
Drivers
Drivers
chroot
change
root
directory
command
newroot
command
chroot
utility
causes
command
to
be
executed
relative
to
meaning
any
initial
slashes
path
names
is
changed
to
newroot
command
any
child
Upon
initial
working
directory
is
Notice
that
redirecting
output
command
to
chroot
newroot
command
will
create
file
x
relative
to
original
root
not
new
new
root
path
name
is
always
relative
to
current
Even
chroot
is
currently
newroot
gument
is
relative
to
current
root
running
This
command
can
be
run
only
by
exit
status
chroot
is
return
value
Example
Using
chroot
Utility
chroot
utility
provides
easy
way
to
extract
tar
files
written
with
absolute
filenames
to
different
It
is
necessary
to
copy
shared
libraries
used
by
tar
to
newroot
mkdir
cd
cp
cp
dd
|
chroot
tar
xvf
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Exercise
extreme
caution
when
referencing
device
files
new
root
file
References
by
routines
such
as
to
stderr
will
find
that
device
associated
with
file
descriptor
is
unknown
after
chroot
is
fchroot
change
root
directory
int
char
int
functions
cause
directory
to
become
root
starting
point
path
searches
path
names
beginning
with
working
directory
is
unaffected
by
path
argument
points
to
path
name
naming
fildes
argument
to
is
open
file
scriptor
directory
which
is
to
become
privilege
must
be
asserted
effective
set
process
to
change
root
While
is
always
possible
to
change
to
system
root
using
is
not
guaranteed
to
succeed
any
other
even
fildes
is
valid
all
entry
root
directory
is
interpreted
to
mean
root
directory
cannot
be
used
to
access
files
outside
subtree
rooted
root
can
be
used
to
reset
root
to
tory
that
was
opened
before
root
directory
was
Upon
successful
is
is
root
directory
remains
rno
is
set
to
indicate
function
will
fail
EACCES
Search
permission
is
denied
component
path
prefix
search
permission
is
denied
directory
referred
to
by
EBADF
descriptor
is
not
EFAULT
path
argument
points
to
illegal
EINVAL
function
attempted
to
change
to
directory
is
not
system
root
external
stances
do
not
allow
EINTR
A
signal
was
caught
during
execution
EIO
An
error
occurred
while
reading
from
writing
to
file
ELOOP
Too
many
symbolic
links
were
encountered
translating
ENAMETOOLONG
length
path
argument
exceeds
length
path
component
ceeds
while
is
ENOENT
named
directory
does
not
exist
is
null
ENOLINK
path
argument
points
to
remote
machine
link
to
that
machine
is
no
longer
ENOTDIR
Any
component
path
name
is
not
EPERM
privilege
is
not
asserted
effective
set
calling
only
use
that
is
appropriate
is
to
change
back
to
system
chxge
Chelsio
Ethernet
network
interface
controllers
chxge
Ethernet
driver
is
STREAMS
hardware
driver
supporting
nectionless
Data
Link
Provider
over
Chelsio
NIC
Multiple
NIC
trollers
installed
within
system
are
supported
by
chxge
driver
provides
basic
support
NIC
Functions
include
chip
frame
transmit
error
recovery
device
is
used
to
access
NIC
devices
installed
within
chxge
driver
is
dependent
loadable
kernel
module
that
provides
chxge
driver
with
DLPI
STREAMS
functionality
required
LAN
See
more
details
primitives
ported
by
values
returned
by
driver
primitive
response
to
Default
Maximum
SDU
is
dlsap
address
length
is
MAC
type
is
sap
length
value
is
meaning
physical
address
component
is
followed
immediately
by
sap
component
within
DLSAP
Broadcast
address
value
is
broadcast
address
Character
special
SPARC
chxge
driver
platform
kernel
platform
kernel
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
cimagl
complex
imaginary
functions
double
complex
float
complex
long
double
double
complex
These
functions
compute
imaginary
part
These
functions
return
imaginary
part
value
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
valdate
prompts
validates
date
ckdate
pid
input
ckdate
utility
prompts
user
validates
It
among
other
prompt
message
whose
response
should
be
text
help
error
default
value
will
be
returned
user
responds
with
user
response
must
match
defined
format
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
will
be
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
will
be
Three
visual
tool
modules
are
linked
to
ckdate
They
are
errdate
formats
displays
error
helpdate
formats
displays
help
valdate
validates
These
modules
should
be
used
conjunction
with
FML
In
this
FML
object
defines
When
format
is
defined
errdate
helpdate
messages
will
describe
expected
following
options
are
default
Defines
default
value
as
default
does
not
have
to
meet
format
error
Defines
error
message
as
format
Specifies
format
against
which
input
will
be
Possible
formats
definitions
abbreviated
month
name
full
month
name
day
month
date
as
default
day
month
single
digits
are
preceded
by
abbreviated
month
identical
to
month
number
year
within
century
year
as
CCYY
help
Defines
help
messages
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
against
format
following
exit
values
are
Successful
EOF
negative
width
usage
User
termination
Garbled
format
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
default
prompt
ckdate
Enter
date
default
error
message
ERROR
Please
enter
Format
is
default
help
message
Please
enter
Format
is
When
quit
option
is
chosen
q
is
returned
along
with
return
code
valdate
module
will
not
produce
any
It
returns
zero
success
valgid
prompts
validates
group
id
ckgid
pid
input
ckgid
prompts
user
validates
It
among
other
prompt
message
whose
response
should
be
existing
group
text
help
error
default
value
will
be
returned
user
responds
with
carriage
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
will
be
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
will
be
Three
visual
tool
modules
are
linked
to
ckgid
They
are
errgid
formats
displays
error
helpgid
formats
displays
help
valgid
validates
These
modules
should
be
used
conjunction
with
FML
In
this
FML
object
defines
following
options
are
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
help
Defines
help
messages
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
Displays
list
all
groups
when
help
is
requested
when
user
makes
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
against
following
exit
values
are
Successful
EOF
negative
width
usage
User
termination
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
default
prompt
ckgid
Enter
name
existing
group
default
error
message
Please
enter
one
following
group
If
option
ckgid
is
list
valid
groups
is
displayed
default
help
message
Please
enter
one
following
group
If
option
ckgid
is
list
valid
groups
is
displayed
When
quit
option
is
chosen
q
is
returned
along
with
return
code
valgid
module
will
not
produce
any
It
returns
success
valint
display
verify
return
integer
value
ckint
pid
input
ckint
utility
prompts
then
validates
It
among
other
prompt
message
whose
response
should
be
text
help
error
default
value
will
be
returned
user
responds
with
carriage
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
will
be
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
will
be
Three
visual
tool
modules
are
linked
to
ckint
They
are
errint
formats
displays
error
helpint
formats
displays
help
valint
validates
These
modules
should
be
used
conjunction
with
FML
In
this
FML
object
defines
When
base
is
defined
errint
helpint
messages
will
include
expected
base
following
options
are
base
Defines
base
Must
be
to
default
is
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
help
Defines
help
messages
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
against
base
following
exit
values
are
Successful
EOF
negative
width
usage
User
termination
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
default
base
prompt
ckint
Enter
integer
default
base
error
message
ERROR
Please
enter
default
base
help
message
Please
enter
messages
are
changed
from
to
base
base
is
set
to
number
other
than
When
quit
option
is
chosen
q
is
returned
along
with
return
code
valint
module
will
not
produce
any
It
returns
success
helpitem
build
prompt
return
menu
item
ckitem
pid
ckitem
utility
builds
menu
prompts
user
to
choose
one
item
from
menu
It
then
verifies
Options
this
command
among
other
prompt
message
whose
response
will
be
menu
text
help
error
default
value
will
be
returned
user
responds
with
riage
By
menu
is
formatted
that
each
item
is
prepended
by
number
is
printed
columns
across
Column
length
is
determined
by
longest
Items
are
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
will
be
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
will
be
Two
visual
tool
modules
are
linked
to
ckitem
They
are
erritem
formats
displays
error
helpitem
formats
displays
help
These
modules
should
be
used
conjunction
with
FML
In
this
FML
object
defines
When
choice
is
defined
these
messages
will
describe
available
menu
choice
following
options
are
default
Define
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Define
error
message
as
filename
Define
which
contains
list
menu
items
to
be
format
this
file
Lines
beginning
with
pound
sign
are
designated
as
comments
help
Define
help
messages
as
invis
Define
invisible
menu
choices
which
will
not
be
printed
used
as
invisible
choice
would
mean
is
legal
option
does
not
appear
Any
number
invisible
choices
may
be
Invisible
choices
should
be
made
known
to
user
prompt
help
pid
Specify
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
label
Define
to
print
above
max
Define
maximum
number
menu
choices
that
user
can
default
is
Specify
that
menu
items
should
not
be
displayed
alphabetical
Specify
that
only
one
menu
token
will
be
prompt
Define
prompt
message
as
Specify
that
quit
will
not
be
allowed
as
valid
signal
Specify
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
Specify
that
menu
items
should
be
displayed
as
unnumbered
width
Specify
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
choice
Define
menu
Items
should
be
separated
by
white
space
following
exit
values
are
Successful
EOF
negative
width
inability
to
open
file
usage
User
termination
No
choices
from
which
to
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
user
may
input
number
menu
item
choices
are
numbered
as
much
string
required
unique
identification
Long
menus
are
paged
with
items
per
When
menu
entries
are
defined
both
file
using
also
command
are
usually
combined
option
is
used
to
suppress
alphabetical
then
entries
fined
file
are
shown
followed
by
options
defined
command
default
prompt
ckitem
Enter
selection
One
question
mark
will
give
help
message
then
redisplay
Two
question
marks
will
give
help
message
then
redisplay
menu
menu
default
error
message
typed
number
Bad
numeric
choice
specification
default
error
message
typed
string
Entry
does
not
match
available
menu
Enter
number
menu
item
wish
to
token
which
is
associated
with
menu
partial
string
which
uniquely
identifies
token
menu
Enter
to
reprint
default
help
message
Enter
number
menu
item
wish
to
token
which
is
associated
with
menu
partial
string
which
uniquely
identifies
token
menu
Enter
to
reprint
When
quit
option
is
chosen
q
is
returned
along
with
return
code
ckkeywd
prompts
validates
keyword
ckkeywd
pid
keyword
ckkeywd
prompts
user
validates
It
among
other
prompt
message
whose
sponse
should
be
one
list
text
help
error
default
value
will
be
turned
user
responds
with
carriage
answer
returned
from
this
command
must
match
one
defined
list
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
will
be
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
will
be
following
options
are
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
help
Defines
help
messages
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
keyword
Defines
list
against
which
answer
will
be
following
exit
values
are
Successful
EOF
negative
width
no
keywords
from
which
to
usage
User
termination
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
default
prompt
ckkeywd
Enter
appropriate
value
default
error
message
Please
enter
one
following
default
help
message
When
quit
option
is
chosen
q
is
returned
along
with
return
code
valpath
display
verify
return
pathname
ckpath
|
|
c
|
f
|
|
pid
|
|
c
|
f
|
|
|
|
c
|
f
|
|
|
|
c
|
f
|
|
input
ckpath
utility
prompts
user
validates
It
among
other
prompt
message
whose
response
should
be
text
help
error
default
value
is
returned
user
responds
with
pathname
must
obey
criteria
specified
by
first
group
If
no
criteria
is
pathname
must
be
normal
file
that
does
not
yet
If
is
then
is
sumed
to
be
All
messages
are
limited
length
to
characters
are
formatted
Tabs
newlines
are
removed
after
single
white
space
character
message
spaces
are
not
When
tilde
is
placed
beginning
end
message
default
text
is
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
is
Three
visual
tool
modules
are
linked
to
ckpath
They
are
errpath
formats
displays
ror
message
standard
helppath
formats
displays
help
message
standard
valpath
validates
following
options
are
Pathname
must
be
absolute
Pathname
must
be
block
special
Pathname
must
be
character
special
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
Pathname
must
be
regular
help
Defines
help
message
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
Pathname
must
be
relative
Pathname
must
not
exist
be
Pathname
must
exist
be
prompt
Defines
prompt
message
as
Specifies
that
quit
is
not
allowed
as
valid
Pathname
must
be
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
Pathname
must
be
creatable
Pathname
will
be
created
does
not
already
Pathname
must
be
width
Specify
that
help
error
messages
be
formatted
to
line
length
Pathname
must
be
Pathname
must
be
Pathname
must
have
file
having
size
greater
than
zero
following
operand
is
input
Input
to
be
verified
against
validation
text
default
messages
ckpath
depends
upon
criteria
options
that
have
been
Example
fault
prompt
An
example
default
prompt
ckpath
ckpath
Enter
absolute
pathname
Example
Default
error
message
An
example
default
error
message
A
pathname
is
optionally
preceded
by
parent
pathname
must
begin
with
slash
Example
Default
help
message
An
example
default
help
message
A
pathname
is
optionally
preceded
by
parent
pathname
must
begin
with
slash
Example
quit
option
When
quit
option
is
chosen
q
is
returned
along
with
return
code
Quit
input
gets
trailing
Example
Using
valpath
module
valpath
module
will
produce
usage
message
It
returns
success
valpath
input
following
exit
values
are
Successful
EOF
negative
width
usage
Mutually
exclusive
User
termination
Mutually
exclusive
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
valrange
prompts
validates
integer
ckrange
pid
input
ckrange
utility
prompts
user
integer
between
specified
range
determines
whether
this
response
is
It
among
other
prompt
message
whose
response
should
be
integer
range
text
help
error
default
value
is
returned
user
responds
with
This
command
also
defines
range
valid
If
lower
upper
limit
is
left
then
range
is
bounded
only
one
All
messages
are
limited
length
to
characters
are
formatted
Tabs
newlines
are
removed
after
single
whitespace
character
message
spaces
are
not
When
tilde
is
placed
beginning
end
message
default
text
will
be
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
is
Three
visual
tool
modules
are
linked
to
ckrange
They
are
errange
formats
displays
ror
message
standard
helprange
formats
displays
help
message
standard
valrange
validates
Negative
arguments
confuse
getopt
By
inserting
before
getopt
cessing
will
See
about
getopt
parameter
getopt
is
used
to
parse
positional
rameters
to
check
legal
following
options
are
base
Defines
base
Must
be
to
default
is
Base
conversion
uses
Output
is
always
base
default
Defines
default
value
as
default
is
converted
using
desired
Any
ters
invalid
specified
base
will
terminate
strtol
conversion
without
error
Defines
error
message
as
help
Defines
help
message
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
lower
Defines
lower
limit
range
as
Default
is
largest
negative
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
upper
Defines
upper
limit
range
as
Default
is
largest
positive
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
against
upper
lower
limits
Example
Default
base
prompt
default
base
prompt
ckrange
ckrange
Enter
integer
between
Example
Default
base
error
message
default
base
error
message
Please
enter
integer
between
Example
Default
base
help
message
default
base
help
message
Please
enter
integer
between
Example
Changing
messages
base
other
than
messages
are
changed
from
to
base
base
is
set
to
number
other
than
For
Example
Using
quit
option
When
quit
option
is
chosen
q
is
returned
along
with
return
code
Quit
input
gets
trailing
Example
Using
valrange
module
valrange
module
will
produce
usage
message
It
returns
success
valrange
input
following
exit
values
are
Successful
EOF
negative
width
usage
Usage
User
termination
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
valstr
display
verify
return
string
answer
ckstr
pid
s
input
ckstr
utility
prompts
user
validates
It
among
other
prompt
message
whose
response
should
be
text
help
error
default
value
are
returned
user
sponds
with
answer
returned
from
this
command
must
match
defined
regular
expression
be
no
longer
than
length
If
no
regular
expression
is
valid
input
must
be
string
with
length
less
than
equal
to
length
defined
with
no
leading
trailing
white
If
no
length
is
length
is
not
All
messages
are
limited
length
to
characters
are
formatted
Tabs
newlines
are
removed
after
single
white
space
character
message
spaces
are
not
When
tilde
is
placed
beginning
end
message
default
text
will
be
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
is
Three
visual
tool
modules
are
linked
to
ckstr
They
are
errstr
formats
displays
error
message
standard
helpstr
formats
displays
help
message
standard
valstr
validates
following
options
are
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
help
Defines
help
message
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
length
Specifies
maximum
length
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
regexp
Specifies
regular
against
which
input
should
be
May
include
white
If
multiple
expressions
are
answer
need
match
only
one
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
against
format
length
regular
expression
Example
Default
prompt
default
prompt
ckstr
ckstr
Enter
appropriate
value
Example
Default
error
message
default
error
message
is
dependent
upon
type
validation
user
will
be
told
that
length
pattern
matching
default
error
message
Please
enter
string
which
contains
no
leading
trailing
spaces
Example
Default
help
message
default
help
message
is
also
dependent
upon
type
validation
If
regular
expression
has
been
message
regexp
Please
enter
string
which
matches
following
regexp
Other
messages
define
length
requirement
definition
Example
Using
quit
option
When
quit
option
is
chosen
q
is
returned
along
with
return
code
Quit
input
gets
trailing
Example
Using
valstr
module
valstr
module
will
produce
usage
message
It
returns
success
valstr
input
following
exit
values
are
Successful
EOF
negative
width
usage
Invalid
regular
User
termination
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
cksum
write
file
checksums
sizes
cksum
cksum
command
calculates
writes
to
standard
output
cyclic
redundancy
check
each
input
also
writes
to
standard
output
number
octets
each
For
each
file
processed
cksum
will
write
following
If
no
file
operand
was
path
name
leading
space
will
be
CRC
used
is
based
polynomial
used
CRC
error
checking
referenced
Ethernet
encoding
CRC
checksum
is
defined
by
generating
x
CRC
value
corresponding
to
given
file
is
defined
by
following
n
bits
to
be
evaluated
are
considered
to
be
coefficients
mod
polynomial
degree
These
n
bits
are
bits
from
with
most
significant
bit
being
most
significant
bit
first
octet
file
last
bit
being
least
significant
bit
last
padded
with
zero
bits
to
achieve
integral
number
followed
by
one
more
octets
representing
length
file
as
binary
least
significant
octet
smallest
number
octets
capable
representing
this
integer
is
is
multiplied
by
x
shifted
left
divided
by
using
mod
producing
remainder
degree
coefficients
are
considered
to
be
bit
sequence
is
complemented
result
is
following
operand
is
file
A
path
name
file
to
be
If
no
file
operands
are
standard
input
is
cksum
command
is
typically
used
to
quickly
compare
suspect
file
against
trusted
version
such
as
to
ensure
that
files
transmitted
over
noisy
media
arrive
this
comparison
cannot
be
considered
cryptographically
chances
damaged
file
producing
same
CRC
as
original
are
astronomically
deliberate
deception
is
probably
not
Although
input
files
to
cksum
can
be
any
results
need
not
be
what
would
be
expected
character
special
device
Since
this
document
does
not
specify
block
size
used
when
doing
checksums
character
cial
files
need
not
process
all
data
those
algorithm
is
expressed
terms
bitstream
divided
into
If
file
is
transmitted
between
two
systems
undergoes
any
data
transformation
as
moving
characters
into
bytes
changing
byte
ordering
to
identical
CRC
values
cannot
be
Implementations
performing
such
formations
may
extend
cksum
to
handle
such
See
description
behavior
cksum
when
encountering
files
greater
than
equal
to
Gbyte
See
descriptions
following
environment
variables
that
affect
execution
following
exit
values
are
All
files
were
processed
An
error
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
Interface
StabilityStandard
valtime
display
verify
return
time
day
cktime
pid
input
cktime
utility
prompts
user
validates
It
among
other
prompt
message
whose
response
should
be
text
help
error
default
value
is
returned
user
responds
with
user
response
must
match
defined
format
time
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
is
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
is
Three
visual
tool
modules
are
linked
to
cktime
They
are
errtime
formats
displays
ror
helptime
formats
displays
help
valtime
validates
These
modules
should
be
used
conjunction
with
FML
In
this
FML
object
defines
When
format
is
defined
errtime
helptime
messages
will
describe
expected
following
options
are
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
format
Specifies
format
against
which
input
will
be
Possible
formats
definitions
hour
hour
minute
ante
meridian
post
meridian
time
as
time
as
default
seconds
time
as
help
Defines
help
messages
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
against
format
following
exit
values
are
Successful
EOF
negative
width
usage
error
User
termination
Garbled
format
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
default
prompt
cktime
Enter
time
day
default
error
message
Please
enter
time
Format
is
default
help
message
Please
enter
time
Format
is
When
quit
option
is
chosen
q
is
returned
along
with
return
code
valtime
module
will
not
produce
any
It
returns
success
valuid
prompts
validates
user
ID
ckuid
pid
input
ckuid
utility
prompts
user
validates
It
among
other
prompt
message
whose
response
should
be
existing
user
text
help
error
default
value
are
returned
user
responds
with
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
is
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
is
Three
visual
tool
modules
are
linked
to
ckuid
They
are
erruid
formats
displays
error
helpuid
formats
displays
help
valuid
validates
These
modules
should
be
used
conjunction
with
FML
In
this
FML
object
defines
following
options
are
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
help
Defines
help
messages
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
Displays
list
all
logins
when
help
is
requested
when
user
makes
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
against
following
exit
values
are
Successful
EOF
negative
width
usage
Usage
User
termination
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
default
prompt
ckuid
Enter
login
name
existing
user
default
error
message
ERROR
Please
enter
login
name
existing
If
option
is
default
error
message
Please
enter
one
following
login
default
help
message
Please
enter
login
name
existing
If
option
is
default
help
message
Please
enter
one
following
login
When
quit
option
is
chosen
q
is
returned
along
with
return
code
valuid
module
will
not
produce
any
It
returns
success
valyorn
prompts
validates
ckyorn
pid
input
ckyorn
prompts
user
validates
It
among
other
prompt
message
yes
no
text
help
error
default
value
is
returned
user
responds
with
All
messages
are
limited
length
to
characters
are
formatted
Any
white
space
used
inition
is
option
cancels
automatic
When
tilde
is
placed
beginning
end
message
default
text
is
inserted
that
allowing
both
custom
text
default
text
to
be
If
help
error
message
is
not
default
message
defined
under
is
Three
visual
tool
modules
are
linked
to
ckyorn
They
are
erryorn
formats
displays
ror
helpyorn
formats
displays
help
valyorn
validates
These
modules
should
be
used
conjunction
with
FACE
In
this
FACE
object
defines
following
options
are
default
Defines
default
value
as
default
is
not
validated
does
not
have
to
meet
any
error
Defines
error
message
as
help
Defines
help
messages
as
pid
Specifies
that
process
ID
pid
is
to
be
sent
signal
user
chooses
to
prompt
Defines
prompt
message
as
Specifies
that
quit
will
not
be
allowed
as
valid
signal
Specifies
that
process
ID
pid
defined
with
option
is
to
be
sent
signal
signal
when
quit
is
If
no
signal
is
SIGTERM
is
width
Specifies
that
help
error
messages
will
be
formatted
to
line
length
following
operand
is
input
Input
to
be
verified
as
no
any
combination
following
exit
values
are
Successful
EOF
negative
width
usage
Usage
User
termination
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
default
prompt
ckyorn
Yes
No
default
error
message
ERROR
Please
enter
yes
default
help
message
To
respond
enter
To
respond
enter
When
quit
option
is
chosen
q
is
returned
along
with
return
code
valyorn
module
will
not
produce
any
It
returns
success
dispose
connectionless
LDAP
pointer
void
function
disposes
memory
allocated
by
It
should
be
called
when
all
CLDAP
communication
is
ld
LDAP
pointer
returned
by
previous
call
to
See
description
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
AvailabilitySUNWcsl
SUNWcslx
Interface
StabilityEvolving
LDAP
connectionless
communication
preparation
LDAP
int
host
name
host
which
LDAP
server
is
port
port
number
to
function
is
called
to
prepare
connectionless
LDAP
communication
It
allocates
LDAP
structure
which
is
passed
to
future
search
If
default
port
is
should
be
specified
host
can
contain
list
hosts
addresses
to
returns
pointer
to
LDAP
which
should
be
passed
to
subsequent
calls
to
Certain
fields
LDAP
structure
can
be
set
to
indicate
size
time
how
aliases
are
handled
during
See
more
If
error
will
return
NULL
errno
will
be
set
See
description
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
AvailabilitySUNWcsl
SUNWcslx
Interface
StabilityEvolving
connectionless
LDAP
search
int
char
int
char
char
int
LDAPMessage
char
function
performs
LDAP
search
using
Connectionless
LDAP
has
parameters
behavior
identical
to
that
except
addition
logdn
logdn
should
contain
distinguished
name
to
be
used
only
logging
purposed
by
LDAP
It
should
be
text
format
described
by
RFC
A
String
Representation
Distinguished
operates
using
CLDAP
protocol
over
Since
UDP
is
retry
mechanism
is
used
to
increase
function
can
be
used
to
set
two
retry
count
number
times
to
send
search
request
initial
timeout
that
mines
how
long
to
wait
response
before
timeout
is
specified
These
values
are
stored
members
ld
LDAP
default
values
set
are
retransmission
algorithm
used
Step
Set
current
timeout
to
current
LDAP
server
address
to
first
LDAP
server
found
during
Step
Send
search
request
to
current
LDAP
server
Step
Set
wait
timeout
to
current
timeout
divided
by
number
server
addresses
found
during
to
one
whichever
is
Wait
most
that
long
response
is
Note
that
wait
timeout
is
always
rounded
down
to
next
lowest
Step
Repeat
steps
each
LDAP
server
Step
Set
current
timeout
to
twice
previous
value
repeat
Steps
through
maximum
tries
Assume
that
default
values
tries
timeout
tries
seconds
are
assume
that
separated
list
two
each
with
one
was
passed
to
pattern
requests
sent
will
be
as
soon
as
response
is
Time
Search
Request
Sent
Host
A
try
Host
B
try
Host
A
try
Host
B
try
Host
A
try
Host
B
try
Host
A
try
Host
B
try
up
no
returns
search
was
successful
appropriate
LDAP
error
code
See
more
See
description
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
AvailabilitySUNWcsl
SUNWcslx
Interface
StabilityEvolving
set
connectionless
LDAP
request
retransmission
parameters
void
int
int
ld
LDAP
pointer
returned
from
previous
call
to
tries
Maximum
number
times
to
send
timeout
Initial
to
wait
before
function
is
used
to
set
CLDAP
request
retransmission
behavior
future
default
values
by
are
tries
seconds
between
See
complete
description
retransmission
algorithm
See
description
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
AvailabilitySUNWcsl
SUNWcslx
Interface
StabilityEvolving
clear
clear
terminal
screen
clear
clear
utility
clears
terminal
screen
this
is
It
looks
environment
terminal
this
is
not
already
specified
by
term
then
looks
up
terminfo
database
to
figure
out
how
to
clear
term
Indicates
type
this
operand
is
unnecessary
default
is
taken
from
ronment
variable
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
werase
clear
window
cc
int
int
int
int
functions
clear
destroying
previous
tions
perform
same
clear
window
specified
by
win
instead
functions
also
call
This
function
clears
redraws
entire
screen
next
call
to
current
background
character
is
used
to
clear
win
Is
pointer
to
window
that
is
to
be
OK
Successful
ERR
An
error
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
clear
locks
held
behalf
NFS
client
hostname
command
removes
all
share
locks
created
by
hostname
held
current
regardless
which
process
created
owns
This
command
can
be
run
only
by
This
command
should
only
be
used
to
repair
rare
case
client
crashing
failing
to
clear
held
ing
locks
held
by
active
client
may
cause
applications
to
fail
unexpected
Remove
all
locks
created
by
current
machine
held
by
server
following
operands
are
hostname
name
host
server
Successful
If
not
Usage
If
unable
to
contact
server
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
wsetscrreg
terminal
output
control
functions
cc
int
bool
int
bool
int
bool
int
bool
int
int
int
int
int
These
functions
set
options
that
deal
with
output
within
Curses
function
assigns
value
bf
to
internal
flag
specified
window
that
governs
clearing
screen
during
during
refresh
operation
specified
flag
curscr
is
TRUE
flag
specified
window
is
clears
redraws
sets
flag
to
FALSE
curscr
specified
initial
state
is
unspecified
function
specifies
whether
implementation
may
use
hardware
scroll
features
terminals
If
bf
is
use
these
features
is
If
bf
is
use
these
tures
is
disabled
lines
are
instead
redrawn
as
initial
state
is
function
controls
cursor
position
after
refresh
If
bf
is
refresh
operations
specified
window
may
leave
cursor
arbitrary
If
bf
is
then
end
any
fresh
cursor
is
positioned
cursor
position
contained
specified
tial
state
is
function
controls
use
bf
is
then
scrolling
is
enabled
specified
If
bf
is
scrolling
is
disabled
specified
initial
state
is
functions
define
software
scrolling
region
current
specified
top
bottom
arguments
are
line
numbers
first
last
line
defining
scrolling
is
top
line
If
this
option
are
attempt
to
move
off
last
line
gin
causes
all
lines
scrolling
region
to
scroll
one
line
direction
first
Only
characters
window
are
If
software
scrolling
region
is
set
is
not
attempt
to
move
off
last
line
margin
does
not
reposition
any
lines
scrolling
win
Is
pointer
to
bf
Is
Boolean
top
Is
top
line
scrolling
region
window
is
line
bot
Is
bottom
line
scrolling
region
window
is
line
Upon
successful
functions
return
return
other
functions
always
return
No
errors
are
only
reason
to
enable
feature
is
to
use
scrolling
to
achieve
visual
effect
motion
partial
such
as
screen
In
other
feature
can
be
visually
option
provides
greater
efficiency
applications
that
do
not
use
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
clinfo
display
cluster
information
clinfo
clinfo
command
displays
cluster
configuration
information
about
node
from
which
command
is
Without
clinfo
returns
exit
status
node
is
configured
booted
as
part
clinfo
returns
exit
status
following
options
are
Displays
highest
node
number
allowed
to
be
This
is
different
from
maximum
number
nodes
supported
given
current
highest
configured
node
number
can
change
immediately
after
mand
returns
new
nodes
can
be
dynamically
added
to
running
For
clinfo
might
return
meaning
that
highest
number
can
use
to
identify
node
is
See
Sun
Cluster
System
Administration
Guide
description
utilities
can
use
to
determine
number
nodes
Prints
number
node
from
which
clinfo
is
following
exit
values
are
Successful
An
error
This
is
usually
node
is
not
configured
booted
as
part
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
clock
report
CPU
time
used
function
returns
amount
CPU
time
used
first
call
to
calling
time
reported
is
sum
user
system
times
calling
process
terminated
child
processes
which
has
executed
Dividing
value
returned
by
by
constant
defined
will
give
time
If
process
time
used
is
not
available
cannot
be
clock
returns
value
value
returned
by
is
defined
microseconds
compatibility
with
systems
that
have
CPU
clocks
with
much
higher
Because
value
returned
will
wrap
around
after
accumulating
only
seconds
CPU
time
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
high
resolution
sleep
with
specifiable
clock
int
int
const
struct
timespec
struct
timespec
If
flag
is
not
set
flags
function
causes
current
thread
to
be
suspended
from
execution
until
time
interval
specified
by
rqtp
argument
has
signal
is
delivered
to
calling
thread
action
is
to
invoke
process
is
clock
used
to
measure
time
is
clock
specified
by
If
flag
is
set
flags
function
causes
current
thread
to
be
suspended
from
execution
until
time
value
clock
specified
by
reaches
lute
time
specified
by
rqtp
signal
is
delivered
to
calling
thread
action
is
to
invoke
process
is
time
time
value
specified
by
rqtp
is
less
than
equal
to
time
value
specified
then
returns
immediately
calling
process
is
not
suspension
time
caused
by
this
function
can
be
longer
than
requested
argument
value
is
rounded
up
to
integer
multiple
sleep
scheduling
other
activity
by
cept
case
being
interrupted
by
suspension
time
relative
function
with
flag
not
will
not
be
less
than
time
interval
specified
by
as
sured
by
corresponding
suspension
absolute
function
with
flag
will
be
effect
least
until
value
corresponding
clock
reaches
absolute
time
specified
by
except
case
being
interrupted
by
use
function
has
no
effect
action
blockage
any
function
fails
argument
refers
to
clock
calling
It
is
unspecified
values
other
clocks
are
If
function
returns
requested
time
has
return
value
is
If
function
returns
has
been
interrupted
by
returns
corresponding
ror
For
relative
rmtp
argument
is
timespec
structure
enced
by
is
updated
to
contain
amount
time
remaining
interval
requested
time
minus
time
tually
If
rmtp
argument
is
remaining
time
is
not
absolute
function
has
no
effect
structure
referenced
by
If
shall
return
corresponding
error
function
will
fail
EINTR
function
was
interrupted
by
EINVAL
rqtp
argument
specified
nanosecond
value
less
than
zero
greater
than
equal
to
flag
was
specified
flags
rqtp
argument
is
outside
range
clock
specified
by
argument
does
not
specify
known
specifies
clock
calling
ENOTSUP
argument
specifies
clock
which
is
not
such
as
time
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Committed
StandardSee
clock
operations
int
const
struct
timespec
int
struct
timespec
int
struct
timespec
function
sets
specified
to
value
specified
by
Time
values
that
are
tween
two
consecutive
integer
multiples
resolution
specified
clock
are
truncated
down
to
smaller
multiple
function
returns
current
value
tp
specified
resolution
any
clock
can
be
obtained
by
calling
Clock
resolutions
are
cannot
be
set
by
If
argument
res
is
not
resolution
specified
clock
is
stored
tion
pointed
to
by
If
res
is
clock
resolution
is
not
If
time
argument
is
not
multiple
then
value
is
truncated
to
multiple
A
clock
may
be
systemwide
visible
to
all
time
that
is
meaningful
only
within
A
is
defined
This
clock
represents
realtime
clock
For
this
values
returned
by
specified
by
represent
amount
time
seconds
Additional
clocks
may
also
be
interpretation
time
values
these
clocks
is
A
represents
clock
For
this
value
returned
by
represents
amount
time
seconds
some
arbitrary
time
is
not
correlated
any
way
to
time
thus
is
not
subject
to
resetting
drifting
by
way
time
source
this
clock
is
same
as
that
Additional
clocks
may
also
be
interpretation
time
values
these
clocks
is
Upon
successful
is
is
returned
errno
is
set
to
indicate
functions
will
fail
EINVAL
argument
does
not
specify
known
ENOSYS
functions
are
not
supported
by
this
function
will
fail
EINVAL
tp
argument
to
is
outside
range
given
clock
tp
argument
fied
nanosecond
value
less
than
zero
greater
than
equal
to
function
may
fail
EPERM
requesting
process
does
not
have
appropriate
privilege
to
set
specified
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
tyCommitted
is
StandardSee
clogl
complex
natural
logarithm
functions
double
complex
complex
float
complex
complex
long
double
complex
double
complex
These
functions
compute
complex
natural
logarithm
with
branch
cut
along
negative
real
These
functions
return
complex
natural
logarithm
range
strip
mathematically
unbounded
along
real
axis
interval
along
imaginary
No
errors
are
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
close
close
file
descriptor
int
function
deallocates
file
descriptor
indicated
by
To
deallocate
means
to
make
file
tor
available
return
by
subsequent
calls
to
other
functions
that
allocate
file
All
ing
record
locks
owned
by
process
file
associated
with
file
descriptor
will
be
removed
If
is
interrupted
by
signal
that
is
to
be
will
return
with
errno
set
to
EINTR
state
fildes
is
If
error
occurred
while
reading
from
writing
to
file
system
during
turns
sets
errno
to
state
fildes
is
When
all
file
descriptors
associated
with
pipe
FIFO
special
file
are
any
data
remaining
pipe
FO
will
be
When
all
file
descriptors
associated
with
open
file
description
have
been
closed
open
file
description
will
be
If
link
count
file
is
when
all
file
descriptors
associated
with
file
are
space
occupied
by
file
will
be
freed
file
will
no
longer
be
If
fildes
is
closed
calling
process
was
previously
registered
to
receive
POLL
signal
events
associated
with
that
stream
calling
process
will
be
unregistered
events
associated
with
last
stream
causes
stream
sociated
with
fildes
to
be
If
are
not
set
there
have
been
no
nals
posted
there
is
data
write
waits
up
to
seconds
each
module
any
output
to
drain
before
dismantling
time
delay
can
be
changed
via
request
If
flag
is
there
are
any
pending
does
not
wait
output
to
dismantles
stream
If
fildes
is
associated
with
one
end
last
causes
hangup
to
occur
other
end
In
other
end
pipe
has
been
named
by
then
last
forces
named
end
to
be
detached
by
If
named
end
has
no
open
file
descriptors
associated
with
gets
stream
associated
with
that
end
is
also
If
fildes
refers
to
master
side
SIGHUP
signal
is
sent
to
session
which
slave
side
is
controlling
It
is
unspecified
whether
closing
master
side
flushes
all
queued
input
If
fildes
refers
to
slave
side
message
may
be
sent
to
When
there
is
outstanding
cancelable
asynchronous
operation
against
fildes
when
is
that
operation
is
An
operation
that
is
not
canceled
completes
as
operation
had
not
yet
All
operations
that
are
not
canceled
will
complete
as
blocked
until
operations
If
shared
memory
object
memory
mapped
file
remains
referenced
last
close
process
has
then
entire
contents
memory
object
will
persist
until
memory
object
becomes
If
this
is
last
close
shared
memory
object
memory
mapped
file
close
results
memory
ject
becoming
memory
object
has
been
then
memory
object
will
be
If
fildes
refers
to
causes
socket
to
be
If
socket
is
option
is
set
socket
with
linger
socket
has
untransmitted
then
will
block
up
to
current
linger
interval
until
all
data
is
Upon
successful
is
is
returned
errno
is
set
to
indicate
function
will
fail
EBADF
fildes
argument
is
not
valid
file
EINTR
function
was
interrupted
by
ENOLINK
fildes
argument
is
remote
machine
link
to
that
machine
is
no
longer
ENOSPC
There
was
no
free
space
remaining
device
containing
function
may
fail
EIO
An
error
occurred
while
reading
from
writing
to
file
Example
Reassign
file
following
example
closes
file
descriptor
associated
with
standard
output
current
standard
output
to
new
file
closes
original
file
descriptor
to
clean
This
example
assumes
that
file
descriptor
which
is
descriptor
standard
is
not
int
this
is
exactly
what
could
be
achieved
Example
Close
file
In
following
is
used
to
close
file
descriptor
after
unsuccessful
attempt
is
made
to
associate
that
file
descriptor
with
LOCKFILE
int
FILE
fdopen
{
}
An
application
that
used
stdio
function
to
open
file
should
use
corresponding
tion
rather
than
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
close
relinquish
access
to
device
int
int
int
int
int
Architecture
independent
level
This
entry
point
is
required
block
dev
Device
flag
File
status
as
set
by
modified
by
system
flag
is
information
file
should
always
be
closed
Possible
values
Refer
to
more
otyp
Parameter
supplied
that
driver
can
determine
how
many
times
device
was
opened
what
flags
assume
routine
may
be
called
many
routine
should
only
be
called
last
Close
was
through
block
interface
Close
was
through
interface
Close
layered
process
driver
called
routine
Pointer
to
user
credential
Pointer
to
structure
used
to
reference
read
side
queue
is
central
node
lection
structures
routines
pointed
to
by
flag
File
status
Pointer
to
user
credential
For
STREAMS
routine
is
called
by
kernel
through
table
entry
use
fmodsw
A
value
field
entry
points
to
streamtab
which
points
to
containing
pointer
to
routines
are
called
directly
from
ends
connection
between
user
process
prepares
device
that
is
ready
to
be
opened
A
device
may
be
opened
simultaneously
by
multiple
processes
driver
routine
is
called
each
For
all
otyp
values
other
than
kernel
calls
routine
when
For
each
close
operation
will
call
Kernel
accounting
occurs
Note
that
device
is
referenced
once
ciated
routine
is
thus
which
have
not
yet
completed
will
prevent
from
ing
call
associated
with
going
away
is
typically
issued
as
result
failed
call
can
cause
this
call
to
be
issued
as
result
kernel
provides
exclusion
guarantees
to
driver
same
otyp
granularity
as
ence
kernel
delays
new
calls
to
driver
routine
while
call
is
For
driver
that
blocks
will
not
see
new
calls
to
until
returns
from
This
effectively
delays
invocation
other
driver
entry
points
that
also
depend
lished
device
If
driver
has
indicated
that
EINTR
return
is
safe
via
TR
then
delayed
may
be
interrupted
by
resulting
EINTR
return
from
prior
to
calling
accounting
exclusion
typically
simplify
driver
In
some
might
be
impediment
certain
types
To
overcome
any
driver
can
change
minor
numbers
as
described
implement
multiple
minor
nodes
same
Both
techniques
give
driver
control
over
when
calls
occur
whether
additional
calls
will
be
delayed
while
is
In
routine
should
always
check
validity
minor
number
component
dev
routine
should
also
check
permissions
as
by
using
user
credential
structure
appropriateness
flag
otyp
parameter
could
perform
any
following
general
disable
interrupts
hang
up
phone
lines
rewind
tape
deallocate
buffers
from
private
buffering
scheme
unlock
unsharable
device
was
locked
flush
buffers
notify
device
close
deallocate
any
resources
allocated
open
routines
STREAMS
drivers
modules
are
called
when
stream
is
dismantled
module
steps
dismantling
stream
are
performed
following
any
multiplexor
links
present
are
linked
lower
streams
are
following
steps
are
performed
each
module
driver
starting
head
working
toward
write
queue
is
given
chance
to
routine
is
module
driver
is
removed
from
should
return
appropriate
error
Return
errors
rarely
failure
is
driver
should
decide
whether
severity
problem
warrants
displaying
message
sole
worst
triggering
system
failure
routine
occurs
problem
occurred
associated
If
use
should
note
that
may
be
called
contexts
which
signals
cannot
be
function
is
provided
to
determine
when
this
hazard
Writing
Device
Drivers
STREAMS
Programming
Guide
Guide
closedir
close
directory
stream
int
function
closes
directory
stream
referred
to
by
argument
Upon
value
dirp
may
no
longer
point
to
accessible
object
type
If
file
descriptor
is
used
to
implement
type
that
file
descriptor
will
be
Upon
successful
returns
is
returned
errno
is
set
to
indicate
function
may
fail
EBADF
dirp
argument
does
not
refer
to
open
directory
EINTR
function
was
interrupted
by
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
fdwalk
close
iterate
over
open
file
descriptors
void
int
void
function
calls
all
open
file
descriptors
greater
than
equal
to
effect
is
same
as
code
struct
rlimit
int
i
except
that
is
called
only
file
descriptors
that
are
actually
not
every
possible
file
descriptor
greater
than
equal
to
is
also
called
any
open
file
descriptors
greater
than
equal
to
should
any
function
first
makes
list
all
currently
open
file
Then
each
file
descriptor
calls
passing
pointer
to
callback
value
file
descriptor
from
list
is
processed
file
descriptor
value
lowest
numeric
value
If
returns
iteration
over
list
is
terminated
returns
value
turned
by
returns
after
having
called
every
file
descriptor
function
can
be
used
control
over
closing
file
For
function
can
be
implemented
static
int
int
{
return
}
void
{
}
function
can
then
be
used
to
count
number
open
files
No
return
value
is
defined
If
fails
any
open
file
error
is
ignored
file
descriptors
whose
operation
failed
might
remain
open
return
from
function
returns
return
value
last
call
to
callback
function
is
never
called
open
No
errors
are
functions
do
not
set
errno
errno
can
be
set
by
by
another
function
called
by
callback
directory
open
act
closing
all
open
file
descriptors
should
be
performed
only
as
first
action
daemon
Closing
file
descriptors
that
are
use
elsewhere
current
process
normally
leads
to
disastrous
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
clrbuf
erase
contents
buffer
void
buf
Architecture
independent
level
bp
Pointer
to
function
zeros
buffer
sets
member
structure
to
Zeros
are
placed
buffer
starting
length
are
bers
data
function
can
be
called
from
kernel
Writing
Device
Drivers
Drivers
dcopy
clear
inode
clri
special
dcopy
special
clri
writes
zeros
inodes
with
decimal
file
system
stored
After
any
blocks
affected
file
show
up
as
missing
Read
write
permission
is
required
specified
file
system
inode
becomes
primary
purpose
this
routine
is
to
remove
file
that
some
reason
appears
no
If
is
used
to
zap
inode
that
does
appear
care
should
be
taken
to
track
down
entry
remove
when
inode
is
reallocated
to
some
new
old
entry
will
still
point
to
that
At
that
removing
old
entry
will
destroy
new
new
entry
will
again
point
to
unallocated
whole
cycle
is
ly
to
be
repeated
again
dcopy
is
symbolic
link
to
FSType
Specify
FSType
which
to
FSType
should
be
specified
here
be
determinable
from
by
matching
special
with
entry
by
consulting
Echo
complete
command
do
not
execute
command
line
is
generated
by
using
options
arguments
provided
by
user
adding
to
information
derived
from
This
option
should
be
used
to
verify
validate
command
See
description
behavior
clri
dcopy
when
encountering
files
greater
than
equal
to
Gbyte
Default
local
file
system
type
List
default
parameters
each
file
system
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Wcsu
This
command
might
not
be
supported
all
wclrtobot
clear
to
end
window
cc
int
int
function
clears
all
characters
stdscr
window
from
cursor
to
end
function
performs
same
action
window
specified
by
win
instead
current
background
character
is
used
to
clear
If
clearing
action
results
clearing
only
portion
multicolumn
background
characters
are
played
place
remaining
win
Is
pointer
to
window
that
is
to
be
On
these
functions
return
return
See
descriptions
following
ATTRIBUTE
TYPEATTRIBUTE
VALUE
Interface
Standard
